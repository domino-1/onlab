[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module XSTS

// imports
  import K []

// sorts
  sort SortStateCellFragment{} []
  sort SortProgram{} []
  sort SortKCell{} []
  sort SortSequenceCell{} []
  sort SortChoiceIdCell{} []
  sort SortWork{} []
  sort SortTCellFragment{} []
  sort SortOrIdCellOpt{} []
  sort SortOsequenceCell{} []
  sort SortCsequenceCell{} []
  sort SortIdCell{} []
  sort SortVariableDeclaration{} []
  sort SortChoiceOrBlock{} []
  sort SortCurIdCell{} []
  sort SortTransition{} []
  sort SortCsequenceCellOpt{} []
  sort SortKCellOpt{} []
  sort SortTransitionCell{} []
  sort SortOrsCellOpt{} []
  sort SortOrIdCell{} []
  sort SortSequenceCellOpt{} []
  sort SortChoiceOrBlocks{} []
  sort SortChoicesCellOpt{} []
  sort SortOrsCellFragment{} []
  sort SortGeneratedTopCellFragment{} []
  hooked-sort SortList{} [concat{}(Lbl'Unds'List'Unds'{}()), element{}(LblListItem{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,3,913,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'List{}()), update{}(LblList'Coln'set{}())]
  sort SortVariablesCell{} []
  sort SortGeneratedTopCell{} []
  sort SortStateCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortChoicesCellFragment{} []
  sort SortHavoc{} []
  sort SortChoiceCellFragment{} []
  sort SortOrCell{} []
  sort SortChoicesCell{} []
  sort SortTCellOpt{} []
  sort SortSequence{} []
  hooked-sort SortMap{} [concat{}(Lbl'Unds'Map'Unds'{}()), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Map{}())]
  sort SortId{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2255,3,2255,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), token{}()]
  sort SortGeneratedCounterCellOpt{} []
  sort SortIdCellOpt{} []
  sort SortKConfigVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/kast.md)"), token{}()]
  sort SortChoiceCell{} []
  sort SortVariablesCellOpt{} []
  sort SortChoice{} []
  sort SortTransitions{} []
  sort SortAssignment{} []
  sort SortLiteral{} []
  hooked-sort SortInt{} [hasDomainValues{}(), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1198,3,1198,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  sort SortStateCellOpt{} []
  sort SortTransitionsCellFragment{} []
  hooked-sort SortSet{} [concat{}(Lbl'Unds'Set'Unds'{}()), element{}(LblSetItem{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,3,700,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Set{}())]
  hooked-sort SortTransitionCellMap{} [concat{}(Lbl'Unds'TransitionCellMap'Unds'{}()), element{}(LblTransitionCellMapItem{}()), hook{}("MAP.Map"), unit{}(Lbl'Stop'TransitionCellMap{}())]
  sort SortAssumption{} []
  sort SortOidCell{} []
  sort SortOsequenceCellOpt{} []
  sort SortOperation{} []
  sort SortCurIdCellOpt{} []
  sort SortOrsCell{} []
  sort SortOrCellFragment{} []
  sort SortTransitionsCell{} []
  sort SortOidCellOpt{} []
  sort SortChoiceIdCellOpt{} []
  hooked-sort SortChoiceCellMap{} [concat{}(Lbl'Unds'ChoiceCellMap'Unds'{}()), element{}(LblChoiceCellMapItem{}()), hook{}("MAP.Map"), unit{}(Lbl'Stop'ChoiceCellMap{}())]
  sort SortLine{} []
  hooked-sort SortOrCellMap{} [concat{}(Lbl'Unds'OrCellMap'Unds'{}()), element{}(LblOrCellMapItem{}()), hook{}("MAP.Map"), unit{}(Lbl'Stop'OrCellMap{}())]
  sort SortTCell{} []
  hooked-sort SortBool{} [hasDomainValues{}(), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,3,1077,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  sort SortTransitionsCellOpt{} []
  sort SortTransitionCellFragment{} []
  sort SortCidCellOpt{} []
  sort SortCidCell{} []

// symbols
  hooked-symbol Lbl'Stop'ChoiceCellMap{}() : SortChoiceCellMap{} [function{}(), hook{}("MAP.unit")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [function{}(), functional{}(), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,19,937,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_nil"), symbol'Kywd'{}(".List"), total{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks'QuotRBraUnds'ChoiceOrBlocks{}() : SortChoiceOrBlocks{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,31,22,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), symbol'Kywd'{}(".List{\"___XSTS-SYNTAX\"}")]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program'QuotRBraUnds'Program{}() : SortProgram{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,24,33,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), symbol'Kywd'{}(".List{\"___XSTS-SYNTAX\"}")]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence'QuotRBraUnds'Sequence{}() : SortSequence{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,25,27,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), symbol'Kywd'{}(".List{\"___XSTS-SYNTAX\"}")]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions'QuotRBraUnds'Transitions{}() : SortTransitions{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,28,25,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), symbol'Kywd'{}(".List{\"___XSTS-SYNTAX\"}")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [function{}(), functional{}(), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(".Map"), total{}()]
  hooked-symbol Lbl'Stop'OrCellMap{}() : SortOrCellMap{} [function{}(), hook{}("MAP.unit")]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [function{}(), functional{}(), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,18,729,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(".Set"), total{}()]
  hooked-symbol Lbl'Stop'TransitionCellMap{}() : SortTransitionCellMap{} [function{}(), hook{}("MAP.unit")]
  symbol Lbl'-LT-'T'-GT-'{}(SortKCell{}, SortStateCell{}, SortCurIdCell{}, SortChoiceIdCell{}, SortOrIdCell{}) : SortTCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,19,81,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortKCellOpt{}, SortStateCellOpt{}, SortCurIdCellOpt{}, SortChoiceIdCellOpt{}, SortOrIdCellOpt{}) : SortTCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'choice-id'-GT-'{}(SortInt{}) : SortChoiceIdCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,21,79,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'choice'-GT-'{}(SortCidCell{}, SortCsequenceCell{}) : SortChoiceCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,29,69,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'choice'-GT-'-fragment{}(SortCidCellOpt{}, SortCsequenceCellOpt{}) : SortChoiceCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'choices'-GT-'{}(SortChoiceCellMap{}) : SortChoicesCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,25,70,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'choices'-GT-'-fragment{}(SortChoiceCellMap{}) : SortChoicesCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'cid'-GT-'{}(SortInt{}) : SortCidCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,33,67,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'csequence'-GT-'{}(SortList{}) : SortCsequenceCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,33,68,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'cur-id'-GT-'{}(SortInt{}) : SortCurIdCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,21,78,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [cell{}(), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [cell{}(), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'id'-GT-'{}(SortInt{}) : SortIdCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,33,51,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,21,46,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'oid'-GT-'{}(SortInt{}) : SortOidCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,34,73,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'or-id'-GT-'{}(SortInt{}) : SortOrIdCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,21,80,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'or'-GT-'{}(SortOidCell{}, SortOsequenceCell{}) : SortOrCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,29,75,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'or'-GT-'-fragment{}(SortOidCellOpt{}, SortOsequenceCellOpt{}) : SortOrCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'ors'-GT-'{}(SortOrCellMap{}) : SortOrsCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,25,76,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'ors'-GT-'-fragment{}(SortOrCellMap{}) : SortOrsCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'osequence'-GT-'{}(SortList{}) : SortOsequenceCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(74,34,74,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'sequence'-GT-'{}(SortList{}) : SortSequenceCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,33,52,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'state'-GT-'{}(SortVariablesCell{}, SortTransitionsCell{}, SortChoicesCell{}, SortOrsCell{}) : SortStateCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,21,77,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'state'-GT-'-fragment{}(SortVariablesCellOpt{}, SortTransitionsCellOpt{}, SortChoicesCellOpt{}, SortOrsCellOpt{}) : SortStateCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'transition'-GT-'{}(SortIdCell{}, SortSequenceCell{}) : SortTransitionCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,29,63,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'transition'-GT-'-fragment{}(SortIdCellOpt{}, SortSequenceCellOpt{}) : SortTransitionCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'transitions'-GT-'{}(SortTransitionCellMap{}) : SortTransitionsCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,25,64,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'-LT-'transitions'-GT-'-fragment{}(SortTransitionCellMap{}) : SortTransitionsCellFragment{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'variables'-GT-'{}(SortMap{}) : SortVariablesCell{} [cell{}(), constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,25,48,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol LblChoiceCellMap'Coln'in'Unds'keys{}(SortCidCell{}, SortChoiceCellMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.in_keys"), total{}()]
  hooked-symbol LblChoiceCellMapItem{}(SortCidCell{}, SortChoiceCell{}) : SortChoiceCellMap{} [function{}(), hook{}("MAP.element")]
  symbol LblChoiceCellMapKey{}(SortChoiceCell{}) : SortCidCell{} [function{}(), functional{}(), total{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [function{}(), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,20,965,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:get")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [function{}(), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:range")]
  hooked-symbol LblList'Coln'set{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,19,974,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("List:set")]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [function{}(), functional{}(), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,19,945,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_elem"), symbol'Kywd'{}("ListItem"), total{}()]
  hooked-symbol LblMap'Coln'choice{}(SortMap{}) : SortKItem{} [function{}(), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:choice")]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [function{}(), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:lookup")]
  hooked-symbol LblMap'Coln'lookupOrDefault{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [function{}(), functional{}(), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:lookupOrDefault"), total{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Map:update"), total{}()]
  hooked-symbol LblOrCellMap'Coln'in'Unds'keys{}(SortOidCell{}, SortOrCellMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.in_keys"), total{}()]
  hooked-symbol LblOrCellMapItem{}(SortOidCell{}, SortOrCell{}) : SortOrCellMap{} [function{}(), hook{}("MAP.element")]
  symbol LblOrCellMapKey{}(SortOrCell{}) : SortOidCell{} [function{}(), functional{}(), total{}()]
  hooked-symbol LblSet'Coln'choice{}(SortSet{}) : SortKItem{} [function{}(), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(804,20,804,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:choice")]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,18,769,106)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:difference"), total{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [function{}(), functional{}(), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,19,777,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("Set:in"), total{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.element"), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,18,737,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("SetItem"), total{}()]
  hooked-symbol LblTransitionCellMap'Coln'in'Unds'keys{}(SortIdCell{}, SortTransitionCellMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.in_keys"), total{}()]
  hooked-symbol LblTransitionCellMapItem{}(SortIdCell{}, SortTransitionCell{}) : SortTransitionCellMap{} [function{}(), hook{}("MAP.element")]
  symbol LblTransitionCellMapKey{}(SortTransitionCell{}) : SortIdCell{} [function{}(), functional{}(), total{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,18,1250,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (or (= 0 (mod #1 #2)) (>= #1 0)) (mod #1 #2) (ite (> #2 0) (- (mod #1 #2) #2) (+ (mod #1 #2) #2)))"), symbol'Kywd'{}("_%Int_")]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,18,1261,125)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("andInt"), symbol'Kywd'{}("_&Int_"), total{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,18,1242,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("*"), symbol'Kywd'{}("_*Int_"), total{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1255,18,1255,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("+"), symbol'Kywd'{}("_+Int_"), total{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1256,18,1256,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("-"), symbol'Kywd'{}("_-Int_"), total{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,18,1247,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (or (= 0 (mod #1 #2)) (>= #1 0)) (div #1 #2) (ite (> #2 0) (+ (div #1 #2) 1) (- (div #1 #2) 1)))"), symbol'Kywd'{}("_/Int_")]
  symbol Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(SortId{}, SortLiteral{}) : SortAssignment{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,27,10,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1259,18,1259,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("shlInt"), symbol'Kywd'{}("_<<Int_")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1317,19,1317,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("<="), symbol'Kywd'{}("_<=Int_"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [function{}(), functional{}(), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,19,786,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,19,1318,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("<"), symbol'Kywd'{}("_<Int_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,19,1118,126)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=Bool_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1322,19,1322,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=Int_"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [function{}(), functional{}(), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2293,19,2293,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("distinct"), symbol'Kywd'{}("_=/=K_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,19,1117,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==Bool_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1321,19,1321,110)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==Int_"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [function{}(), functional{}(), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2292,19,2292,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("="), symbol'Kywd'{}("_==K_"), total{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1319,19,1319,105)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}(">="), symbol'Kywd'{}("_>=Int_"), total{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1258,18,1258,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("shrInt"), symbol'Kywd'{}("_>>Int_")]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), functional{}(), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1320,19,1320,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}(">"), symbol'Kywd'{}("_>Int_"), total{}()]
  hooked-symbol Lbl'Unds'ChoiceCellMap'Unds'{}(SortChoiceCellMap{}, SortChoiceCellMap{}) : SortChoiceCellMap{} [element{}(LblChoiceCellMapItem{}()), function{}(), hook{}("MAP.concat"), unit{}(Lbl'Stop'ChoiceCellMap{}())]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [element{}(LblListItem{}()), function{}(), functional{}(), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,19,929,198)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_concat"), symbol'Kywd'{}("_List_"), total{}(), unit{}(Lbl'Stop'List{}()), update{}(LblList'Coln'set{}())]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), function{}(), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_Map_"), unit{}(Lbl'Stop'Map{}())]
  hooked-symbol Lbl'Unds'OrCellMap'Unds'{}(SortOrCellMap{}, SortOrCellMap{}) : SortOrCellMap{} [element{}(LblOrCellMapItem{}()), function{}(), hook{}("MAP.concat"), unit{}(Lbl'Stop'OrCellMap{}())]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [element{}(LblSetItem{}()), function{}(), hook{}("SET.concat"), idem{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,18,721,157)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_Set_"), unit{}(Lbl'Stop'Set{}())]
  hooked-symbol Lbl'Unds'TransitionCellMap'Unds'{}(SortTransitionCellMap{}, SortTransitionCellMap{}) : SortTransitionCellMap{} [element{}(LblTransitionCellMapItem{}()), function{}(), hook{}("MAP.concat"), unit{}(Lbl'Stop'TransitionCellMap{}())]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_[_<-undef]"), total{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,18,1240,131)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(mod (^ #1 #2) #3)"), symbol'Kywd'{}("_^%Int__")]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,18,1239,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("^"), symbol'Kywd'{}("_^Int_")]
  symbol Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(SortChoiceOrBlock{}, SortChoiceOrBlocks{}) : SortChoiceOrBlocks{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,31,22,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(SortLine{}, SortProgram{}) : SortProgram{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,24,33,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(SortOperation{}, SortSequence{}) : SortSequence{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,25,27,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(SortTransition{}, SortTransitions{}) : SortTransitions{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,28,25,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1110,19,1110,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("and"), symbol'Kywd'{}("_andBool_"), total{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1111,19,1111,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("and"), symbol'Kywd'{}("_andThenBool_"), total{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1252,18,1252,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("div"), symbol'Kywd'{}("_divInt_")]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1331,19,1331,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1115,19,1115,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("=>"), symbol'Kywd'{}("_impliesBool_"), total{}()]
  hooked-symbol Lbl'Unds'inList'Unds'{}(SortKItem{}, SortList{}) : SortBool{} [function{}(), functional{}(), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1021,19,1021,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_inList_"), total{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [function{}(), functional{}(), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1253,18,1253,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("mod"), symbol'Kywd'{}("_modInt_")]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1113,19,1113,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("or"), symbol'Kywd'{}("_orBool_"), total{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,19,1114,143)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("or"), symbol'Kywd'{}("_orElseBool_"), total{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1112,19,1112,138)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("xor"), symbol'Kywd'{}("_xorBool_"), total{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1263,18,1263,127)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("xorInt"), symbol'Kywd'{}("_xorInt_"), total{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.element"), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("_|->_"), total{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1265,18,1265,123)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("orInt"), symbol'Kywd'{}("_|Int_"), total{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(748,18,748,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1282,18,1282,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), total{}()]
  symbol Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(SortLiteral{}) : SortAssumption{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,27,12,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,18,1307,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  symbol Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(SortInt{}) : SortChoice{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,64,20,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(SortSequence{}, SortChoiceOrBlocks{}) : SortChoice{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,23,20,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblempty'Unds'XSTS-SYNTAX'Unds'Literal{}() : SortLiteral{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,37,6,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1002,19,1002,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [freshGenerator{}(), function{}(), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1445,18,1445,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}()]
  symbol Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(SortId{}) : SortHavoc{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,22,11,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol LblinitChoiceCell{}() : SortChoiceCellMap{} [function{}(), functional{}(), total{}()]
  symbol LblinitChoiceIdCell{}() : SortChoiceIdCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitChoicesCell{}() : SortChoicesCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitCidCell{}() : SortCidCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitCsequenceCell{}() : SortCsequenceCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitCurIdCell{}() : SortCurIdCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [function{}()]
  symbol LblinitIdCell{}() : SortIdCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [function{}()]
  symbol LblinitOidCell{}() : SortOidCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitOrCell{}() : SortOrCellMap{} [function{}(), functional{}(), total{}()]
  symbol LblinitOrIdCell{}() : SortOrIdCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitOrsCell{}() : SortOrsCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitOsequenceCell{}() : SortOsequenceCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitSequenceCell{}() : SortSequenceCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitStateCell{}() : SortStateCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [function{}()]
  symbol LblinitTransitionCell{}() : SortTransitionCellMap{} [function{}(), functional{}(), total{}()]
  symbol LblinitTransitionsCell{}() : SortTransitionsCell{} [function{}(), functional{}(), total{}()]
  symbol LblinitVariablesCell{}() : SortVariablesCell{} [function{}(), functional{}(), total{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), functional{}(), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,18,759,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  symbol LblisAssignment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisAssumption{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoice{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceCellMap{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceIdCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceIdCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceOrBlock{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoiceOrBlocks{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoicesCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoicesCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisChoicesCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCidCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCidCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCsequenceCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCsequenceCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCurIdCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisCurIdCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisHavoc{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIdCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisIdCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisLine{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisLiteral{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOidCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOidCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOperation{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrCellMap{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrIdCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrIdCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrsCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrsCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOrsCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOsequenceCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisOsequenceCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisProgram{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisSequence{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisSequenceCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisSequenceCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStateCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStateCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisStateCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransition{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionCellMap{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitions{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionsCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionsCellFragment{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisTransitionsCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisVariableDeclaration{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisVariablesCell{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisVariablesCellOpt{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  symbol LblisWork{}(SortK{}) : SortBool{} [function{}(), functional{}(), total{}()]
  hooked-symbol Lblite{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [function{}(), functional{}(), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2297,26,2297,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("ite"), symbol'Kywd'{}("ite"), total{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [function{}(), functional{}(), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [function{}(), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1293,18,1293,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [function{}(), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(983,19,983,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1274,18,1274,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 #2) #2 #1)"), total{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1273,18,1273,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("(ite (< #1 #2) #1 #2)"), total{}()]
  symbol LblnoChoiceIdCell{}() : SortChoiceIdCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoChoicesCell{}() : SortChoicesCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoCidCell{}() : SortCidCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoCsequenceCell{}() : SortCsequenceCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoCurIdCell{}() : SortCurIdCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoIdCell{}() : SortIdCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoOidCell{}() : SortOidCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoOrIdCell{}() : SortOrIdCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoOrsCell{}() : SortOrsCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoOsequenceCell{}() : SortOsequenceCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoSequenceCell{}() : SortSequenceCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoStateCell{}() : SortStateCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoTCell{}() : SortTCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoTransitionsCell{}() : SortTransitionsCellOpt{} [constructor{}(), functional{}(), injective{}()]
  symbol LblnoVariablesCell{}() : SortVariablesCellOpt{} [constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [function{}(), functional{}(), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1109,19,1109,131)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smt-hook{}("not"), symbol'Kywd'{}("notBool_"), total{}()]
  symbol Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(SortInt{}) : SortChoiceOrBlock{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,52,21,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(SortSequence{}) : SortChoiceOrBlock{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,30,21,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblproject'Coln'Assignment{}(SortK{}) : SortAssignment{} [function{}()]
  symbol Lblproject'Coln'Assumption{}(SortK{}) : SortAssumption{} [function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}()]
  symbol Lblproject'Coln'Choice{}(SortK{}) : SortChoice{} [function{}()]
  symbol Lblproject'Coln'ChoiceCell{}(SortK{}) : SortChoiceCell{} [function{}()]
  symbol Lblproject'Coln'ChoiceCellFragment{}(SortK{}) : SortChoiceCellFragment{} [function{}()]
  symbol Lblproject'Coln'ChoiceCellMap{}(SortK{}) : SortChoiceCellMap{} [function{}()]
  symbol Lblproject'Coln'ChoiceIdCell{}(SortK{}) : SortChoiceIdCell{} [function{}()]
  symbol Lblproject'Coln'ChoiceIdCellOpt{}(SortK{}) : SortChoiceIdCellOpt{} [function{}()]
  symbol Lblproject'Coln'ChoiceOrBlock{}(SortK{}) : SortChoiceOrBlock{} [function{}()]
  symbol Lblproject'Coln'ChoiceOrBlocks{}(SortK{}) : SortChoiceOrBlocks{} [function{}()]
  symbol Lblproject'Coln'ChoicesCell{}(SortK{}) : SortChoicesCell{} [function{}()]
  symbol Lblproject'Coln'ChoicesCellFragment{}(SortK{}) : SortChoicesCellFragment{} [function{}()]
  symbol Lblproject'Coln'ChoicesCellOpt{}(SortK{}) : SortChoicesCellOpt{} [function{}()]
  symbol Lblproject'Coln'CidCell{}(SortK{}) : SortCidCell{} [function{}()]
  symbol Lblproject'Coln'CidCellOpt{}(SortK{}) : SortCidCellOpt{} [function{}()]
  symbol Lblproject'Coln'CsequenceCell{}(SortK{}) : SortCsequenceCell{} [function{}()]
  symbol Lblproject'Coln'CsequenceCellOpt{}(SortK{}) : SortCsequenceCellOpt{} [function{}()]
  symbol Lblproject'Coln'CurIdCell{}(SortK{}) : SortCurIdCell{} [function{}()]
  symbol Lblproject'Coln'CurIdCellOpt{}(SortK{}) : SortCurIdCellOpt{} [function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}()]
  symbol Lblproject'Coln'Havoc{}(SortK{}) : SortHavoc{} [function{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [function{}()]
  symbol Lblproject'Coln'IdCell{}(SortK{}) : SortIdCell{} [function{}()]
  symbol Lblproject'Coln'IdCellOpt{}(SortK{}) : SortIdCellOpt{} [function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}()]
  symbol Lblproject'Coln'Line{}(SortK{}) : SortLine{} [function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}()]
  symbol Lblproject'Coln'Literal{}(SortK{}) : SortLiteral{} [function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}()]
  symbol Lblproject'Coln'OidCell{}(SortK{}) : SortOidCell{} [function{}()]
  symbol Lblproject'Coln'OidCellOpt{}(SortK{}) : SortOidCellOpt{} [function{}()]
  symbol Lblproject'Coln'Operation{}(SortK{}) : SortOperation{} [function{}()]
  symbol Lblproject'Coln'OrCell{}(SortK{}) : SortOrCell{} [function{}()]
  symbol Lblproject'Coln'OrCellFragment{}(SortK{}) : SortOrCellFragment{} [function{}()]
  symbol Lblproject'Coln'OrCellMap{}(SortK{}) : SortOrCellMap{} [function{}()]
  symbol Lblproject'Coln'OrIdCell{}(SortK{}) : SortOrIdCell{} [function{}()]
  symbol Lblproject'Coln'OrIdCellOpt{}(SortK{}) : SortOrIdCellOpt{} [function{}()]
  symbol Lblproject'Coln'OrsCell{}(SortK{}) : SortOrsCell{} [function{}()]
  symbol Lblproject'Coln'OrsCellFragment{}(SortK{}) : SortOrsCellFragment{} [function{}()]
  symbol Lblproject'Coln'OrsCellOpt{}(SortK{}) : SortOrsCellOpt{} [function{}()]
  symbol Lblproject'Coln'OsequenceCell{}(SortK{}) : SortOsequenceCell{} [function{}()]
  symbol Lblproject'Coln'OsequenceCellOpt{}(SortK{}) : SortOsequenceCellOpt{} [function{}()]
  symbol Lblproject'Coln'Program{}(SortK{}) : SortProgram{} [function{}()]
  symbol Lblproject'Coln'Sequence{}(SortK{}) : SortSequence{} [function{}()]
  symbol Lblproject'Coln'SequenceCell{}(SortK{}) : SortSequenceCell{} [function{}()]
  symbol Lblproject'Coln'SequenceCellOpt{}(SortK{}) : SortSequenceCellOpt{} [function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}()]
  symbol Lblproject'Coln'StateCell{}(SortK{}) : SortStateCell{} [function{}()]
  symbol Lblproject'Coln'StateCellFragment{}(SortK{}) : SortStateCellFragment{} [function{}()]
  symbol Lblproject'Coln'StateCellOpt{}(SortK{}) : SortStateCellOpt{} [function{}()]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [function{}()]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [function{}()]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [function{}()]
  symbol Lblproject'Coln'Transition{}(SortK{}) : SortTransition{} [function{}()]
  symbol Lblproject'Coln'TransitionCell{}(SortK{}) : SortTransitionCell{} [function{}()]
  symbol Lblproject'Coln'TransitionCellFragment{}(SortK{}) : SortTransitionCellFragment{} [function{}()]
  symbol Lblproject'Coln'TransitionCellMap{}(SortK{}) : SortTransitionCellMap{} [function{}()]
  symbol Lblproject'Coln'Transitions{}(SortK{}) : SortTransitions{} [function{}()]
  symbol Lblproject'Coln'TransitionsCell{}(SortK{}) : SortTransitionsCell{} [function{}()]
  symbol Lblproject'Coln'TransitionsCellFragment{}(SortK{}) : SortTransitionsCellFragment{} [function{}()]
  symbol Lblproject'Coln'TransitionsCellOpt{}(SortK{}) : SortTransitionsCellOpt{} [function{}()]
  symbol Lblproject'Coln'VariableDeclaration{}(SortK{}) : SortVariableDeclaration{} [function{}()]
  symbol Lblproject'Coln'VariablesCell{}(SortK{}) : SortVariablesCell{} [function{}()]
  symbol Lblproject'Coln'VariablesCellOpt{}(SortK{}) : SortVariablesCellOpt{} [function{}()]
  symbol Lblproject'Coln'Work{}(SortK{}) : SortWork{} [function{}()]
  hooked-symbol LblpushList{}(SortKItem{}, SortList{}) : SortList{} [function{}(), functional{}(), hook{}("LIST.push"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,19,953,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("pushList"), total{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), hook{}("INT.rand"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1341,18,1341,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [function{}(), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,18,1308,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [function{}(), functional{}(), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,18,794,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol LblsizeList{}(SortList{}) : SortInt{} [function{}(), functional{}(), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1029,18,1029,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("smt_seq_len"), symbol'Kywd'{}("sizeList"), total{}()]
  hooked-symbol LblsizeMap{}(SortMap{}) : SortInt{} [function{}(), functional{}(), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), symbol'Kywd'{}("sizeMap"), total{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [function{}(), hook{}("INT.srand"), impure{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1342,16,1342,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  symbol Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(SortSequence{}) : SortTransition{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,27,24,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [function{}(), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,19,993,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [function{}(), functional{}(), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), total{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [function{}(), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]
  symbol Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(SortId{}) : SortVariableDeclaration{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,36,8,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(SortId{}) : SortVariableDeclaration{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,36,7,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(SortOperation{}) : SortWork{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,46,43,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  symbol Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(SortTransition{}) : SortWork{} [constructor{}(), functional{}(), injective{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,21,43,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [function{}(), functional{}(), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,18,1237,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), smtlib{}("notInt"), symbol'Kywd'{}("~Int_"), total{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWork{}, SortKItem{}} (From:SortWork{}))) [subsort{SortWork{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCsequenceCellOpt{}, SortKItem{}} (From:SortCsequenceCellOpt{}))) [subsort{SortCsequenceCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortChoiceCellMap{}, \equals{SortChoiceCellMap{}, R} (Val:SortChoiceCellMap{}, inj{SortChoiceCell{}, SortChoiceCellMap{}} (From:SortChoiceCell{}))) [subsort{SortChoiceCell{}, SortChoiceCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOperation{}, SortKItem{}} (From:SortOperation{}))) [subsort{SortOperation{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionCellFragment{}, SortKItem{}} (From:SortTransitionCellFragment{}))) [subsort{SortTransitionCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSequenceCellOpt{}, SortKItem{}} (From:SortSequenceCellOpt{}))) [subsort{SortSequenceCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOrsCellOpt{}, \equals{SortOrsCellOpt{}, R} (Val:SortOrsCellOpt{}, inj{SortOrsCell{}, SortOrsCellOpt{}} (From:SortOrsCell{}))) [subsort{SortOrsCell{}, SortOrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOidCellOpt{}, \equals{SortOidCellOpt{}, R} (Val:SortOidCellOpt{}, inj{SortOidCell{}, SortOidCellOpt{}} (From:SortOidCell{}))) [subsort{SortOidCell{}, SortOidCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrCellFragment{}, SortKItem{}} (From:SortOrCellFragment{}))) [subsort{SortOrCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVariablesCellOpt{}, SortKItem{}} (From:SortVariablesCellOpt{}))) [subsort{SortVariablesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrCellMap{}, SortKItem{}} (From:SortOrCellMap{}))) [subsort{SortOrCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCidCellOpt{}, SortKItem{}} (From:SortCidCellOpt{}))) [subsort{SortCidCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAssumption{}, SortKItem{}} (From:SortAssumption{}))) [subsort{SortAssumption{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceIdCell{}, SortKItem{}} (From:SortChoiceIdCell{}))) [subsort{SortChoiceIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrsCellFragment{}, SortKItem{}} (From:SortOrsCellFragment{}))) [subsort{SortOrsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceCellMap{}, SortKItem{}} (From:SortChoiceCellMap{}))) [subsort{SortChoiceCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCidCellOpt{}, \equals{SortCidCellOpt{}, R} (Val:SortCidCellOpt{}, inj{SortCidCell{}, SortCidCellOpt{}} (From:SortCidCell{}))) [subsort{SortCidCell{}, SortCidCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCsequenceCell{}, SortKItem{}} (From:SortCsequenceCell{}))) [subsort{SortCsequenceCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceCell{}, SortKItem{}} (From:SortChoiceCell{}))) [subsort{SortChoiceCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOidCell{}, SortKItem{}} (From:SortOidCell{}))) [subsort{SortOidCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceOrBlock{}, SortKItem{}} (From:SortChoiceOrBlock{}))) [subsort{SortChoiceOrBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransition{}, SortKItem{}} (From:SortTransition{}))) [subsort{SortTransition{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStateCellOpt{}, SortKItem{}} (From:SortStateCellOpt{}))) [subsort{SortStateCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVariablesCell{}, SortKItem{}} (From:SortVariablesCell{}))) [subsort{SortVariablesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortChoiceIdCellOpt{}, \equals{SortChoiceIdCellOpt{}, R} (Val:SortChoiceIdCellOpt{}, inj{SortChoiceIdCell{}, SortChoiceIdCellOpt{}} (From:SortChoiceIdCell{}))) [subsort{SortChoiceIdCell{}, SortChoiceIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortChoicesCellOpt{}, \equals{SortChoicesCellOpt{}, R} (Val:SortChoicesCellOpt{}, inj{SortChoicesCell{}, SortChoicesCellOpt{}} (From:SortChoicesCell{}))) [subsort{SortChoicesCell{}, SortChoicesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, inj{SortIdCell{}, SortIdCellOpt{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurIdCellOpt{}, SortKItem{}} (From:SortCurIdCellOpt{}))) [subsort{SortCurIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOrCellMap{}, \equals{SortOrCellMap{}, R} (Val:SortOrCellMap{}, inj{SortOrCell{}, SortOrCellMap{}} (From:SortOrCell{}))) [subsort{SortOrCell{}, SortOrCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurIdCellOpt{}, \equals{SortCurIdCellOpt{}, R} (Val:SortCurIdCellOpt{}, inj{SortCurIdCell{}, SortCurIdCellOpt{}} (From:SortCurIdCell{}))) [subsort{SortCurIdCell{}, SortCurIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrsCellOpt{}, SortKItem{}} (From:SortOrsCellOpt{}))) [subsort{SortOrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSequence{}, SortKItem{}} (From:SortSequence{}))) [subsort{SortSequence{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOidCellOpt{}, SortKItem{}} (From:SortOidCellOpt{}))) [subsort{SortOidCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTransitionCellMap{}, \equals{SortTransitionCellMap{}, R} (Val:SortTransitionCellMap{}, inj{SortTransitionCell{}, SortTransitionCellMap{}} (From:SortTransitionCell{}))) [subsort{SortTransitionCell{}, SortTransitionCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStateCellOpt{}, \equals{SortStateCellOpt{}, R} (Val:SortStateCellOpt{}, inj{SortStateCell{}, SortStateCellOpt{}} (From:SortStateCell{}))) [subsort{SortStateCell{}, SortStateCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceIdCellOpt{}, SortKItem{}} (From:SortChoiceIdCellOpt{}))) [subsort{SortChoiceIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSequenceCellOpt{}, \equals{SortSequenceCellOpt{}, R} (Val:SortSequenceCellOpt{}, inj{SortSequenceCell{}, SortSequenceCellOpt{}} (From:SortSequenceCell{}))) [subsort{SortSequenceCell{}, SortSequenceCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLine{}, SortKItem{}} (From:SortLine{}))) [subsort{SortLine{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCsequenceCellOpt{}, \equals{SortCsequenceCellOpt{}, R} (Val:SortCsequenceCellOpt{}, inj{SortCsequenceCell{}, SortCsequenceCellOpt{}} (From:SortCsequenceCell{}))) [subsort{SortCsequenceCell{}, SortCsequenceCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceCellFragment{}, SortKItem{}} (From:SortChoiceCellFragment{}))) [subsort{SortChoiceCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAssignment{}, SortKItem{}} (From:SortAssignment{}))) [subsort{SortAssignment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionCell{}, SortKItem{}} (From:SortTransitionCell{}))) [subsort{SortTransitionCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortProgram{}, SortKItem{}} (From:SortProgram{}))) [subsort{SortProgram{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitions{}, SortKItem{}} (From:SortTransitions{}))) [subsort{SortTransitions{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLiteral{}, SortKItem{}} (From:SortLiteral{}))) [subsort{SortLiteral{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoicesCell{}, SortKItem{}} (From:SortChoicesCell{}))) [subsort{SortChoicesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOrIdCellOpt{}, \equals{SortOrIdCellOpt{}, R} (Val:SortOrIdCellOpt{}, inj{SortOrIdCell{}, SortOrIdCellOpt{}} (From:SortOrIdCell{}))) [subsort{SortOrIdCell{}, SortOrIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVariableDeclaration{}, SortKItem{}} (From:SortVariableDeclaration{}))) [subsort{SortVariableDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOsequenceCellOpt{}, SortKItem{}} (From:SortOsequenceCellOpt{}))) [subsort{SortOsequenceCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOsequenceCellOpt{}, \equals{SortOsequenceCellOpt{}, R} (Val:SortOsequenceCellOpt{}, inj{SortOsequenceCell{}, SortOsequenceCellOpt{}} (From:SortOsequenceCell{}))) [subsort{SortOsequenceCell{}, SortOsequenceCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoicesCellOpt{}, SortKItem{}} (From:SortChoicesCellOpt{}))) [subsort{SortChoicesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCidCell{}, SortKItem{}} (From:SortCidCell{}))) [subsort{SortCidCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCellOpt{}, SortKItem{}} (From:SortIdCellOpt{}))) [subsort{SortIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoice{}, SortKItem{}} (From:SortChoice{}))) [subsort{SortChoice{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionsCellFragment{}, SortKItem{}} (From:SortTransitionsCellFragment{}))) [subsort{SortTransitionsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrIdCell{}, SortKItem{}} (From:SortOrIdCell{}))) [subsort{SortOrIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrCell{}, SortKItem{}} (From:SortOrCell{}))) [subsort{SortOrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHavoc{}, SortKItem{}} (From:SortHavoc{}))) [subsort{SortHavoc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOsequenceCell{}, SortKItem{}} (From:SortOsequenceCell{}))) [subsort{SortOsequenceCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVariablesCellOpt{}, \equals{SortVariablesCellOpt{}, R} (Val:SortVariablesCellOpt{}, inj{SortVariablesCell{}, SortVariablesCellOpt{}} (From:SortVariablesCell{}))) [subsort{SortVariablesCell{}, SortVariablesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrsCell{}, SortKItem{}} (From:SortOrsCell{}))) [subsort{SortOrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStateCell{}, SortKItem{}} (From:SortStateCell{}))) [subsort{SortStateCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionsCellOpt{}, SortKItem{}} (From:SortTransitionsCellOpt{}))) [subsort{SortTransitionsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTransitionsCellOpt{}, \equals{SortTransitionsCellOpt{}, R} (Val:SortTransitionsCellOpt{}, inj{SortTransitionsCell{}, SortTransitionsCellOpt{}} (From:SortTransitionsCell{}))) [subsort{SortTransitionsCell{}, SortTransitionsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionsCell{}, SortKItem{}} (From:SortTransitionsCell{}))) [subsort{SortTransitionsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSequenceCell{}, SortKItem{}} (From:SortSequenceCell{}))) [subsort{SortSequenceCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOrIdCellOpt{}, SortKItem{}} (From:SortOrIdCellOpt{}))) [subsort{SortOrIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoiceOrBlocks{}, SortKItem{}} (From:SortChoiceOrBlocks{}))) [subsort{SortChoiceOrBlocks{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortChoicesCellFragment{}, SortKItem{}} (From:SortChoicesCellFragment{}))) [subsort{SortChoicesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCell{}, SortKItem{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurIdCell{}, SortKItem{}} (From:SortCurIdCell{}))) [subsort{SortCurIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStateCellFragment{}, SortKItem{}} (From:SortStateCellFragment{}))) [subsort{SortStateCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTransitionCellMap{}, SortKItem{}} (From:SortTransitionCellMap{}))) [subsort{SortTransitionCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOperation{}, \equals{SortOperation{}, R} (Val:SortOperation{}, inj{SortChoice{}, SortOperation{}} (From:SortChoice{}))) [subsort{SortChoice{}, SortOperation{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOperation{}, \equals{SortOperation{}, R} (Val:SortOperation{}, inj{SortAssignment{}, SortOperation{}} (From:SortAssignment{}))) [subsort{SortAssignment{}, SortOperation{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOperation{}, \equals{SortOperation{}, R} (Val:SortOperation{}, inj{SortHavoc{}, SortOperation{}} (From:SortHavoc{}))) [subsort{SortHavoc{}, SortOperation{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOperation{}, \equals{SortOperation{}, R} (Val:SortOperation{}, inj{SortAssumption{}, SortOperation{}} (From:SortAssumption{}))) [subsort{SortAssumption{}, SortOperation{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLine{}, \equals{SortLine{}, R} (Val:SortLine{}, inj{SortTransition{}, SortLine{}} (From:SortTransition{}))) [subsort{SortTransition{}, SortLine{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLine{}, \equals{SortLine{}, R} (Val:SortLine{}, inj{SortVariableDeclaration{}, SortLine{}} (From:SortVariableDeclaration{}))) [subsort{SortVariableDeclaration{}, SortLine{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLiteral{}, \equals{SortLiteral{}, R} (Val:SortLiteral{}, inj{SortInt{}, SortLiteral{}} (From:SortInt{}))) [subsort{SortInt{}, SortLiteral{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLiteral{}, \equals{SortLiteral{}, R} (Val:SortLiteral{}, inj{SortBool{}, SortLiteral{}} (From:SortBool{}))) [subsort{SortBool{}, SortLiteral{}}()] // subsort
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoiceOrBlocks{}, \equals{SortChoiceOrBlocks{}, R} (Val:SortChoiceOrBlocks{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks'QuotRBraUnds'ChoiceOrBlocks{}())) [functional{}()] // functional
  axiom{}\not{SortChoiceOrBlocks{}} (\and{SortChoiceOrBlocks{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks'QuotRBraUnds'ChoiceOrBlocks{}(), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(Y0:SortChoiceOrBlock{}, Y1:SortChoiceOrBlocks{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortProgram{}, \equals{SortProgram{}, R} (Val:SortProgram{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program'QuotRBraUnds'Program{}())) [functional{}()] // functional
  axiom{}\not{SortProgram{}} (\and{SortProgram{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program'QuotRBraUnds'Program{}(), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(Y0:SortLine{}, Y1:SortProgram{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSequence{}, \equals{SortSequence{}, R} (Val:SortSequence{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence'QuotRBraUnds'Sequence{}())) [functional{}()] // functional
  axiom{}\not{SortSequence{}} (\and{SortSequence{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence'QuotRBraUnds'Sequence{}(), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(Y0:SortOperation{}, Y1:SortSequence{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTransitions{}, \equals{SortTransitions{}, R} (Val:SortTransitions{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions'QuotRBraUnds'Transitions{}())) [functional{}()] // functional
  axiom{}\not{SortTransitions{}} (\and{SortTransitions{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions'QuotRBraUnds'Transitions{}(), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(Y0:SortTransition{}, Y1:SortTransitions{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortKCell{}, K1:SortStateCell{}, K2:SortCurIdCell{}, K3:SortChoiceIdCell{}, K4:SortOrIdCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortStateCell{}, X2:SortCurIdCell{}, X3:SortChoiceIdCell{}, X4:SortOrIdCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortKCell{}, Y1:SortStateCell{}, Y2:SortCurIdCell{}, Y3:SortChoiceIdCell{}, Y4:SortOrIdCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortStateCell{}} (X1:SortStateCell{}, Y1:SortStateCell{}), \and{SortCurIdCell{}} (X2:SortCurIdCell{}, Y2:SortCurIdCell{}), \and{SortChoiceIdCell{}} (X3:SortChoiceIdCell{}, Y3:SortChoiceIdCell{}), \and{SortOrIdCell{}} (X4:SortOrIdCell{}, Y4:SortOrIdCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortStateCellOpt{}, K2:SortCurIdCellOpt{}, K3:SortChoiceIdCellOpt{}, K4:SortOrIdCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortStateCellOpt{}, X2:SortCurIdCellOpt{}, X3:SortChoiceIdCellOpt{}, X4:SortOrIdCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortStateCellOpt{}, Y2:SortCurIdCellOpt{}, Y3:SortChoiceIdCellOpt{}, Y4:SortOrIdCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortStateCellOpt{}} (X1:SortStateCellOpt{}, Y1:SortStateCellOpt{}), \and{SortCurIdCellOpt{}} (X2:SortCurIdCellOpt{}, Y2:SortCurIdCellOpt{}), \and{SortChoiceIdCellOpt{}} (X3:SortChoiceIdCellOpt{}, Y3:SortChoiceIdCellOpt{}), \and{SortOrIdCellOpt{}} (X4:SortOrIdCellOpt{}, Y4:SortOrIdCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoiceIdCell{}, \equals{SortChoiceIdCell{}, R} (Val:SortChoiceIdCell{}, Lbl'-LT-'choice-id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceIdCell{}} (\and{SortChoiceIdCell{}} (Lbl'-LT-'choice-id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'choice-id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'choice-id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoiceCell{}, \equals{SortChoiceCell{}, R} (Val:SortChoiceCell{}, Lbl'-LT-'choice'-GT-'{}(K0:SortCidCell{}, K1:SortCsequenceCell{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceCell{}} (\and{SortChoiceCell{}} (Lbl'-LT-'choice'-GT-'{}(X0:SortCidCell{}, X1:SortCsequenceCell{}), Lbl'-LT-'choice'-GT-'{}(Y0:SortCidCell{}, Y1:SortCsequenceCell{})), Lbl'-LT-'choice'-GT-'{}(\and{SortCidCell{}} (X0:SortCidCell{}, Y0:SortCidCell{}), \and{SortCsequenceCell{}} (X1:SortCsequenceCell{}, Y1:SortCsequenceCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoiceCellFragment{}, \equals{SortChoiceCellFragment{}, R} (Val:SortChoiceCellFragment{}, Lbl'-LT-'choice'-GT-'-fragment{}(K0:SortCidCellOpt{}, K1:SortCsequenceCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceCellFragment{}} (\and{SortChoiceCellFragment{}} (Lbl'-LT-'choice'-GT-'-fragment{}(X0:SortCidCellOpt{}, X1:SortCsequenceCellOpt{}), Lbl'-LT-'choice'-GT-'-fragment{}(Y0:SortCidCellOpt{}, Y1:SortCsequenceCellOpt{})), Lbl'-LT-'choice'-GT-'-fragment{}(\and{SortCidCellOpt{}} (X0:SortCidCellOpt{}, Y0:SortCidCellOpt{}), \and{SortCsequenceCellOpt{}} (X1:SortCsequenceCellOpt{}, Y1:SortCsequenceCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoicesCell{}, \equals{SortChoicesCell{}, R} (Val:SortChoicesCell{}, Lbl'-LT-'choices'-GT-'{}(K0:SortChoiceCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortChoicesCell{}} (\and{SortChoicesCell{}} (Lbl'-LT-'choices'-GT-'{}(X0:SortChoiceCellMap{}), Lbl'-LT-'choices'-GT-'{}(Y0:SortChoiceCellMap{})), Lbl'-LT-'choices'-GT-'{}(\and{SortChoiceCellMap{}} (X0:SortChoiceCellMap{}, Y0:SortChoiceCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoicesCellFragment{}, \equals{SortChoicesCellFragment{}, R} (Val:SortChoicesCellFragment{}, Lbl'-LT-'choices'-GT-'-fragment{}(K0:SortChoiceCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortChoicesCellFragment{}} (\and{SortChoicesCellFragment{}} (Lbl'-LT-'choices'-GT-'-fragment{}(X0:SortChoiceCellMap{}), Lbl'-LT-'choices'-GT-'-fragment{}(Y0:SortChoiceCellMap{})), Lbl'-LT-'choices'-GT-'-fragment{}(\and{SortChoiceCellMap{}} (X0:SortChoiceCellMap{}, Y0:SortChoiceCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCidCell{}, \equals{SortCidCell{}, R} (Val:SortCidCell{}, Lbl'-LT-'cid'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCidCell{}} (\and{SortCidCell{}} (Lbl'-LT-'cid'-GT-'{}(X0:SortInt{}), Lbl'-LT-'cid'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'cid'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCsequenceCell{}, \equals{SortCsequenceCell{}, R} (Val:SortCsequenceCell{}, Lbl'-LT-'csequence'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortCsequenceCell{}} (\and{SortCsequenceCell{}} (Lbl'-LT-'csequence'-GT-'{}(X0:SortList{}), Lbl'-LT-'csequence'-GT-'{}(Y0:SortList{})), Lbl'-LT-'csequence'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurIdCell{}, \equals{SortCurIdCell{}, R} (Val:SortCurIdCell{}, Lbl'-LT-'cur-id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurIdCell{}} (\and{SortCurIdCell{}} (Lbl'-LT-'cur-id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'cur-id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'cur-id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, Lbl'-LT-'id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdCell{}} (\and{SortIdCell{}} (Lbl'-LT-'id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOidCell{}, \equals{SortOidCell{}, R} (Val:SortOidCell{}, Lbl'-LT-'oid'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortOidCell{}} (\and{SortOidCell{}} (Lbl'-LT-'oid'-GT-'{}(X0:SortInt{}), Lbl'-LT-'oid'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'oid'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOrIdCell{}, \equals{SortOrIdCell{}, R} (Val:SortOrIdCell{}, Lbl'-LT-'or-id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortOrIdCell{}} (\and{SortOrIdCell{}} (Lbl'-LT-'or-id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'or-id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'or-id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOrCell{}, \equals{SortOrCell{}, R} (Val:SortOrCell{}, Lbl'-LT-'or'-GT-'{}(K0:SortOidCell{}, K1:SortOsequenceCell{}))) [functional{}()] // functional
  axiom{}\implies{SortOrCell{}} (\and{SortOrCell{}} (Lbl'-LT-'or'-GT-'{}(X0:SortOidCell{}, X1:SortOsequenceCell{}), Lbl'-LT-'or'-GT-'{}(Y0:SortOidCell{}, Y1:SortOsequenceCell{})), Lbl'-LT-'or'-GT-'{}(\and{SortOidCell{}} (X0:SortOidCell{}, Y0:SortOidCell{}), \and{SortOsequenceCell{}} (X1:SortOsequenceCell{}, Y1:SortOsequenceCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOrCellFragment{}, \equals{SortOrCellFragment{}, R} (Val:SortOrCellFragment{}, Lbl'-LT-'or'-GT-'-fragment{}(K0:SortOidCellOpt{}, K1:SortOsequenceCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortOrCellFragment{}} (\and{SortOrCellFragment{}} (Lbl'-LT-'or'-GT-'-fragment{}(X0:SortOidCellOpt{}, X1:SortOsequenceCellOpt{}), Lbl'-LT-'or'-GT-'-fragment{}(Y0:SortOidCellOpt{}, Y1:SortOsequenceCellOpt{})), Lbl'-LT-'or'-GT-'-fragment{}(\and{SortOidCellOpt{}} (X0:SortOidCellOpt{}, Y0:SortOidCellOpt{}), \and{SortOsequenceCellOpt{}} (X1:SortOsequenceCellOpt{}, Y1:SortOsequenceCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOrsCell{}, \equals{SortOrsCell{}, R} (Val:SortOrsCell{}, Lbl'-LT-'ors'-GT-'{}(K0:SortOrCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortOrsCell{}} (\and{SortOrsCell{}} (Lbl'-LT-'ors'-GT-'{}(X0:SortOrCellMap{}), Lbl'-LT-'ors'-GT-'{}(Y0:SortOrCellMap{})), Lbl'-LT-'ors'-GT-'{}(\and{SortOrCellMap{}} (X0:SortOrCellMap{}, Y0:SortOrCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOrsCellFragment{}, \equals{SortOrsCellFragment{}, R} (Val:SortOrsCellFragment{}, Lbl'-LT-'ors'-GT-'-fragment{}(K0:SortOrCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortOrsCellFragment{}} (\and{SortOrsCellFragment{}} (Lbl'-LT-'ors'-GT-'-fragment{}(X0:SortOrCellMap{}), Lbl'-LT-'ors'-GT-'-fragment{}(Y0:SortOrCellMap{})), Lbl'-LT-'ors'-GT-'-fragment{}(\and{SortOrCellMap{}} (X0:SortOrCellMap{}, Y0:SortOrCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOsequenceCell{}, \equals{SortOsequenceCell{}, R} (Val:SortOsequenceCell{}, Lbl'-LT-'osequence'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortOsequenceCell{}} (\and{SortOsequenceCell{}} (Lbl'-LT-'osequence'-GT-'{}(X0:SortList{}), Lbl'-LT-'osequence'-GT-'{}(Y0:SortList{})), Lbl'-LT-'osequence'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSequenceCell{}, \equals{SortSequenceCell{}, R} (Val:SortSequenceCell{}, Lbl'-LT-'sequence'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortSequenceCell{}} (\and{SortSequenceCell{}} (Lbl'-LT-'sequence'-GT-'{}(X0:SortList{}), Lbl'-LT-'sequence'-GT-'{}(Y0:SortList{})), Lbl'-LT-'sequence'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStateCell{}, \equals{SortStateCell{}, R} (Val:SortStateCell{}, Lbl'-LT-'state'-GT-'{}(K0:SortVariablesCell{}, K1:SortTransitionsCell{}, K2:SortChoicesCell{}, K3:SortOrsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortStateCell{}} (\and{SortStateCell{}} (Lbl'-LT-'state'-GT-'{}(X0:SortVariablesCell{}, X1:SortTransitionsCell{}, X2:SortChoicesCell{}, X3:SortOrsCell{}), Lbl'-LT-'state'-GT-'{}(Y0:SortVariablesCell{}, Y1:SortTransitionsCell{}, Y2:SortChoicesCell{}, Y3:SortOrsCell{})), Lbl'-LT-'state'-GT-'{}(\and{SortVariablesCell{}} (X0:SortVariablesCell{}, Y0:SortVariablesCell{}), \and{SortTransitionsCell{}} (X1:SortTransitionsCell{}, Y1:SortTransitionsCell{}), \and{SortChoicesCell{}} (X2:SortChoicesCell{}, Y2:SortChoicesCell{}), \and{SortOrsCell{}} (X3:SortOrsCell{}, Y3:SortOrsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStateCellFragment{}, \equals{SortStateCellFragment{}, R} (Val:SortStateCellFragment{}, Lbl'-LT-'state'-GT-'-fragment{}(K0:SortVariablesCellOpt{}, K1:SortTransitionsCellOpt{}, K2:SortChoicesCellOpt{}, K3:SortOrsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortStateCellFragment{}} (\and{SortStateCellFragment{}} (Lbl'-LT-'state'-GT-'-fragment{}(X0:SortVariablesCellOpt{}, X1:SortTransitionsCellOpt{}, X2:SortChoicesCellOpt{}, X3:SortOrsCellOpt{}), Lbl'-LT-'state'-GT-'-fragment{}(Y0:SortVariablesCellOpt{}, Y1:SortTransitionsCellOpt{}, Y2:SortChoicesCellOpt{}, Y3:SortOrsCellOpt{})), Lbl'-LT-'state'-GT-'-fragment{}(\and{SortVariablesCellOpt{}} (X0:SortVariablesCellOpt{}, Y0:SortVariablesCellOpt{}), \and{SortTransitionsCellOpt{}} (X1:SortTransitionsCellOpt{}, Y1:SortTransitionsCellOpt{}), \and{SortChoicesCellOpt{}} (X2:SortChoicesCellOpt{}, Y2:SortChoicesCellOpt{}), \and{SortOrsCellOpt{}} (X3:SortOrsCellOpt{}, Y3:SortOrsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTransitionCell{}, \equals{SortTransitionCell{}, R} (Val:SortTransitionCell{}, Lbl'-LT-'transition'-GT-'{}(K0:SortIdCell{}, K1:SortSequenceCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTransitionCell{}} (\and{SortTransitionCell{}} (Lbl'-LT-'transition'-GT-'{}(X0:SortIdCell{}, X1:SortSequenceCell{}), Lbl'-LT-'transition'-GT-'{}(Y0:SortIdCell{}, Y1:SortSequenceCell{})), Lbl'-LT-'transition'-GT-'{}(\and{SortIdCell{}} (X0:SortIdCell{}, Y0:SortIdCell{}), \and{SortSequenceCell{}} (X1:SortSequenceCell{}, Y1:SortSequenceCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTransitionCellFragment{}, \equals{SortTransitionCellFragment{}, R} (Val:SortTransitionCellFragment{}, Lbl'-LT-'transition'-GT-'-fragment{}(K0:SortIdCellOpt{}, K1:SortSequenceCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTransitionCellFragment{}} (\and{SortTransitionCellFragment{}} (Lbl'-LT-'transition'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortSequenceCellOpt{}), Lbl'-LT-'transition'-GT-'-fragment{}(Y0:SortIdCellOpt{}, Y1:SortSequenceCellOpt{})), Lbl'-LT-'transition'-GT-'-fragment{}(\and{SortIdCellOpt{}} (X0:SortIdCellOpt{}, Y0:SortIdCellOpt{}), \and{SortSequenceCellOpt{}} (X1:SortSequenceCellOpt{}, Y1:SortSequenceCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTransitionsCell{}, \equals{SortTransitionsCell{}, R} (Val:SortTransitionsCell{}, Lbl'-LT-'transitions'-GT-'{}(K0:SortTransitionCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTransitionsCell{}} (\and{SortTransitionsCell{}} (Lbl'-LT-'transitions'-GT-'{}(X0:SortTransitionCellMap{}), Lbl'-LT-'transitions'-GT-'{}(Y0:SortTransitionCellMap{})), Lbl'-LT-'transitions'-GT-'{}(\and{SortTransitionCellMap{}} (X0:SortTransitionCellMap{}, Y0:SortTransitionCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTransitionsCellFragment{}, \equals{SortTransitionsCellFragment{}, R} (Val:SortTransitionsCellFragment{}, Lbl'-LT-'transitions'-GT-'-fragment{}(K0:SortTransitionCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTransitionsCellFragment{}} (\and{SortTransitionsCellFragment{}} (Lbl'-LT-'transitions'-GT-'-fragment{}(X0:SortTransitionCellMap{}), Lbl'-LT-'transitions'-GT-'-fragment{}(Y0:SortTransitionCellMap{})), Lbl'-LT-'transitions'-GT-'-fragment{}(\and{SortTransitionCellMap{}} (X0:SortTransitionCellMap{}, Y0:SortTransitionCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVariablesCell{}, \equals{SortVariablesCell{}, R} (Val:SortVariablesCell{}, Lbl'-LT-'variables'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortVariablesCell{}} (\and{SortVariablesCell{}} (Lbl'-LT-'variables'-GT-'{}(X0:SortMap{}), Lbl'-LT-'variables'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'variables'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblChoiceCellMap'Coln'in'Unds'keys{}(K0:SortCidCell{}, K1:SortChoiceCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCidCell{}, \equals{SortCidCell{}, R} (Val:SortCidCell{}, LblChoiceCellMapKey{}(K0:SortChoiceCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblMap'Coln'lookupOrDefault{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblOrCellMap'Coln'in'Unds'keys{}(K0:SortOidCell{}, K1:SortOrCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOidCell{}, \equals{SortOidCell{}, R} (Val:SortOidCell{}, LblOrCellMapKey{}(K0:SortOrCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblTransitionCellMap'Coln'in'Unds'keys{}(K0:SortIdCell{}, K1:SortTransitionCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, LblTransitionCellMapKey{}(K0:SortTransitionCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAssignment{}, \equals{SortAssignment{}, R} (Val:SortAssignment{}, Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(K0:SortId{}, K1:SortLiteral{}))) [functional{}()] // functional
  axiom{}\implies{SortAssignment{}} (\and{SortAssignment{}} (Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(X0:SortId{}, X1:SortLiteral{}), Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(Y0:SortId{}, Y1:SortLiteral{})), Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortLiteral{}} (X1:SortLiteral{}, Y1:SortLiteral{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \equals{SortChoiceCellMap{}, R} (Lbl'Unds'ChoiceCellMap'Unds'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(K1:SortChoiceCellMap{},K2:SortChoiceCellMap{}),K3:SortChoiceCellMap{}),Lbl'Unds'ChoiceCellMap'Unds'{}(K1:SortChoiceCellMap{},Lbl'Unds'ChoiceCellMap'Unds'{}(K2:SortChoiceCellMap{},K3:SortChoiceCellMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortChoiceCellMap{}, R} (Lbl'Unds'ChoiceCellMap'Unds'{}(K:SortChoiceCellMap{},Lbl'Stop'ChoiceCellMap{}()),K:SortChoiceCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortChoiceCellMap{}, R} (Lbl'Unds'ChoiceCellMap'Unds'{}(Lbl'Stop'ChoiceCellMap{}(),K:SortChoiceCellMap{}),K:SortChoiceCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortOrCellMap{}, R} (Lbl'Unds'OrCellMap'Unds'{}(Lbl'Unds'OrCellMap'Unds'{}(K1:SortOrCellMap{},K2:SortOrCellMap{}),K3:SortOrCellMap{}),Lbl'Unds'OrCellMap'Unds'{}(K1:SortOrCellMap{},Lbl'Unds'OrCellMap'Unds'{}(K2:SortOrCellMap{},K3:SortOrCellMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortOrCellMap{}, R} (Lbl'Unds'OrCellMap'Unds'{}(K:SortOrCellMap{},Lbl'Stop'OrCellMap{}()),K:SortOrCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortOrCellMap{}, R} (Lbl'Unds'OrCellMap'Unds'{}(Lbl'Stop'OrCellMap{}(),K:SortOrCellMap{}),K:SortOrCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortTransitionCellMap{}, R} (Lbl'Unds'TransitionCellMap'Unds'{}(Lbl'Unds'TransitionCellMap'Unds'{}(K1:SortTransitionCellMap{},K2:SortTransitionCellMap{}),K3:SortTransitionCellMap{}),Lbl'Unds'TransitionCellMap'Unds'{}(K1:SortTransitionCellMap{},Lbl'Unds'TransitionCellMap'Unds'{}(K2:SortTransitionCellMap{},K3:SortTransitionCellMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortTransitionCellMap{}, R} (Lbl'Unds'TransitionCellMap'Unds'{}(K:SortTransitionCellMap{},Lbl'Stop'TransitionCellMap{}()),K:SortTransitionCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortTransitionCellMap{}, R} (Lbl'Unds'TransitionCellMap'Unds'{}(Lbl'Stop'TransitionCellMap{}(),K:SortTransitionCellMap{}),K:SortTransitionCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoiceOrBlocks{}, \equals{SortChoiceOrBlocks{}, R} (Val:SortChoiceOrBlocks{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(K0:SortChoiceOrBlock{}, K1:SortChoiceOrBlocks{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceOrBlocks{}} (\and{SortChoiceOrBlocks{}} (Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(X0:SortChoiceOrBlock{}, X1:SortChoiceOrBlocks{}), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(Y0:SortChoiceOrBlock{}, Y1:SortChoiceOrBlocks{})), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(\and{SortChoiceOrBlock{}} (X0:SortChoiceOrBlock{}, Y0:SortChoiceOrBlock{}), \and{SortChoiceOrBlocks{}} (X1:SortChoiceOrBlocks{}, Y1:SortChoiceOrBlocks{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortProgram{}, \equals{SortProgram{}, R} (Val:SortProgram{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(K0:SortLine{}, K1:SortProgram{}))) [functional{}()] // functional
  axiom{}\implies{SortProgram{}} (\and{SortProgram{}} (Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(X0:SortLine{}, X1:SortProgram{}), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(Y0:SortLine{}, Y1:SortProgram{})), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(\and{SortLine{}} (X0:SortLine{}, Y0:SortLine{}), \and{SortProgram{}} (X1:SortProgram{}, Y1:SortProgram{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSequence{}, \equals{SortSequence{}, R} (Val:SortSequence{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(K0:SortOperation{}, K1:SortSequence{}))) [functional{}()] // functional
  axiom{}\implies{SortSequence{}} (\and{SortSequence{}} (Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(X0:SortOperation{}, X1:SortSequence{}), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(Y0:SortOperation{}, Y1:SortSequence{})), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(\and{SortOperation{}} (X0:SortOperation{}, Y0:SortOperation{}), \and{SortSequence{}} (X1:SortSequence{}, Y1:SortSequence{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTransitions{}, \equals{SortTransitions{}, R} (Val:SortTransitions{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(K0:SortTransition{}, K1:SortTransitions{}))) [functional{}()] // functional
  axiom{}\implies{SortTransitions{}} (\and{SortTransitions{}} (Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(X0:SortTransition{}, X1:SortTransitions{}), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(Y0:SortTransition{}, Y1:SortTransitions{})), Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(\and{SortTransition{}} (X0:SortTransition{}, Y0:SortTransition{}), \and{SortTransitions{}} (X1:SortTransitions{}, Y1:SortTransitions{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'inList'Unds'{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAssumption{}, \equals{SortAssumption{}, R} (Val:SortAssumption{}, Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(K0:SortLiteral{}))) [functional{}()] // functional
  axiom{}\implies{SortAssumption{}} (\and{SortAssumption{}} (Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(X0:SortLiteral{}), Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(Y0:SortLiteral{})), Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(\and{SortLiteral{}} (X0:SortLiteral{}, Y0:SortLiteral{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoice{}, \equals{SortChoice{}, R} (Val:SortChoice{}, Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortChoice{}} (\and{SortChoice{}} (Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(X0:SortInt{}), Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(Y0:SortInt{})), Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortChoice{}} (\and{SortChoice{}} (Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(X0:SortInt{}), Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(Y0:SortSequence{}, Y1:SortChoiceOrBlocks{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortChoice{}, \equals{SortChoice{}, R} (Val:SortChoice{}, Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(K0:SortSequence{}, K1:SortChoiceOrBlocks{}))) [functional{}()] // functional
  axiom{}\implies{SortChoice{}} (\and{SortChoice{}} (Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(X0:SortSequence{}, X1:SortChoiceOrBlocks{}), Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(Y0:SortSequence{}, Y1:SortChoiceOrBlocks{})), Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(\and{SortSequence{}} (X0:SortSequence{}, Y0:SortSequence{}), \and{SortChoiceOrBlocks{}} (X1:SortChoiceOrBlocks{}, Y1:SortChoiceOrBlocks{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLiteral{}, \equals{SortLiteral{}, R} (Val:SortLiteral{}, Lblempty'Unds'XSTS-SYNTAX'Unds'Literal{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortHavoc{}, \equals{SortHavoc{}, R} (Val:SortHavoc{}, Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortHavoc{}} (\and{SortHavoc{}} (Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(X0:SortId{}), Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(Y0:SortId{})), Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortChoiceCellMap{}, \equals{SortChoiceCellMap{}, R} (Val:SortChoiceCellMap{}, LblinitChoiceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoiceIdCell{}, \equals{SortChoiceIdCell{}, R} (Val:SortChoiceIdCell{}, LblinitChoiceIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoicesCell{}, \equals{SortChoicesCell{}, R} (Val:SortChoicesCell{}, LblinitChoicesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCidCell{}, \equals{SortCidCell{}, R} (Val:SortCidCell{}, LblinitCidCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCsequenceCell{}, \equals{SortCsequenceCell{}, R} (Val:SortCsequenceCell{}, LblinitCsequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurIdCell{}, \equals{SortCurIdCell{}, R} (Val:SortCurIdCell{}, LblinitCurIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, LblinitGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, LblinitIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOidCell{}, \equals{SortOidCell{}, R} (Val:SortOidCell{}, LblinitOidCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOrCellMap{}, \equals{SortOrCellMap{}, R} (Val:SortOrCellMap{}, LblinitOrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOrIdCell{}, \equals{SortOrIdCell{}, R} (Val:SortOrIdCell{}, LblinitOrIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOrsCell{}, \equals{SortOrsCell{}, R} (Val:SortOrsCell{}, LblinitOrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOsequenceCell{}, \equals{SortOsequenceCell{}, R} (Val:SortOsequenceCell{}, LblinitOsequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSequenceCell{}, \equals{SortSequenceCell{}, R} (Val:SortSequenceCell{}, LblinitSequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStateCell{}, \equals{SortStateCell{}, R} (Val:SortStateCell{}, LblinitStateCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTransitionCellMap{}, \equals{SortTransitionCellMap{}, R} (Val:SortTransitionCellMap{}, LblinitTransitionCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTransitionsCell{}, \equals{SortTransitionsCell{}, R} (Val:SortTransitionsCell{}, LblinitTransitionsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVariablesCell{}, \equals{SortVariablesCell{}, R} (Val:SortVariablesCell{}, LblinitVariablesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAssignment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAssumption{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoice{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceOrBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoiceOrBlocks{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoicesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoicesCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisChoicesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCidCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCidCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCsequenceCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCsequenceCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHavoc{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLine{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLiteral{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOidCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOidCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOperation{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOrsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOsequenceCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOsequenceCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisProgram{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSequence{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSequenceCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSequenceCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStateCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStateCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStateCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransition{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitions{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTransitionsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVariableDeclaration{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVariablesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVariablesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisWork{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lblite{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoiceIdCellOpt{}, \equals{SortChoiceIdCellOpt{}, R} (Val:SortChoiceIdCellOpt{}, LblnoChoiceIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoicesCellOpt{}, \equals{SortChoicesCellOpt{}, R} (Val:SortChoicesCellOpt{}, LblnoChoicesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCidCellOpt{}, \equals{SortCidCellOpt{}, R} (Val:SortCidCellOpt{}, LblnoCidCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCsequenceCellOpt{}, \equals{SortCsequenceCellOpt{}, R} (Val:SortCsequenceCellOpt{}, LblnoCsequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurIdCellOpt{}, \equals{SortCurIdCellOpt{}, R} (Val:SortCurIdCellOpt{}, LblnoCurIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, LblnoIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOidCellOpt{}, \equals{SortOidCellOpt{}, R} (Val:SortOidCellOpt{}, LblnoOidCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOrIdCellOpt{}, \equals{SortOrIdCellOpt{}, R} (Val:SortOrIdCellOpt{}, LblnoOrIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOrsCellOpt{}, \equals{SortOrsCellOpt{}, R} (Val:SortOrsCellOpt{}, LblnoOrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOsequenceCellOpt{}, \equals{SortOsequenceCellOpt{}, R} (Val:SortOsequenceCellOpt{}, LblnoOsequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSequenceCellOpt{}, \equals{SortSequenceCellOpt{}, R} (Val:SortSequenceCellOpt{}, LblnoSequenceCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStateCellOpt{}, \equals{SortStateCellOpt{}, R} (Val:SortStateCellOpt{}, LblnoStateCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTransitionsCellOpt{}, \equals{SortTransitionsCellOpt{}, R} (Val:SortTransitionsCellOpt{}, LblnoTransitionsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVariablesCellOpt{}, \equals{SortVariablesCellOpt{}, R} (Val:SortVariablesCellOpt{}, LblnoVariablesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortChoiceOrBlock{}, \equals{SortChoiceOrBlock{}, R} (Val:SortChoiceOrBlock{}, Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceOrBlock{}} (\and{SortChoiceOrBlock{}} (Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(X0:SortInt{}), Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(Y0:SortInt{})), Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortChoiceOrBlock{}} (\and{SortChoiceOrBlock{}} (Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(X0:SortInt{}), Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(Y0:SortSequence{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortChoiceOrBlock{}, \equals{SortChoiceOrBlock{}, R} (Val:SortChoiceOrBlock{}, Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(K0:SortSequence{}))) [functional{}()] // functional
  axiom{}\implies{SortChoiceOrBlock{}} (\and{SortChoiceOrBlock{}} (Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(X0:SortSequence{}), Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(Y0:SortSequence{})), Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(\and{SortSequence{}} (X0:SortSequence{}, Y0:SortSequence{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblpushList{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblsizeList{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblsizeMap{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTransition{}, \equals{SortTransition{}, R} (Val:SortTransition{}, Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(K0:SortSequence{}))) [functional{}()] // functional
  axiom{}\implies{SortTransition{}} (\and{SortTransition{}} (Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(X0:SortSequence{}), Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(Y0:SortSequence{})), Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(\and{SortSequence{}} (X0:SortSequence{}, Y0:SortSequence{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVariableDeclaration{}, \equals{SortVariableDeclaration{}, R} (Val:SortVariableDeclaration{}, Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortVariableDeclaration{}} (\and{SortVariableDeclaration{}} (Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(X0:SortId{}), Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(Y0:SortId{})), Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVariableDeclaration{}} (\and{SortVariableDeclaration{}} (Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(X0:SortId{}), Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVariableDeclaration{}, \equals{SortVariableDeclaration{}, R} (Val:SortVariableDeclaration{}, Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortVariableDeclaration{}} (\and{SortVariableDeclaration{}} (Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(X0:SortId{}), Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(Y0:SortId{})), Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWork{}, \equals{SortWork{}, R} (Val:SortWork{}, Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(K0:SortOperation{}))) [functional{}()] // functional
  axiom{}\implies{SortWork{}} (\and{SortWork{}} (Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(X0:SortOperation{}), Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(Y0:SortOperation{})), Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(\and{SortOperation{}} (X0:SortOperation{}, Y0:SortOperation{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortWork{}} (\and{SortWork{}} (Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(X0:SortOperation{}), Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Y0:SortTransition{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortWork{}, \equals{SortWork{}, R} (Val:SortWork{}, Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(K0:SortTransition{}))) [functional{}()] // functional
  axiom{}\implies{SortWork{}} (\and{SortWork{}} (Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(X0:SortTransition{}), Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Y0:SortTransition{})), Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(\and{SortTransition{}} (X0:SortTransition{}, Y0:SortTransition{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortAssignment{}} (\exists{SortAssignment{}} (X0:SortId{}, \exists{SortAssignment{}} (X1:SortLiteral{}, Lbl'UndsColnEqlsUndsUnds'XSTS-SYNTAX'Unds'Assignment'Unds'Id'Unds'Literal{}(X0:SortId{}, X1:SortLiteral{}))), \bottom{SortAssignment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAssumption{}} (\exists{SortAssumption{}} (X0:SortLiteral{}, Lblassume'LParUndsRParUnds'XSTS-SYNTAX'Unds'Assumption'Unds'Literal{}(X0:SortLiteral{})), \bottom{SortAssumption{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortChoice{}} (\exists{SortChoice{}} (X0:SortInt{}, Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(X0:SortInt{})), \exists{SortChoice{}} (X0:SortSequence{}, \exists{SortChoice{}} (X1:SortChoiceOrBlocks{}, Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(X0:SortSequence{}, X1:SortChoiceOrBlocks{}))), \bottom{SortChoice{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceCell{}} (\exists{SortChoiceCell{}} (X0:SortCidCell{}, \exists{SortChoiceCell{}} (X1:SortCsequenceCell{}, Lbl'-LT-'choice'-GT-'{}(X0:SortCidCell{}, X1:SortCsequenceCell{}))), \bottom{SortChoiceCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceCellFragment{}} (\exists{SortChoiceCellFragment{}} (X0:SortCidCellOpt{}, \exists{SortChoiceCellFragment{}} (X1:SortCsequenceCellOpt{}, Lbl'-LT-'choice'-GT-'-fragment{}(X0:SortCidCellOpt{}, X1:SortCsequenceCellOpt{}))), \bottom{SortChoiceCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceCellMap{}} (\exists{SortChoiceCellMap{}} (Val:SortChoiceCell{}, inj{SortChoiceCell{}, SortChoiceCellMap{}} (Val:SortChoiceCell{})), \bottom{SortChoiceCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceIdCell{}} (\exists{SortChoiceIdCell{}} (X0:SortInt{}, Lbl'-LT-'choice-id'-GT-'{}(X0:SortInt{})), \bottom{SortChoiceIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceIdCellOpt{}} (LblnoChoiceIdCell{}(), \exists{SortChoiceIdCellOpt{}} (Val:SortChoiceIdCell{}, inj{SortChoiceIdCell{}, SortChoiceIdCellOpt{}} (Val:SortChoiceIdCell{})), \bottom{SortChoiceIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceOrBlock{}} (\exists{SortChoiceOrBlock{}} (X0:SortInt{}, Lblor'UndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Int{}(X0:SortInt{})), \exists{SortChoiceOrBlock{}} (X0:SortSequence{}, Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(X0:SortSequence{})), \bottom{SortChoiceOrBlock{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoiceOrBlocks{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks'QuotRBraUnds'ChoiceOrBlocks{}(), \exists{SortChoiceOrBlocks{}} (X0:SortChoiceOrBlock{}, \exists{SortChoiceOrBlocks{}} (X1:SortChoiceOrBlocks{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(X0:SortChoiceOrBlock{}, X1:SortChoiceOrBlocks{}))), \bottom{SortChoiceOrBlocks{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoicesCell{}} (\exists{SortChoicesCell{}} (X0:SortChoiceCellMap{}, Lbl'-LT-'choices'-GT-'{}(X0:SortChoiceCellMap{})), \bottom{SortChoicesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoicesCellFragment{}} (\exists{SortChoicesCellFragment{}} (X0:SortChoiceCellMap{}, Lbl'-LT-'choices'-GT-'-fragment{}(X0:SortChoiceCellMap{})), \bottom{SortChoicesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortChoicesCellOpt{}} (LblnoChoicesCell{}(), \exists{SortChoicesCellOpt{}} (Val:SortChoicesCell{}, inj{SortChoicesCell{}, SortChoicesCellOpt{}} (Val:SortChoicesCell{})), \bottom{SortChoicesCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCidCell{}} (\exists{SortCidCell{}} (X0:SortInt{}, Lbl'-LT-'cid'-GT-'{}(X0:SortInt{})), \bottom{SortCidCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCidCellOpt{}} (LblnoCidCell{}(), \exists{SortCidCellOpt{}} (Val:SortCidCell{}, inj{SortCidCell{}, SortCidCellOpt{}} (Val:SortCidCell{})), \bottom{SortCidCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCsequenceCell{}} (\exists{SortCsequenceCell{}} (X0:SortList{}, Lbl'-LT-'csequence'-GT-'{}(X0:SortList{})), \bottom{SortCsequenceCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCsequenceCellOpt{}} (LblnoCsequenceCell{}(), \exists{SortCsequenceCellOpt{}} (Val:SortCsequenceCell{}, inj{SortCsequenceCell{}, SortCsequenceCellOpt{}} (Val:SortCsequenceCell{})), \bottom{SortCsequenceCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurIdCell{}} (\exists{SortCurIdCell{}} (X0:SortInt{}, Lbl'-LT-'cur-id'-GT-'{}(X0:SortInt{})), \bottom{SortCurIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurIdCellOpt{}} (LblnoCurIdCell{}(), \exists{SortCurIdCellOpt{}} (Val:SortCurIdCell{}, inj{SortCurIdCell{}, SortCurIdCellOpt{}} (Val:SortCurIdCell{})), \bottom{SortCurIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortHavoc{}} (\exists{SortHavoc{}} (X0:SortId{}, Lblhavoc'LParUndsRParUnds'XSTS-SYNTAX'Unds'Havoc'Unds'Id{}(X0:SortId{})), \bottom{SortHavoc{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIdCell{}} (\exists{SortIdCell{}} (X0:SortInt{}, Lbl'-LT-'id'-GT-'{}(X0:SortInt{})), \bottom{SortIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdCellOpt{}} (LblnoIdCell{}(), \exists{SortIdCellOpt{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortIdCellOpt{}} (Val:SortIdCell{})), \bottom{SortIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAssignment{}, inj{SortAssignment{}, SortKItem{}} (Val:SortAssignment{})), \exists{SortKItem{}} (Val:SortAssumption{}, inj{SortAssumption{}, SortKItem{}} (Val:SortAssumption{})), \exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \exists{SortKItem{}} (Val:SortChoice{}, inj{SortChoice{}, SortKItem{}} (Val:SortChoice{})), \exists{SortKItem{}} (Val:SortChoiceCell{}, inj{SortChoiceCell{}, SortKItem{}} (Val:SortChoiceCell{})), \exists{SortKItem{}} (Val:SortChoiceCellFragment{}, inj{SortChoiceCellFragment{}, SortKItem{}} (Val:SortChoiceCellFragment{})), \exists{SortKItem{}} (Val:SortChoiceCellMap{}, inj{SortChoiceCellMap{}, SortKItem{}} (Val:SortChoiceCellMap{})), \exists{SortKItem{}} (Val:SortChoiceIdCell{}, inj{SortChoiceIdCell{}, SortKItem{}} (Val:SortChoiceIdCell{})), \exists{SortKItem{}} (Val:SortChoiceIdCellOpt{}, inj{SortChoiceIdCellOpt{}, SortKItem{}} (Val:SortChoiceIdCellOpt{})), \exists{SortKItem{}} (Val:SortChoiceOrBlock{}, inj{SortChoiceOrBlock{}, SortKItem{}} (Val:SortChoiceOrBlock{})), \exists{SortKItem{}} (Val:SortChoiceOrBlocks{}, inj{SortChoiceOrBlocks{}, SortKItem{}} (Val:SortChoiceOrBlocks{})), \exists{SortKItem{}} (Val:SortChoicesCell{}, inj{SortChoicesCell{}, SortKItem{}} (Val:SortChoicesCell{})), \exists{SortKItem{}} (Val:SortChoicesCellFragment{}, inj{SortChoicesCellFragment{}, SortKItem{}} (Val:SortChoicesCellFragment{})), \exists{SortKItem{}} (Val:SortChoicesCellOpt{}, inj{SortChoicesCellOpt{}, SortKItem{}} (Val:SortChoicesCellOpt{})), \exists{SortKItem{}} (Val:SortCidCell{}, inj{SortCidCell{}, SortKItem{}} (Val:SortCidCell{})), \exists{SortKItem{}} (Val:SortCidCellOpt{}, inj{SortCidCellOpt{}, SortKItem{}} (Val:SortCidCellOpt{})), \exists{SortKItem{}} (Val:SortCsequenceCell{}, inj{SortCsequenceCell{}, SortKItem{}} (Val:SortCsequenceCell{})), \exists{SortKItem{}} (Val:SortCsequenceCellOpt{}, inj{SortCsequenceCellOpt{}, SortKItem{}} (Val:SortCsequenceCellOpt{})), \exists{SortKItem{}} (Val:SortCurIdCell{}, inj{SortCurIdCell{}, SortKItem{}} (Val:SortCurIdCell{})), \exists{SortKItem{}} (Val:SortCurIdCellOpt{}, inj{SortCurIdCellOpt{}, SortKItem{}} (Val:SortCurIdCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \exists{SortKItem{}} (Val:SortHavoc{}, inj{SortHavoc{}, SortKItem{}} (Val:SortHavoc{})), \exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \exists{SortKItem{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortKItem{}} (Val:SortIdCell{})), \exists{SortKItem{}} (Val:SortIdCellOpt{}, inj{SortIdCellOpt{}, SortKItem{}} (Val:SortIdCellOpt{})), \exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \exists{SortKItem{}} (Val:SortLine{}, inj{SortLine{}, SortKItem{}} (Val:SortLine{})), \exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \exists{SortKItem{}} (Val:SortLiteral{}, inj{SortLiteral{}, SortKItem{}} (Val:SortLiteral{})), \exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \exists{SortKItem{}} (Val:SortOidCell{}, inj{SortOidCell{}, SortKItem{}} (Val:SortOidCell{})), \exists{SortKItem{}} (Val:SortOidCellOpt{}, inj{SortOidCellOpt{}, SortKItem{}} (Val:SortOidCellOpt{})), \exists{SortKItem{}} (Val:SortOperation{}, inj{SortOperation{}, SortKItem{}} (Val:SortOperation{})), \exists{SortKItem{}} (Val:SortOrCell{}, inj{SortOrCell{}, SortKItem{}} (Val:SortOrCell{})), \exists{SortKItem{}} (Val:SortOrCellFragment{}, inj{SortOrCellFragment{}, SortKItem{}} (Val:SortOrCellFragment{})), \exists{SortKItem{}} (Val:SortOrCellMap{}, inj{SortOrCellMap{}, SortKItem{}} (Val:SortOrCellMap{})), \exists{SortKItem{}} (Val:SortOrIdCell{}, inj{SortOrIdCell{}, SortKItem{}} (Val:SortOrIdCell{})), \exists{SortKItem{}} (Val:SortOrIdCellOpt{}, inj{SortOrIdCellOpt{}, SortKItem{}} (Val:SortOrIdCellOpt{})), \exists{SortKItem{}} (Val:SortOrsCell{}, inj{SortOrsCell{}, SortKItem{}} (Val:SortOrsCell{})), \exists{SortKItem{}} (Val:SortOrsCellFragment{}, inj{SortOrsCellFragment{}, SortKItem{}} (Val:SortOrsCellFragment{})), \exists{SortKItem{}} (Val:SortOrsCellOpt{}, inj{SortOrsCellOpt{}, SortKItem{}} (Val:SortOrsCellOpt{})), \exists{SortKItem{}} (Val:SortOsequenceCell{}, inj{SortOsequenceCell{}, SortKItem{}} (Val:SortOsequenceCell{})), \exists{SortKItem{}} (Val:SortOsequenceCellOpt{}, inj{SortOsequenceCellOpt{}, SortKItem{}} (Val:SortOsequenceCellOpt{})), \exists{SortKItem{}} (Val:SortProgram{}, inj{SortProgram{}, SortKItem{}} (Val:SortProgram{})), \exists{SortKItem{}} (Val:SortSequence{}, inj{SortSequence{}, SortKItem{}} (Val:SortSequence{})), \exists{SortKItem{}} (Val:SortSequenceCell{}, inj{SortSequenceCell{}, SortKItem{}} (Val:SortSequenceCell{})), \exists{SortKItem{}} (Val:SortSequenceCellOpt{}, inj{SortSequenceCellOpt{}, SortKItem{}} (Val:SortSequenceCellOpt{})), \exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \exists{SortKItem{}} (Val:SortStateCell{}, inj{SortStateCell{}, SortKItem{}} (Val:SortStateCell{})), \exists{SortKItem{}} (Val:SortStateCellFragment{}, inj{SortStateCellFragment{}, SortKItem{}} (Val:SortStateCellFragment{})), \exists{SortKItem{}} (Val:SortStateCellOpt{}, inj{SortStateCellOpt{}, SortKItem{}} (Val:SortStateCellOpt{})), \exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \exists{SortKItem{}} (Val:SortTransition{}, inj{SortTransition{}, SortKItem{}} (Val:SortTransition{})), \exists{SortKItem{}} (Val:SortTransitionCell{}, inj{SortTransitionCell{}, SortKItem{}} (Val:SortTransitionCell{})), \exists{SortKItem{}} (Val:SortTransitionCellFragment{}, inj{SortTransitionCellFragment{}, SortKItem{}} (Val:SortTransitionCellFragment{})), \exists{SortKItem{}} (Val:SortTransitionCellMap{}, inj{SortTransitionCellMap{}, SortKItem{}} (Val:SortTransitionCellMap{})), \exists{SortKItem{}} (Val:SortTransitions{}, inj{SortTransitions{}, SortKItem{}} (Val:SortTransitions{})), \exists{SortKItem{}} (Val:SortTransitionsCell{}, inj{SortTransitionsCell{}, SortKItem{}} (Val:SortTransitionsCell{})), \exists{SortKItem{}} (Val:SortTransitionsCellFragment{}, inj{SortTransitionsCellFragment{}, SortKItem{}} (Val:SortTransitionsCellFragment{})), \exists{SortKItem{}} (Val:SortTransitionsCellOpt{}, inj{SortTransitionsCellOpt{}, SortKItem{}} (Val:SortTransitionsCellOpt{})), \exists{SortKItem{}} (Val:SortVariableDeclaration{}, inj{SortVariableDeclaration{}, SortKItem{}} (Val:SortVariableDeclaration{})), \exists{SortKItem{}} (Val:SortVariablesCell{}, inj{SortVariablesCell{}, SortKItem{}} (Val:SortVariablesCell{})), \exists{SortKItem{}} (Val:SortVariablesCellOpt{}, inj{SortVariablesCellOpt{}, SortKItem{}} (Val:SortVariablesCellOpt{})), \exists{SortKItem{}} (Val:SortWork{}, inj{SortWork{}, SortKItem{}} (Val:SortWork{})), \bottom{SortKItem{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLine{}} (\exists{SortLine{}} (Val:SortTransition{}, inj{SortTransition{}, SortLine{}} (Val:SortTransition{})), \exists{SortLine{}} (Val:SortVariableDeclaration{}, inj{SortVariableDeclaration{}, SortLine{}} (Val:SortVariableDeclaration{})), \bottom{SortLine{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLiteral{}} (Lblempty'Unds'XSTS-SYNTAX'Unds'Literal{}(), \exists{SortLiteral{}} (Val:SortBool{}, inj{SortBool{}, SortLiteral{}} (Val:SortBool{})), \exists{SortLiteral{}} (Val:SortInt{}, inj{SortInt{}, SortLiteral{}} (Val:SortInt{})), \bottom{SortLiteral{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOidCell{}} (\exists{SortOidCell{}} (X0:SortInt{}, Lbl'-LT-'oid'-GT-'{}(X0:SortInt{})), \bottom{SortOidCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOidCellOpt{}} (LblnoOidCell{}(), \exists{SortOidCellOpt{}} (Val:SortOidCell{}, inj{SortOidCell{}, SortOidCellOpt{}} (Val:SortOidCell{})), \bottom{SortOidCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOperation{}} (\exists{SortOperation{}} (Val:SortAssignment{}, inj{SortAssignment{}, SortOperation{}} (Val:SortAssignment{})), \exists{SortOperation{}} (Val:SortAssumption{}, inj{SortAssumption{}, SortOperation{}} (Val:SortAssumption{})), \exists{SortOperation{}} (Val:SortChoice{}, inj{SortChoice{}, SortOperation{}} (Val:SortChoice{})), \exists{SortOperation{}} (Val:SortHavoc{}, inj{SortHavoc{}, SortOperation{}} (Val:SortHavoc{})), \bottom{SortOperation{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrCell{}} (\exists{SortOrCell{}} (X0:SortOidCell{}, \exists{SortOrCell{}} (X1:SortOsequenceCell{}, Lbl'-LT-'or'-GT-'{}(X0:SortOidCell{}, X1:SortOsequenceCell{}))), \bottom{SortOrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrCellFragment{}} (\exists{SortOrCellFragment{}} (X0:SortOidCellOpt{}, \exists{SortOrCellFragment{}} (X1:SortOsequenceCellOpt{}, Lbl'-LT-'or'-GT-'-fragment{}(X0:SortOidCellOpt{}, X1:SortOsequenceCellOpt{}))), \bottom{SortOrCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrCellMap{}} (\exists{SortOrCellMap{}} (Val:SortOrCell{}, inj{SortOrCell{}, SortOrCellMap{}} (Val:SortOrCell{})), \bottom{SortOrCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrIdCell{}} (\exists{SortOrIdCell{}} (X0:SortInt{}, Lbl'-LT-'or-id'-GT-'{}(X0:SortInt{})), \bottom{SortOrIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrIdCellOpt{}} (LblnoOrIdCell{}(), \exists{SortOrIdCellOpt{}} (Val:SortOrIdCell{}, inj{SortOrIdCell{}, SortOrIdCellOpt{}} (Val:SortOrIdCell{})), \bottom{SortOrIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrsCell{}} (\exists{SortOrsCell{}} (X0:SortOrCellMap{}, Lbl'-LT-'ors'-GT-'{}(X0:SortOrCellMap{})), \bottom{SortOrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrsCellFragment{}} (\exists{SortOrsCellFragment{}} (X0:SortOrCellMap{}, Lbl'-LT-'ors'-GT-'-fragment{}(X0:SortOrCellMap{})), \bottom{SortOrsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOrsCellOpt{}} (LblnoOrsCell{}(), \exists{SortOrsCellOpt{}} (Val:SortOrsCell{}, inj{SortOrsCell{}, SortOrsCellOpt{}} (Val:SortOrsCell{})), \bottom{SortOrsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOsequenceCell{}} (\exists{SortOsequenceCell{}} (X0:SortList{}, Lbl'-LT-'osequence'-GT-'{}(X0:SortList{})), \bottom{SortOsequenceCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOsequenceCellOpt{}} (LblnoOsequenceCell{}(), \exists{SortOsequenceCellOpt{}} (Val:SortOsequenceCell{}, inj{SortOsequenceCell{}, SortOsequenceCellOpt{}} (Val:SortOsequenceCell{})), \bottom{SortOsequenceCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortProgram{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program'QuotRBraUnds'Program{}(), \exists{SortProgram{}} (X0:SortLine{}, \exists{SortProgram{}} (X1:SortProgram{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(X0:SortLine{}, X1:SortProgram{}))), \bottom{SortProgram{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSequence{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence'QuotRBraUnds'Sequence{}(), \exists{SortSequence{}} (X0:SortOperation{}, \exists{SortSequence{}} (X1:SortSequence{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(X0:SortOperation{}, X1:SortSequence{}))), \bottom{SortSequence{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSequenceCell{}} (\exists{SortSequenceCell{}} (X0:SortList{}, Lbl'-LT-'sequence'-GT-'{}(X0:SortList{})), \bottom{SortSequenceCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSequenceCellOpt{}} (LblnoSequenceCell{}(), \exists{SortSequenceCellOpt{}} (Val:SortSequenceCell{}, inj{SortSequenceCell{}, SortSequenceCellOpt{}} (Val:SortSequenceCell{})), \bottom{SortSequenceCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStateCell{}} (\exists{SortStateCell{}} (X0:SortVariablesCell{}, \exists{SortStateCell{}} (X1:SortTransitionsCell{}, \exists{SortStateCell{}} (X2:SortChoicesCell{}, \exists{SortStateCell{}} (X3:SortOrsCell{}, Lbl'-LT-'state'-GT-'{}(X0:SortVariablesCell{}, X1:SortTransitionsCell{}, X2:SortChoicesCell{}, X3:SortOrsCell{}))))), \bottom{SortStateCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStateCellFragment{}} (\exists{SortStateCellFragment{}} (X0:SortVariablesCellOpt{}, \exists{SortStateCellFragment{}} (X1:SortTransitionsCellOpt{}, \exists{SortStateCellFragment{}} (X2:SortChoicesCellOpt{}, \exists{SortStateCellFragment{}} (X3:SortOrsCellOpt{}, Lbl'-LT-'state'-GT-'-fragment{}(X0:SortVariablesCellOpt{}, X1:SortTransitionsCellOpt{}, X2:SortChoicesCellOpt{}, X3:SortOrsCellOpt{}))))), \bottom{SortStateCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStateCellOpt{}} (LblnoStateCell{}(), \exists{SortStateCellOpt{}} (Val:SortStateCell{}, inj{SortStateCell{}, SortStateCellOpt{}} (Val:SortStateCell{})), \bottom{SortStateCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortKCell{}, \exists{SortTCell{}} (X1:SortStateCell{}, \exists{SortTCell{}} (X2:SortCurIdCell{}, \exists{SortTCell{}} (X3:SortChoiceIdCell{}, \exists{SortTCell{}} (X4:SortOrIdCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortStateCell{}, X2:SortCurIdCell{}, X3:SortChoiceIdCell{}, X4:SortOrIdCell{})))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTCellFragment{}} (X1:SortStateCellOpt{}, \exists{SortTCellFragment{}} (X2:SortCurIdCellOpt{}, \exists{SortTCellFragment{}} (X3:SortChoiceIdCellOpt{}, \exists{SortTCellFragment{}} (X4:SortOrIdCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortStateCellOpt{}, X2:SortCurIdCellOpt{}, X3:SortChoiceIdCellOpt{}, X4:SortOrIdCellOpt{})))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransition{}} (\exists{SortTransition{}} (X0:SortSequence{}, Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(X0:SortSequence{})), \bottom{SortTransition{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionCell{}} (\exists{SortTransitionCell{}} (X0:SortIdCell{}, \exists{SortTransitionCell{}} (X1:SortSequenceCell{}, Lbl'-LT-'transition'-GT-'{}(X0:SortIdCell{}, X1:SortSequenceCell{}))), \bottom{SortTransitionCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionCellFragment{}} (\exists{SortTransitionCellFragment{}} (X0:SortIdCellOpt{}, \exists{SortTransitionCellFragment{}} (X1:SortSequenceCellOpt{}, Lbl'-LT-'transition'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortSequenceCellOpt{}))), \bottom{SortTransitionCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionCellMap{}} (\exists{SortTransitionCellMap{}} (Val:SortTransitionCell{}, inj{SortTransitionCell{}, SortTransitionCellMap{}} (Val:SortTransitionCell{})), \bottom{SortTransitionCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitions{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions'QuotRBraUnds'Transitions{}(), \exists{SortTransitions{}} (X0:SortTransition{}, \exists{SortTransitions{}} (X1:SortTransitions{}, Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Transitions'Unds'Transition'Unds'Transitions{}(X0:SortTransition{}, X1:SortTransitions{}))), \bottom{SortTransitions{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionsCell{}} (\exists{SortTransitionsCell{}} (X0:SortTransitionCellMap{}, Lbl'-LT-'transitions'-GT-'{}(X0:SortTransitionCellMap{})), \bottom{SortTransitionsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionsCellFragment{}} (\exists{SortTransitionsCellFragment{}} (X0:SortTransitionCellMap{}, Lbl'-LT-'transitions'-GT-'-fragment{}(X0:SortTransitionCellMap{})), \bottom{SortTransitionsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTransitionsCellOpt{}} (LblnoTransitionsCell{}(), \exists{SortTransitionsCellOpt{}} (Val:SortTransitionsCell{}, inj{SortTransitionsCell{}, SortTransitionsCellOpt{}} (Val:SortTransitionsCell{})), \bottom{SortTransitionsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVariableDeclaration{}} (\exists{SortVariableDeclaration{}} (X0:SortId{}, Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(X0:SortId{})), \exists{SortVariableDeclaration{}} (X0:SortId{}, Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(X0:SortId{})), \bottom{SortVariableDeclaration{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVariablesCell{}} (\exists{SortVariablesCell{}} (X0:SortMap{}, Lbl'-LT-'variables'-GT-'{}(X0:SortMap{})), \bottom{SortVariablesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVariablesCellOpt{}} (LblnoVariablesCell{}(), \exists{SortVariablesCellOpt{}} (Val:SortVariablesCell{}, inj{SortVariablesCell{}, SortVariablesCellOpt{}} (Val:SortVariablesCell{})), \bottom{SortVariablesCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWork{}} (\exists{SortWork{}} (X0:SortOperation{}, Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Operation{}(X0:SortOperation{})), \exists{SortWork{}} (X0:SortTransition{}, Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(X0:SortTransition{})), \bottom{SortWork{}}()) [constructor{}()] // no junk

// rules
// rule `<generatedTop>`(`<T>`(`<k>`(inj{Choice,KItem}(`choice{_}__XSTS-SYNTAX_Choice_Sequence_ChoiceOrBlocks`(S,B))~>_DotVar2),`<state>`(_Gen0,_Gen1,`<choices>`(`_ChoiceCellMap_`(`ChoiceCellMapItem`(`<cid>`(CHOICEID),`<choice>`(`<cid>`(CHOICEID),`<csequence>`(`_List_`(`.List`(.KList),_DotVar5)))),_DotVar4)),_Gen2),_Gen3,`<choice-id>`(CHOICEID) #as _Gen13,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{ChoiceOrBlocks,KItem}(B)~>_DotVar2),`<state>`(_Gen0,_Gen1,`<choices>`(`_ChoiceCellMap_`(`ChoiceCellMapItem`(`<cid>`(CHOICEID),`<choice>`(`<cid>`(CHOICEID),`<csequence>`(`_List_`(`ListItem`(inj{Sequence,KItem}(S)),_DotVar5)))),_DotVar4)),_Gen2),_Gen3,_Gen13,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0e0f682dfd4728c46d43708b89b55c0b11c26ee5827649230cfbe4d171f94a4), org.kframework.attributes.Location(Location(119,10,121,97)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoice{}, SortKItem{}}(Lblchoice'LBraUndsRBraUndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Sequence'Unds'ChoiceOrBlocks{}(VarS:SortSequence{},VarB:SortChoiceOrBlocks{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Var'Unds'Gen1:SortTransitionsCell{},Lbl'-LT-'choices'-GT-'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(LblChoiceCellMapItem{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'choice'-GT-'{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'csequence'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortChoiceCellMap{})),Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},\and{SortChoiceIdCell{}}(Lbl'-LT-'choice-id'-GT-'{}(VarCHOICEID:SortInt{}),Var'Unds'Gen13:SortChoiceIdCell{}),Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(VarB:SortChoiceOrBlocks{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Var'Unds'Gen1:SortTransitionsCell{},Lbl'-LT-'choices'-GT-'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(LblChoiceCellMapItem{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'choice'-GT-'{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'csequence'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortSequence{}, SortKItem{}}(VarS:SortSequence{})),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortChoiceCellMap{})),Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen13:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b0e0f682dfd4728c46d43708b89b55c0b11c26ee5827649230cfbe4d171f94a4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,10,121,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ChoiceOrBlocks,KItem}(`.List{"___XSTS-SYNTAX_ChoiceOrBlocks_ChoiceOrBlock_ChoiceOrBlocks"}_ChoiceOrBlocks`(.KList))~>_DotVar2),_Gen0,_Gen1,`<choice-id>`(CHOICEID),_Gen2),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,`<choice-id>`(`_+Int_`(CHOICEID,#token("1","Int"))),_Gen2),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5060906b3b04c5830d000d72ed2efd32ddb12951c21555ecd17af474f509a5e6), org.kframework.attributes.Location(Location(131,10,132,62)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks'QuotRBraUnds'ChoiceOrBlocks{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Lbl'-LT-'choice-id'-GT-'{}(VarCHOICEID:SortInt{}),Var'Unds'Gen2:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Lbl'-LT-'choice-id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarCHOICEID:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'Gen2:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5060906b3b04c5830d000d72ed2efd32ddb12951c21555ecd17af474f509a5e6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,10,132,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ChoiceOrBlocks,KItem}(`___XSTS-SYNTAX_ChoiceOrBlocks_ChoiceOrBlock_ChoiceOrBlocks`(`or{_}_XSTS-SYNTAX_ChoiceOrBlock_Sequence`(B),S))~>_DotVar2),`<state>`(_Gen0,_Gen1,`<choices>`(`_ChoiceCellMap_`(`ChoiceCellMapItem`(`<cid>`(CHOICEID),`<choice>`(`<cid>`(CHOICEID),`<csequence>`(`_List_`(`.List`(.KList),_DotVar5)))),_DotVar4)),_Gen2),_Gen3,`<choice-id>`(CHOICEID) #as _Gen14,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{ChoiceOrBlocks,KItem}(S)~>_DotVar2),`<state>`(_Gen0,_Gen1,`<choices>`(`_ChoiceCellMap_`(`ChoiceCellMapItem`(`<cid>`(CHOICEID),`<choice>`(`<cid>`(CHOICEID),`<csequence>`(`_List_`(`ListItem`(inj{Sequence,KItem}(B)),_DotVar5)))),_DotVar4)),_Gen2),_Gen3,_Gen14,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27feb81521f3e9ee62ed54c594369475411e50aab0cd7fc177d03c779504d0ca), org.kframework.attributes.Location(Location(125,10,127,97)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'ChoiceOrBlocks'Unds'ChoiceOrBlock'Unds'ChoiceOrBlocks{}(Lblor'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'ChoiceOrBlock'Unds'Sequence{}(VarB:SortSequence{}),VarS:SortChoiceOrBlocks{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Var'Unds'Gen1:SortTransitionsCell{},Lbl'-LT-'choices'-GT-'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(LblChoiceCellMapItem{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'choice'-GT-'{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'csequence'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortChoiceCellMap{})),Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},\and{SortChoiceIdCell{}}(Lbl'-LT-'choice-id'-GT-'{}(VarCHOICEID:SortInt{}),Var'Unds'Gen14:SortChoiceIdCell{}),Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(VarS:SortChoiceOrBlocks{}),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Var'Unds'Gen1:SortTransitionsCell{},Lbl'-LT-'choices'-GT-'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(LblChoiceCellMapItem{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'choice'-GT-'{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'csequence'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortSequence{}, SortKItem{}}(VarB:SortSequence{})),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortChoiceCellMap{})),Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen14:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("27feb81521f3e9ee62ed54c594369475411e50aab0cd7fc177d03c779504d0ca"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,10,127,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Program,KItem}(`.List{"___XSTS-SYNTAX_Program_Line_Program"}_Program`(.KList))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b466926e9a60fc6ab6df3f8a867638f42315face5de469d859d8d193db684b91), org.kframework.attributes.Location(Location(85,10,85,36)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortProgram{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program'QuotRBraUnds'Program{}()),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b466926e9a60fc6ab6df3f8a867638f42315face5de469d859d8d193db684b91"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,10,85,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Program,KItem}(`___XSTS-SYNTAX_Program_Line_Program`(L,P))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Line,KItem}(L)~>inj{Program,KItem}(P)~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(19c130071776dd554da4215c4fedb395a56c55cb7c2d1afc3560ce9415fce123), org.kframework.attributes.Location(Location(84,10,84,48)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortProgram{}, SortKItem{}}(Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Program'Unds'Line'Unds'Program{}(VarL:SortLine{},VarP:SortProgram{})),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLine{}, SortKItem{}}(VarL:SortLine{}),kseq{}(inj{SortProgram{}, SortKItem{}}(VarP:SortProgram{}),Var'Unds'DotVar2:SortK{}))),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("19c130071776dd554da4215c4fedb395a56c55cb7c2d1afc3560ce9415fce123"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,10,84,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Transition,KItem}(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(S) #as _Gen9)~>_DotVar2),`<state>`(_Gen0,`<transitions>`(_DotVar4),_Gen1,_Gen2),`<cur-id>`(CURID),_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(_Gen9))~>_DotVar2),`<state>`(_Gen0,`<transitions>`(`_TransitionCellMap_`(`TransitionCellMapItem`(`<id>`(`_+Int_`(CURID,#token("1","Int"))),`<transition>`(`<id>`(`_+Int_`(CURID,#token("1","Int"))),`<sequence>`(`.List`(.KList)))),_DotVar4)),_Gen1,_Gen2),`<cur-id>`(`_+Int_`(CURID,#token("1","Int"))),_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2444b5271d757e63ffb7b083d1047caf3a3273d52ad0e0d21be11ecd45b72f4), org.kframework.attributes.Location(Location(97,10,99,92)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTransition{}, SortKItem{}}(\and{SortTransition{}}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(VarS:SortSequence{}),Var'Unds'Gen9:SortTransition{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Var'Unds'DotVar4:SortTransitionCellMap{}),Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Lbl'-LT-'cur-id'-GT-'{}(VarCURID:SortInt{}),Var'Unds'Gen3:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Var'Unds'Gen9:SortTransition{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Lbl'Unds'TransitionCellMap'Unds'{}(LblTransitionCellMapItem{}(Lbl'-LT-'id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarCURID:SortInt{},\dv{SortInt{}}("1"))),Lbl'-LT-'transition'-GT-'{}(Lbl'-LT-'id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarCURID:SortInt{},\dv{SortInt{}}("1"))),Lbl'-LT-'sequence'-GT-'{}(Lbl'Stop'List{}()))),Var'Unds'DotVar4:SortTransitionCellMap{})),Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Lbl'-LT-'cur-id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarCURID:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'Gen3:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c2444b5271d757e63ffb7b083d1047caf3a3273d52ad0e0d21be11ecd45b72f4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,10,99,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VariableDeclaration,KItem}(`var_:boolean_XSTS-SYNTAX_VariableDeclaration_Id`(X))~>_DotVar2),`<state>`(`<variables>`(STATE),_Gen0,_Gen1,_Gen2),_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),`<state>`(`<variables>`(`Map:update`(STATE,inj{Id,KItem}(X),inj{Literal,KItem}(`empty_XSTS-SYNTAX_Literal`(.KList)))),_Gen0,_Gen1,_Gen2),_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b164a180dec971edf5c0471ae518d8e30f4925e76d3db55b9e658b4b14d7e25), org.kframework.attributes.Location(Location(93,10,94,64)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), priority(48)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVariableDeclaration{}, SortKItem{}}(Lblvar'UndsColn'boolean'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(VarX:SortId{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Lbl'-LT-'variables'-GT-'{}(VarSTATE:SortMap{}),Var'Unds'Gen0:SortTransitionsCell{},Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen4:SortChoiceIdCell{},Var'Unds'Gen5:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'state'-GT-'{}(Lbl'-LT-'variables'-GT-'{}(LblMap'Coln'update{}(VarSTATE:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortLiteral{}, SortKItem{}}(Lblempty'Unds'XSTS-SYNTAX'Unds'Literal{}()))),Var'Unds'Gen0:SortTransitionsCell{},Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen4:SortChoiceIdCell{},Var'Unds'Gen5:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6b164a180dec971edf5c0471ae518d8e30f4925e76d3db55b9e658b4b14d7e25"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,10,94,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), priority{}("48")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VariableDeclaration,KItem}(`var_:integer_XSTS-SYNTAX_VariableDeclaration_Id`(X))~>_DotVar2),`<state>`(`<variables>`(STATE),_Gen0,_Gen1,_Gen2),_Gen3,_Gen4,_Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),`<state>`(`<variables>`(`Map:update`(STATE,inj{Id,KItem}(X),inj{Literal,KItem}(`empty_XSTS-SYNTAX_Literal`(.KList)))),_Gen0,_Gen1,_Gen2),_Gen3,_Gen4,_Gen5),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b64d63af0f3b76e9777b70bd538daec39f295a56272c823a9ddbefb599b2741e), org.kframework.attributes.Location(Location(91,10,92,64)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), priority(48)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVariableDeclaration{}, SortKItem{}}(Lblvar'UndsColn'integer'Unds'XSTS-SYNTAX'Unds'VariableDeclaration'Unds'Id{}(VarX:SortId{})),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Lbl'-LT-'variables'-GT-'{}(VarSTATE:SortMap{}),Var'Unds'Gen0:SortTransitionsCell{},Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen4:SortChoiceIdCell{},Var'Unds'Gen5:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Lbl'-LT-'state'-GT-'{}(Lbl'-LT-'variables'-GT-'{}(LblMap'Coln'update{}(VarSTATE:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortLiteral{}, SortKItem{}}(Lblempty'Unds'XSTS-SYNTAX'Unds'Literal{}()))),Var'Unds'Gen0:SortTransitionsCell{},Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen3:SortCurIdCell{},Var'Unds'Gen4:SortChoiceIdCell{},Var'Unds'Gen5:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b64d63af0f3b76e9777b70bd538daec39f295a56272c823a9ddbefb599b2741e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,10,92,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), priority{}("48")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(`.List{"___XSTS-SYNTAX_Sequence_Operation_Sequence"}_Sequence`(.KList))))~>_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(_DotVar2),_Gen0,_Gen1,_Gen2,_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25d4ec2b62468e077646cca4a4e32d22a0599f16baff9f97d6c108bde64c672e), org.kframework.attributes.Location(Location(114,10,114,55)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence'QuotRBraUnds'Sequence{}()))),Var'Unds'DotVar2:SortK{})),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar2:SortK{}),Var'Unds'Gen0:SortStateCell{},Var'Unds'Gen1:SortCurIdCell{},Var'Unds'Gen2:SortChoiceIdCell{},Var'Unds'Gen3:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("25d4ec2b62468e077646cca4a4e32d22a0599f16baff9f97d6c108bde64c672e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,10,114,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(`___XSTS-SYNTAX_Sequence_Operation_Sequence`(O,S))))~>_DotVar2),`<state>`(_Gen0,`<transitions>`(`_TransitionCellMap_`(`TransitionCellMapItem`(`<id>`(CURID),`<transition>`(`<id>`(CURID),`<sequence>`(`_List_`(`.List`(.KList),_DotVar5)))),_DotVar4)),_Gen1,_Gen2),`<cur-id>`(CURID) #as _Gen15,_Gen3,_Gen4),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(S)))~>_DotVar2),`<state>`(_Gen0,`<transitions>`(`_TransitionCellMap_`(`TransitionCellMapItem`(`<id>`(CURID),`<transition>`(`<id>`(CURID),`<sequence>`(`_List_`(`ListItem`(inj{Operation,KItem}(O)),_DotVar5)))),_DotVar4)),_Gen1,_Gen2),_Gen15,_Gen3,_Gen4),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(52b3e906aa681fc9004fa17716a771fdca4c42cc97484bd49d386ebc513c4bc6), org.kframework.attributes.Location(Location(103,10,105,96)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), priority(51)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(VarO:SortOperation{},VarS:SortSequence{})))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Lbl'Unds'TransitionCellMap'Unds'{}(LblTransitionCellMapItem{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'transition'-GT-'{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'sequence'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortTransitionCellMap{})),Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),\and{SortCurIdCell{}}(Lbl'-LT-'cur-id'-GT-'{}(VarCURID:SortInt{}),Var'Unds'Gen15:SortCurIdCell{}),Var'Unds'Gen3:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(VarS:SortSequence{}))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Lbl'Unds'TransitionCellMap'Unds'{}(LblTransitionCellMapItem{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'transition'-GT-'{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'sequence'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortOperation{}, SortKItem{}}(VarO:SortOperation{})),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortTransitionCellMap{})),Var'Unds'Gen1:SortChoicesCell{},Var'Unds'Gen2:SortOrsCell{}),Var'Unds'Gen15:SortCurIdCell{},Var'Unds'Gen3:SortChoiceIdCell{},Var'Unds'Gen4:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("52b3e906aa681fc9004fa17716a771fdca4c42cc97484bd49d386ebc513c4bc6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,10,105,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)"), priority{}("51")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(`___XSTS-SYNTAX_Sequence_Operation_Sequence`(inj{Choice,Operation}(O),S))))~>_DotVar2),`<state>`(_Gen0,`<transitions>`(`_TransitionCellMap_`(`TransitionCellMapItem`(`<id>`(CURID),`<transition>`(`<id>`(CURID),`<sequence>`(`_List_`(`.List`(.KList),_DotVar5)))),_DotVar4)),`<choices>`(_DotVar6),_Gen1),`<cur-id>`(CURID) #as _Gen14,`<choice-id>`(CHOICEID) #as _Gen15,_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Choice,KItem}(O)~>inj{Work,KItem}(`work(_)_XSTS_Work_Transition`(`tran{_}_XSTS-SYNTAX_Transition_Sequence`(S)))~>_DotVar2),`<state>`(_Gen0,`<transitions>`(`_TransitionCellMap_`(`TransitionCellMapItem`(`<id>`(CURID),`<transition>`(`<id>`(CURID),`<sequence>`(`_List_`(`ListItem`(inj{Choice,KItem}(`choice__XSTS-SYNTAX_Choice_Int`(CHOICEID))),_DotVar5)))),_DotVar4)),`<choices>`(`_ChoiceCellMap_`(`ChoiceCellMapItem`(`<cid>`(CHOICEID),`<choice>`(`<cid>`(CHOICEID),`<csequence>`(`.List`(.KList)))),_DotVar6)),_Gen1),_Gen14,_Gen15,_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1eddd4f75d889e5e489457e13242158701a699b919eb6d6175cb7399f5a2af29), org.kframework.attributes.Location(Location(108,10,112,88)), org.kframework.attributes.Source(Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(Lbl'UndsUndsUnds'XSTS-SYNTAX'Unds'Sequence'Unds'Operation'Unds'Sequence{}(inj{SortChoice{}, SortOperation{}}(VarO:SortChoice{}),VarS:SortSequence{})))),Var'Unds'DotVar2:SortK{})),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Lbl'Unds'TransitionCellMap'Unds'{}(LblTransitionCellMapItem{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'transition'-GT-'{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'sequence'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortTransitionCellMap{})),Lbl'-LT-'choices'-GT-'{}(Var'Unds'DotVar6:SortChoiceCellMap{}),Var'Unds'Gen1:SortOrsCell{}),\and{SortCurIdCell{}}(Lbl'-LT-'cur-id'-GT-'{}(VarCURID:SortInt{}),Var'Unds'Gen14:SortCurIdCell{}),\and{SortChoiceIdCell{}}(Lbl'-LT-'choice-id'-GT-'{}(VarCHOICEID:SortInt{}),Var'Unds'Gen15:SortChoiceIdCell{}),Var'Unds'DotVar1:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortChoice{}, SortKItem{}}(VarO:SortChoice{}),kseq{}(inj{SortWork{}, SortKItem{}}(Lblwork'LParUndsRParUnds'XSTS'Unds'Work'Unds'Transition{}(Lbltran'LBraUndsRBraUnds'XSTS-SYNTAX'Unds'Transition'Unds'Sequence{}(VarS:SortSequence{}))),Var'Unds'DotVar2:SortK{}))),Lbl'-LT-'state'-GT-'{}(Var'Unds'Gen0:SortVariablesCell{},Lbl'-LT-'transitions'-GT-'{}(Lbl'Unds'TransitionCellMap'Unds'{}(LblTransitionCellMapItem{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'transition'-GT-'{}(Lbl'-LT-'id'-GT-'{}(VarCURID:SortInt{}),Lbl'-LT-'sequence'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortChoice{}, SortKItem{}}(Lblchoice'UndsUnds'XSTS-SYNTAX'Unds'Choice'Unds'Int{}(VarCHOICEID:SortInt{}))),Var'Unds'DotVar5:SortList{})))),Var'Unds'DotVar4:SortTransitionCellMap{})),Lbl'-LT-'choices'-GT-'{}(Lbl'Unds'ChoiceCellMap'Unds'{}(LblChoiceCellMapItem{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'choice'-GT-'{}(Lbl'-LT-'cid'-GT-'{}(VarCHOICEID:SortInt{}),Lbl'-LT-'csequence'-GT-'{}(Lbl'Stop'List{}()))),Var'Unds'DotVar6:SortChoiceCellMap{})),Var'Unds'Gen1:SortOrsCell{}),Var'Unds'Gen14:SortCurIdCell{},Var'Unds'Gen15:SortChoiceIdCell{},Var'Unds'DotVar1:SortOrIdCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1eddd4f75d889e5e489457e13242158701a699b919eb6d6175cb7399f5a2af29"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,10,112,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]

// rule `ChoiceCellMapKey`(`<choice>`(Key,_DotVar0))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3c89977d9476b0fc89e20c19b7f65825648199d43156725fdc1793d0974482b0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortChoiceCell{}, R} (
            X0:SortChoiceCell{},
            Lbl'-LT-'choice'-GT-'{}(VarKey:SortCidCell{},Var'Unds'DotVar0:SortCsequenceCell{})
          ),
          \top{R} ()
        )),
    \equals{SortCidCell{},R} (
      LblChoiceCellMapKey{}(X0:SortChoiceCell{}),
     \and{SortCidCell{}} (
       VarKey:SortCidCell{},
        \top{SortCidCell{}}())))
  [UNIQUE'Unds'ID{}("3c89977d9476b0fc89e20c19b7f65825648199d43156725fdc1793d0974482b0")]

// rule `OrCellMapKey`(`<or>`(Key,_DotVar0))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed4ac2f10c2181498ee8d713fe078f0f1a46a2686d681d588ae1be28f29ec176)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortOrCell{}, R} (
            X0:SortOrCell{},
            Lbl'-LT-'or'-GT-'{}(VarKey:SortOidCell{},Var'Unds'DotVar0:SortOsequenceCell{})
          ),
          \top{R} ()
        )),
    \equals{SortOidCell{},R} (
      LblOrCellMapKey{}(X0:SortOrCell{}),
     \and{SortOidCell{}} (
       VarKey:SortOidCell{},
        \top{SortOidCell{}}())))
  [UNIQUE'Unds'ID{}("ed4ac2f10c2181498ee8d713fe078f0f1a46a2686d681d588ae1be28f29ec176")]

// rule `TransitionCellMapKey`(`<transition>`(Key,_DotVar0))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b4c966fb45157642f2168a52f0a265c3923e95884b5e10838bf4b21019e711a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortTransitionCell{}, R} (
            X0:SortTransitionCell{},
            Lbl'-LT-'transition'-GT-'{}(VarKey:SortIdCell{},Var'Unds'DotVar0:SortSequenceCell{})
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      LblTransitionCellMapKey{}(X0:SortTransitionCell{}),
     \and{SortIdCell{}} (
       VarKey:SortIdCell{},
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("0b4c966fb45157642f2168a52f0a265c3923e95884b5e10838bf4b21019e711a")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(1159,8,1159,57)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1159,8,1159,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1442,8,1442,53)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1442,8,1442,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2322,8,2322,45)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2322,8,2322,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(1132,8,1132,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1132,8,1132,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72139ee1f2b9362a47514de6503329ccf3c27e74e3ebfa0c0fe26321ec13f281), org.kframework.attributes.Location(Location(1131,8,1131,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("72139ee1f2b9362a47514de6503329ccf3c27e74e3ebfa0c0fe26321ec13f281"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1131,8,1131,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd61c826168aab115cd7f528702e8187ca16195bdcf29f42f33a32c83afebb12), org.kframework.attributes.Location(Location(1133,8,1133,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd61c826168aab115cd7f528702e8187ca16195bdcf29f42f33a32c83afebb12"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1133,8,1133,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(1130,8,1130,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1130,8,1130,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(1137,8,1137,36)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,8,1137,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2cfb33affb9c668d39a4a7267156085e1dbd3584fc7925b1aa9a1672bb9eab9f), org.kframework.attributes.Location(Location(1136,8,1136,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2cfb33affb9c668d39a4a7267156085e1dbd3584fc7925b1aa9a1672bb9eab9f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1136,8,1136,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andThenBool_`(_Gen0,#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(198861009d03d8f5220000f16342962720be289ca0d49b12953fb2693e2fea01), org.kframework.attributes.Location(Location(1138,8,1138,36)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("198861009d03d8f5220000f16342962720be289ca0d49b12953fb2693e2fea01"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,8,1138,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(1135,8,1135,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1135,8,1135,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1431,8,1432,23)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1431,8,1432,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1443,8,1443,58)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1443,8,1443,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93b8d798abd6d9999e0e733384ad161e9a0bd2f074623a742afdc63964380aba), org.kframework.attributes.Location(Location(1157,8,1157,45)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("93b8d798abd6d9999e0e733384ad161e9a0bd2f074623a742afdc63964380aba"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1157,8,1157,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b4994db7b40b72dc09ac8d5d036263b215c37d45f45d764251d8b607a7592ba), org.kframework.attributes.Location(Location(1156,8,1156,39)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b4994db7b40b72dc09ac8d5d036263b215c37d45f45d764251d8b607a7592ba"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1156,8,1156,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(1155,8,1155,40)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1155,8,1155,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(1154,8,1154,36)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1154,8,1154,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(44257f63a99a0583c2d10058edbff90118966e30914b3a637b8315212c681bc4), concrete, org.kframework.attributes.Location(Location(1434,5,1437,23)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("44257f63a99a0583c2d10058edbff90118966e30914b3a637b8315212c681bc4"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1434,5,1437,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5bb27ab54700cb845d17b12e0b0a4cbd5c8944272bcbe0d15ccc0b44d0049ff), org.kframework.attributes.Location(Location(1147,8,1147,32)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a5bb27ab54700cb845d17b12e0b0a4cbd5c8944272bcbe0d15ccc0b44d0049ff"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,8,1147,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(942af273100b5a3c1fb3d0c8cc92b0bf845a7b34444c5a6c35b7d3fe72bef48e), org.kframework.attributes.Location(Location(1145,8,1145,34)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("942af273100b5a3c1fb3d0c8cc92b0bf845a7b34444c5a6c35b7d3fe72bef48e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1145,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(1146,8,1146,32)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1146,8,1146,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(1144,8,1144,34)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1144,8,1144,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13cf42d440f9a7a360a8136ee4b35ae7b99501f515322d214c3b866691f4713b), org.kframework.attributes.Location(Location(1152,8,1152,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("13cf42d440f9a7a360a8136ee4b35ae7b99501f515322d214c3b866691f4713b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1152,8,1152,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2459cad4fbb946a5c7f71565601afeeec79f05f41497b1f7ef547578c88f3158), org.kframework.attributes.Location(Location(1150,8,1150,33)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(Var'Unds'Gen0:SortBool{},\dv{SortBool{}}("true")),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2459cad4fbb946a5c7f71565601afeeec79f05f41497b1f7ef547578c88f3158"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1150,8,1150,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(1151,8,1151,37)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1151,8,1151,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(1149,8,1149,33)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1149,8,1149,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(1142,8,1142,38)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,8,1142,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(69f518203376930fb76ce51df5dd0c6c81d19f71eba3a1852afa5301d02eb4fa), org.kframework.attributes.Location(Location(1141,8,1141,38)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)]), simplification]
  axiom{R} \implies{R} (
    \top{R}(),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("69f518203376930fb76ce51df5dd0c6c81d19f71eba3a1852afa5301d02eb4fa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)"), simplification{}()]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(1140,8,1140,38)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1140,8,1140,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c384edb8f3875244a593dda6163c3dee1bce5485e4e1848892aebc2bab67d2e9), concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("c384edb8f3875244a593dda6163c3dee1bce5485e4e1848892aebc2bab67d2e9"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,8,749,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1427,8,1427,85)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,8,1427,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1446,8,1446,28)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1446,8,1446,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3")]

// rule initChoiceCell(.KList)=>`ChoiceCellMapItem`(initCidCell(.KList),`<choice>`(initCidCell(.KList),initCsequenceCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afd3e3d18d81e3180625900f1892931d86f6c15abddf53cc371455ed6b3d363f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortChoiceCellMap{},R} (
      LblinitChoiceCell{}(),
     \and{SortChoiceCellMap{}} (
       LblChoiceCellMapItem{}(LblinitCidCell{}(),Lbl'-LT-'choice'-GT-'{}(LblinitCidCell{}(),LblinitCsequenceCell{}())),
        \top{SortChoiceCellMap{}}())))
  [UNIQUE'Unds'ID{}("afd3e3d18d81e3180625900f1892931d86f6c15abddf53cc371455ed6b3d363f")]

// rule initChoiceIdCell(.KList)=>`<choice-id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cacc59502d943d68a61d8667ec1ff9b9b2ce4b1ce9ef9ab76fe7df1baef0110), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortChoiceIdCell{},R} (
      LblinitChoiceIdCell{}(),
     \and{SortChoiceIdCell{}} (
       Lbl'-LT-'choice-id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortChoiceIdCell{}}())))
  [UNIQUE'Unds'ID{}("9cacc59502d943d68a61d8667ec1ff9b9b2ce4b1ce9ef9ab76fe7df1baef0110")]

// rule initChoicesCell(.KList)=>`<choices>`(`.ChoiceCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9a1e1cdd54b5f074883eef332a382b62c272aab5a3227320e6bbbb99b21fc21), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortChoicesCell{},R} (
      LblinitChoicesCell{}(),
     \and{SortChoicesCell{}} (
       Lbl'-LT-'choices'-GT-'{}(Lbl'Stop'ChoiceCellMap{}()),
        \top{SortChoicesCell{}}())))
  [UNIQUE'Unds'ID{}("a9a1e1cdd54b5f074883eef332a382b62c272aab5a3227320e6bbbb99b21fc21")]

// rule initCidCell(.KList)=>`<cid>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60efe62641baf160467aeef3df23458cc57ca9dd7e34431538a9d2b0fa244782), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCidCell{},R} (
      LblinitCidCell{}(),
     \and{SortCidCell{}} (
       Lbl'-LT-'cid'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortCidCell{}}())))
  [UNIQUE'Unds'ID{}("60efe62641baf160467aeef3df23458cc57ca9dd7e34431538a9d2b0fa244782")]

// rule initCsequenceCell(.KList)=>`<csequence>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d159d397c6fb54d77f3b4d0fecb539603a31214a01fe186a8935104aa420302a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCsequenceCell{},R} (
      LblinitCsequenceCell{}(),
     \and{SortCsequenceCell{}} (
       Lbl'-LT-'csequence'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortCsequenceCell{}}())))
  [UNIQUE'Unds'ID{}("d159d397c6fb54d77f3b4d0fecb539603a31214a01fe186a8935104aa420302a")]

// rule initCurIdCell(.KList)=>`<cur-id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a90fa52945a80885e8022f45bb36d3f161fda2b295dd449f05406c461260034), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCurIdCell{},R} (
      LblinitCurIdCell{}(),
     \and{SortCurIdCell{}} (
       Lbl'-LT-'cur-id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortCurIdCell{}}())))
  [UNIQUE'Unds'ID{}("7a90fa52945a80885e8022f45bb36d3f161fda2b295dd449f05406c461260034")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553")]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28")]

// rule initIdCell(.KList)=>`<id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortIdCell{},R} (
      LblinitIdCell{}(),
     \and{SortIdCell{}} (
       Lbl'-LT-'id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df")]

// rule initKCell(Init)=>`<k>`(inj{Program,KItem}(`project:Program`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3f456a60337067013f63e2f590f1c1dcf30800d1fabf722c5d0973f3e7fdfdf1), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortProgram{}, SortKItem{}}(Lblproject'Coln'Program{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("3f456a60337067013f63e2f590f1c1dcf30800d1fabf722c5d0973f3e7fdfdf1")]

// rule initOidCell(.KList)=>`<oid>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84c1f155cb9018b3d70cd6313a6768073c964df7e9ca0cdfa1dddb03bb30dfd1), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOidCell{},R} (
      LblinitOidCell{}(),
     \and{SortOidCell{}} (
       Lbl'-LT-'oid'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortOidCell{}}())))
  [UNIQUE'Unds'ID{}("84c1f155cb9018b3d70cd6313a6768073c964df7e9ca0cdfa1dddb03bb30dfd1")]

// rule initOrCell(.KList)=>`OrCellMapItem`(initOidCell(.KList),`<or>`(initOidCell(.KList),initOsequenceCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21f59fa208bab83b8a15dcd2ac5666f637d9bda4da27a985baac6ff26e5d8a1b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOrCellMap{},R} (
      LblinitOrCell{}(),
     \and{SortOrCellMap{}} (
       LblOrCellMapItem{}(LblinitOidCell{}(),Lbl'-LT-'or'-GT-'{}(LblinitOidCell{}(),LblinitOsequenceCell{}())),
        \top{SortOrCellMap{}}())))
  [UNIQUE'Unds'ID{}("21f59fa208bab83b8a15dcd2ac5666f637d9bda4da27a985baac6ff26e5d8a1b")]

// rule initOrIdCell(.KList)=>`<or-id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23f062586134590c746b0696f9676dea31d4df84c89408ead8b36d7f00265eac), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOrIdCell{},R} (
      LblinitOrIdCell{}(),
     \and{SortOrIdCell{}} (
       Lbl'-LT-'or-id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortOrIdCell{}}())))
  [UNIQUE'Unds'ID{}("23f062586134590c746b0696f9676dea31d4df84c89408ead8b36d7f00265eac")]

// rule initOrsCell(.KList)=>`<ors>`(`.OrCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(555aee88438950badff7a517db3b9bdf14c01bc937f14dd2b59040d2383b2d7f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOrsCell{},R} (
      LblinitOrsCell{}(),
     \and{SortOrsCell{}} (
       Lbl'-LT-'ors'-GT-'{}(Lbl'Stop'OrCellMap{}()),
        \top{SortOrsCell{}}())))
  [UNIQUE'Unds'ID{}("555aee88438950badff7a517db3b9bdf14c01bc937f14dd2b59040d2383b2d7f")]

// rule initOsequenceCell(.KList)=>`<osequence>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d182601d73a9f29a1d9fd426a53bbf9f8666e8b83e76caf2fc4f017c84fc039), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortOsequenceCell{},R} (
      LblinitOsequenceCell{}(),
     \and{SortOsequenceCell{}} (
       Lbl'-LT-'osequence'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortOsequenceCell{}}())))
  [UNIQUE'Unds'ID{}("3d182601d73a9f29a1d9fd426a53bbf9f8666e8b83e76caf2fc4f017c84fc039")]

// rule initSequenceCell(.KList)=>`<sequence>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c09ef25061e5117b77c4b711a4debe13ba05ed5bd1e86ebbb89aa00be1240f48), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortSequenceCell{},R} (
      LblinitSequenceCell{}(),
     \and{SortSequenceCell{}} (
       Lbl'-LT-'sequence'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortSequenceCell{}}())))
  [UNIQUE'Unds'ID{}("c09ef25061e5117b77c4b711a4debe13ba05ed5bd1e86ebbb89aa00be1240f48")]

// rule initStateCell(.KList)=>`<state>`(initVariablesCell(.KList),initTransitionsCell(.KList),initChoicesCell(.KList),initOrsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc28838ab7c88bf4e16594a0d58ad38278f85c38b7d54166d5b2a91d69a7b5bd), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStateCell{},R} (
      LblinitStateCell{}(),
     \and{SortStateCell{}} (
       Lbl'-LT-'state'-GT-'{}(LblinitVariablesCell{}(),LblinitTransitionsCell{}(),LblinitChoicesCell{}(),LblinitOrsCell{}()),
        \top{SortStateCell{}}())))
  [UNIQUE'Unds'ID{}("fc28838ab7c88bf4e16594a0d58ad38278f85c38b7d54166d5b2a91d69a7b5bd")]

// rule initTCell(Init)=>`<T>`(initKCell(Init),initStateCell(.KList),initCurIdCell(.KList),initChoiceIdCell(.KList),initOrIdCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(18757561712fe455deebebf92bf96fe73c020d541c8194bd6012a4ffd169e9bc), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitStateCell{}(),LblinitCurIdCell{}(),LblinitChoiceIdCell{}(),LblinitOrIdCell{}()),
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("18757561712fe455deebebf92bf96fe73c020d541c8194bd6012a4ffd169e9bc")]

// rule initTransitionCell(.KList)=>`TransitionCellMapItem`(initIdCell(.KList),`<transition>`(initIdCell(.KList),initSequenceCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(77e3c199994eac69c0f3afa6c90471315c1717dbf680602c36d140bc895a3344), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTransitionCellMap{},R} (
      LblinitTransitionCell{}(),
     \and{SortTransitionCellMap{}} (
       LblTransitionCellMapItem{}(LblinitIdCell{}(),Lbl'-LT-'transition'-GT-'{}(LblinitIdCell{}(),LblinitSequenceCell{}())),
        \top{SortTransitionCellMap{}}())))
  [UNIQUE'Unds'ID{}("77e3c199994eac69c0f3afa6c90471315c1717dbf680602c36d140bc895a3344")]

// rule initTransitionsCell(.KList)=>`<transitions>`(`.TransitionCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8746f3f5933a85cef3def80b2b6ccd2702c2a81705e22caa3d8976cae4f8587d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTransitionsCell{},R} (
      LblinitTransitionsCell{}(),
     \and{SortTransitionsCell{}} (
       Lbl'-LT-'transitions'-GT-'{}(Lbl'Stop'TransitionCellMap{}()),
        \top{SortTransitionsCell{}}())))
  [UNIQUE'Unds'ID{}("8746f3f5933a85cef3def80b2b6ccd2702c2a81705e22caa3d8976cae4f8587d")]

// rule initVariablesCell(.KList)=>`<variables>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(878bdabc33db6c1f2be2958713135da8882bc92dc231c1de92753af470c9992d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortVariablesCell{},R} (
      LblinitVariablesCell{}(),
     \and{SortVariablesCell{}} (
       Lbl'-LT-'variables'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortVariablesCell{}}())))
  [UNIQUE'Unds'ID{}("878bdabc33db6c1f2be2958713135da8882bc92dc231c1de92753af470c9992d")]

// rule isAssignment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(06105d9991520b84d5385cb385f9e21247421d97be82354565d8370b47107bf0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortAssignment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAssignment{}, SortKItem{}}(Var'Unds'Gen1:SortAssignment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisAssignment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("06105d9991520b84d5385cb385f9e21247421d97be82354565d8370b47107bf0"), owise{}()]

// rule isAssignment(inj{Assignment,KItem}(Assignment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(50bbc188c15c716b059e6a0829a3fd71572e7c723affcd577385f15974ad4d27)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAssignment{}, SortKItem{}}(VarAssignment:SortAssignment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisAssignment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("50bbc188c15c716b059e6a0829a3fd71572e7c723affcd577385f15974ad4d27")]

// rule isAssumption(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e5de79cb64f23a61f6fd0df2a6604ce4bd55aeaf51c2dd0b0114cb8d720cf376), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortAssumption{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAssumption{}, SortKItem{}}(Var'Unds'Gen0:SortAssumption{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisAssumption{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e5de79cb64f23a61f6fd0df2a6604ce4bd55aeaf51c2dd0b0114cb8d720cf376"), owise{}()]

// rule isAssumption(inj{Assumption,KItem}(Assumption))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92a2cef7bbb0dcd0a9715c716e370fd7eb5ed5d2d302892c4884ce18e59daeb3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAssumption{}, SortKItem{}}(VarAssumption:SortAssumption{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisAssumption{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92a2cef7bbb0dcd0a9715c716e370fd7eb5ed5d2d302892c4884ce18e59daeb3")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(495da551d13b205c8648618471ccfca028707f98eff21e6b11d591515ed6f29a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("495da551d13b205c8648618471ccfca028707f98eff21e6b11d591515ed6f29a"), owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77")]

// rule isChoice(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1428f668773eddb5a8c1457e202fa10a4179c96262e9b75ffabee03b7e421369), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortChoice{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoice{}, SortKItem{}}(Var'Unds'Gen0:SortChoice{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoice{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1428f668773eddb5a8c1457e202fa10a4179c96262e9b75ffabee03b7e421369"), owise{}()]

// rule isChoice(inj{Choice,KItem}(Choice))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(46047930d0f9d2716f59d4621bccc5b67512d9599c23ba58ea04e4b2545c8687)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoice{}, SortKItem{}}(VarChoice:SortChoice{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoice{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("46047930d0f9d2716f59d4621bccc5b67512d9599c23ba58ea04e4b2545c8687")]

// rule isChoiceCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d488ae8d4da37a81a82bfe781c5ce11d3fba341ddfd8603020c3715a8afa9ec3), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceCell{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d488ae8d4da37a81a82bfe781c5ce11d3fba341ddfd8603020c3715a8afa9ec3"), owise{}()]

// rule isChoiceCell(inj{ChoiceCell,KItem}(ChoiceCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef7c0eb823ab683a2f87ca873d5603a61e591c596509dba1b7529488026c399a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCell{}, SortKItem{}}(VarChoiceCell:SortChoiceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ef7c0eb823ab683a2f87ca873d5603a61e591c596509dba1b7529488026c399a")]

// rule isChoiceCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ebb09c7bef6755290719db15d9feb9c7dc1f26da53f1621dc14a2f44b1a07a12), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ebb09c7bef6755290719db15d9feb9c7dc1f26da53f1621dc14a2f44b1a07a12"), owise{}()]

// rule isChoiceCellFragment(inj{ChoiceCellFragment,KItem}(ChoiceCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1874c7a4ac7ebdf2bb9f8a0d0a9b1c64afd0482071492bf5767686084c30a521)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCellFragment{}, SortKItem{}}(VarChoiceCellFragment:SortChoiceCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1874c7a4ac7ebdf2bb9f8a0d0a9b1c64afd0482071492bf5767686084c30a521")]

// rule isChoiceCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c505d6d9dcec85b867f71eb6d62155e43ae1972a8130c5e1cd95a8e922d5916), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7c505d6d9dcec85b867f71eb6d62155e43ae1972a8130c5e1cd95a8e922d5916"), owise{}()]

// rule isChoiceCellMap(inj{ChoiceCellMap,KItem}(ChoiceCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(557e531550589b39221f46c2739d27b11623c7e6e32b3dab8511417e8dce95b4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCellMap{}, SortKItem{}}(VarChoiceCellMap:SortChoiceCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("557e531550589b39221f46c2739d27b11623c7e6e32b3dab8511417e8dce95b4")]

// rule isChoiceIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b69aa8f828e690ae2819fcaec8d8ed282f8c488d79a071edf261557620196c1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b69aa8f828e690ae2819fcaec8d8ed282f8c488d79a071edf261557620196c1"), owise{}()]

// rule isChoiceIdCell(inj{ChoiceIdCell,KItem}(ChoiceIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(677bd032d708bd6b5cbc5220258144e5042e3b7c1ad88fbbe49a12a9089de42f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceIdCell{}, SortKItem{}}(VarChoiceIdCell:SortChoiceIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("677bd032d708bd6b5cbc5220258144e5042e3b7c1ad88fbbe49a12a9089de42f")]

// rule isChoiceIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f801baaaba07e0412d9aaf16b4697ff55e3600e0552cfb8d07e48efc86532d9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceIdCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2f801baaaba07e0412d9aaf16b4697ff55e3600e0552cfb8d07e48efc86532d9"), owise{}()]

// rule isChoiceIdCellOpt(inj{ChoiceIdCellOpt,KItem}(ChoiceIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b7faf87243c4e9f4f312cdd581adc1960687262259ab54979b4caaa0ea752dc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceIdCellOpt{}, SortKItem{}}(VarChoiceIdCellOpt:SortChoiceIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7b7faf87243c4e9f4f312cdd581adc1960687262259ab54979b4caaa0ea752dc")]

// rule isChoiceOrBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73dcc86559c4e2beb75289015f9b9d1bdf98fcfce950b56bb7a8de180f24378b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoiceOrBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceOrBlock{}, SortKItem{}}(Var'Unds'Gen1:SortChoiceOrBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceOrBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73dcc86559c4e2beb75289015f9b9d1bdf98fcfce950b56bb7a8de180f24378b"), owise{}()]

// rule isChoiceOrBlock(inj{ChoiceOrBlock,KItem}(ChoiceOrBlock))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a30958046aa6fd84261087a043e3ab0e1778c4ba0f67c1c928e8652bbcf9a3f2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceOrBlock{}, SortKItem{}}(VarChoiceOrBlock:SortChoiceOrBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceOrBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a30958046aa6fd84261087a043e3ab0e1778c4ba0f67c1c928e8652bbcf9a3f2")]

// rule isChoiceOrBlocks(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c56b68a51217af37c280c4c43d4f5e57997364288a8ce114fe1c685203d084b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortChoiceOrBlocks{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(Var'Unds'Gen0:SortChoiceOrBlocks{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoiceOrBlocks{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1c56b68a51217af37c280c4c43d4f5e57997364288a8ce114fe1c685203d084b"), owise{}()]

// rule isChoiceOrBlocks(inj{ChoiceOrBlocks,KItem}(ChoiceOrBlocks))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(842d8e591965abfd4371d83b07d1d1d74328649cbd9acd2c40c582891c4c25a4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(VarChoiceOrBlocks:SortChoiceOrBlocks{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoiceOrBlocks{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("842d8e591965abfd4371d83b07d1d1d74328649cbd9acd2c40c582891c4c25a4")]

// rule isChoicesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e5fc57f537be3db86700d976fcffa849a370d4b7616dcb21aa6a1001163faa8d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoicesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoicesCell{}, SortKItem{}}(Var'Unds'Gen1:SortChoicesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoicesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e5fc57f537be3db86700d976fcffa849a370d4b7616dcb21aa6a1001163faa8d"), owise{}()]

// rule isChoicesCell(inj{ChoicesCell,KItem}(ChoicesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9f0e84650df33f631f84225aef3fa894421256e6e0c46f38dcc56c5b74f8b53)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCell{}, SortKItem{}}(VarChoicesCell:SortChoicesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoicesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a9f0e84650df33f631f84225aef3fa894421256e6e0c46f38dcc56c5b74f8b53")]

// rule isChoicesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7776e0b5fbd8a93eb692f3e2a61e6170caafcf1a45a176315c869d20d554ff), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortChoicesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoicesCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortChoicesCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoicesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0e7776e0b5fbd8a93eb692f3e2a61e6170caafcf1a45a176315c869d20d554ff"), owise{}()]

// rule isChoicesCellFragment(inj{ChoicesCellFragment,KItem}(ChoicesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(249cb263d757d9c5d6fa216e274f5a9921d2396e7d509b00570d09c5ff0be6be)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCellFragment{}, SortKItem{}}(VarChoicesCellFragment:SortChoicesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoicesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("249cb263d757d9c5d6fa216e274f5a9921d2396e7d509b00570d09c5ff0be6be")]

// rule isChoicesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f508dee8e5f490bf8fc5afd735065b2aba232575afe1c34d111edfd58caa6f93), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortChoicesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortChoicesCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortChoicesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisChoicesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f508dee8e5f490bf8fc5afd735065b2aba232575afe1c34d111edfd58caa6f93"), owise{}()]

// rule isChoicesCellOpt(inj{ChoicesCellOpt,KItem}(ChoicesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(10b8e835d0b4db4f468d66f98549f594d2cad5fb0fe3bc7f1a14638248c36ef3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCellOpt{}, SortKItem{}}(VarChoicesCellOpt:SortChoicesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisChoicesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("10b8e835d0b4db4f468d66f98549f594d2cad5fb0fe3bc7f1a14638248c36ef3")]

// rule isCidCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bc3604e3c49ed79e923466ebb278b1033ebffb66b1bc221637e68abc1b34b9b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCidCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCidCell{}, SortKItem{}}(Var'Unds'Gen1:SortCidCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCidCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bc3604e3c49ed79e923466ebb278b1033ebffb66b1bc221637e68abc1b34b9b"), owise{}()]

// rule isCidCell(inj{CidCell,KItem}(CidCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f0b8d5dcb55b3e9d2441753270252d1592fecc614a1bb685c46a84303cab68dc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCidCell{}, SortKItem{}}(VarCidCell:SortCidCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCidCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f0b8d5dcb55b3e9d2441753270252d1592fecc614a1bb685c46a84303cab68dc")]

// rule isCidCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c1f237975ece0b7561278eb96cc6c7c1e738d613090b77939cd5b7bfa6c6daf2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCidCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCidCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortCidCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCidCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c1f237975ece0b7561278eb96cc6c7c1e738d613090b77939cd5b7bfa6c6daf2"), owise{}()]

// rule isCidCellOpt(inj{CidCellOpt,KItem}(CidCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72c4a5b14a141dbf8e7fe0e0e66ea1dea5afe530db8ab8651da4f070de8ab3a7)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCidCellOpt{}, SortKItem{}}(VarCidCellOpt:SortCidCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCidCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("72c4a5b14a141dbf8e7fe0e0e66ea1dea5afe530db8ab8651da4f070de8ab3a7")]

// rule isCsequenceCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eacb27ad317c6bcec68e043413cfc337c9561ccc2b9b6b86994984c8f5ab352e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCsequenceCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCsequenceCell{}, SortKItem{}}(Var'Unds'Gen1:SortCsequenceCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCsequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eacb27ad317c6bcec68e043413cfc337c9561ccc2b9b6b86994984c8f5ab352e"), owise{}()]

// rule isCsequenceCell(inj{CsequenceCell,KItem}(CsequenceCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ee3b9ce7aa28f7196895cce379050bd5e2fb11a182b86427cce443dce6b4bcc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCsequenceCell{}, SortKItem{}}(VarCsequenceCell:SortCsequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCsequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7ee3b9ce7aa28f7196895cce379050bd5e2fb11a182b86427cce443dce6b4bcc")]

// rule isCsequenceCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37798732c9e103d36ad2253c065e0f9e89806a1e57a6cf32d372ff4edcb780f9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCsequenceCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCsequenceCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCsequenceCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCsequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("37798732c9e103d36ad2253c065e0f9e89806a1e57a6cf32d372ff4edcb780f9"), owise{}()]

// rule isCsequenceCellOpt(inj{CsequenceCellOpt,KItem}(CsequenceCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db7aa171b811e9a7883c67901e8d1f8175effa5daa2303ab564a3c9e244ee3a9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCsequenceCellOpt{}, SortKItem{}}(VarCsequenceCellOpt:SortCsequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCsequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("db7aa171b811e9a7883c67901e8d1f8175effa5daa2303ab564a3c9e244ee3a9")]

// rule isCurIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6408e9a7ffe3a5836a1755d4d3dfbc2f15905f90cf2fb29ff4a252e178f299c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCurIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortCurIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCurIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f6408e9a7ffe3a5836a1755d4d3dfbc2f15905f90cf2fb29ff4a252e178f299c"), owise{}()]

// rule isCurIdCell(inj{CurIdCell,KItem}(CurIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c85be1be612cca2c29794b4e9fd43fa1ad9292238106fea83e1bf9069c2ed0e0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurIdCell{}, SortKItem{}}(VarCurIdCell:SortCurIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCurIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c85be1be612cca2c29794b4e9fd43fa1ad9292238106fea83e1bf9069c2ed0e0")]

// rule isCurIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63d06197c7223eb0350098131ac880f530b47828ee7d396a7f0d28183a7c547c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCurIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurIdCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCurIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCurIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("63d06197c7223eb0350098131ac880f530b47828ee7d396a7f0d28183a7c547c"), owise{}()]

// rule isCurIdCellOpt(inj{CurIdCellOpt,KItem}(CurIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34e9243971982d4fa96046c8480ea23d4e5ecfa73cac48bed2d319ad7ea3b319)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurIdCellOpt{}, SortKItem{}}(VarCurIdCellOpt:SortCurIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCurIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("34e9243971982d4fa96046c8480ea23d4e5ecfa73cac48bed2d319ad7ea3b319")]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0c8eb86594a387398bf96f2dbf773cff29d14b8a45c5f6701f205bf3d2f33ba), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b0c8eb86594a387398bf96f2dbf773cff29d14b8a45c5f6701f205bf3d2f33ba"), owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84cfc8e964ec28b1912ffec4e6f5fccfcbad2256a1cba113622d99b11c13afd6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("84cfc8e964ec28b1912ffec4e6f5fccfcbad2256a1cba113622d99b11c13afd6"), owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ccb9226d9e6c0e476485f098ef162c6c2206ed3af1d8336ea3ae859b86bc4a8b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ccb9226d9e6c0e476485f098ef162c6c2206ed3af1d8336ea3ae859b86bc4a8b"), owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98049f5819962c7ee2b01436957b6cf8460b106979fa2c24f4c606bbf6cb1592), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("98049f5819962c7ee2b01436957b6cf8460b106979fa2c24f4c606bbf6cb1592"), owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271")]

// rule isHavoc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f8ef1aa4079a2cfdede36a4c2042a8fbb1441e1478da0e75b17773c24fbcc039), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortHavoc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHavoc{}, SortKItem{}}(Var'Unds'Gen1:SortHavoc{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHavoc{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f8ef1aa4079a2cfdede36a4c2042a8fbb1441e1478da0e75b17773c24fbcc039"), owise{}()]

// rule isHavoc(inj{Havoc,KItem}(Havoc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96ec27df3ea12f0cccb778c0da731e787dd5e758c1bed5bb014bc378d7c45b50)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHavoc{}, SortKItem{}}(VarHavoc:SortHavoc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHavoc{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("96ec27df3ea12f0cccb778c0da731e787dd5e758c1bed5bb014bc378d7c45b50")]

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f37abe49c9a4ee52b56a492679d7aab25802b3c05860fee32a4a09d72b2a322f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen1:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f37abe49c9a4ee52b56a492679d7aab25802b3c05860fee32a4a09d72b2a322f"), owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d")]

// rule isIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55570a5dd6c8347da6876db9087330db94d4ea6328e1363d79c9896c35bfb14e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55570a5dd6c8347da6876db9087330db94d4ea6328e1363d79c9896c35bfb14e"), owise{}()]

// rule isIdCell(inj{IdCell,KItem}(IdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarIdCell:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6")]

// rule isIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97b460458510ac90d567ead6ecab7304b27095a3f1375f34a8dbf3bca5b34861), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("97b460458510ac90d567ead6ecab7304b27095a3f1375f34a8dbf3bca5b34861"), owise{}()]

// rule isIdCellOpt(inj{IdCellOpt,KItem}(IdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarIdCellOpt:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(105572a4ac107eeb518b37c4d6ed3e28732b83afb0ba085d02d339c4fc2140a0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("105572a4ac107eeb518b37c4d6ed3e28732b83afb0ba085d02d339c4fc2140a0"), owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d30be57718b4b3745eaf2e99f875cfec7d5be2ff76bacde8a89bd4ab659d857f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen0:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d30be57718b4b3745eaf2e99f875cfec7d5be2ff76bacde8a89bd4ab659d857f"), owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df")]

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a3f84195242c98b432c7c63a4189f4276cc3189445c5cf37ce08d9a6547b1f7), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a3f84195242c98b432c7c63a4189f4276cc3189445c5cf37ce08d9a6547b1f7"), owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5")]

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f68a616e301c35586f68e97b729ae274278c3ef8fe6634711cfd3e1746bc0bc2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f68a616e301c35586f68e97b729ae274278c3ef8fe6634711cfd3e1746bc0bc2"), owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd")]

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83812b6b9e31a764d66d89fd1c7e65b9b162d52c5aebfe99b1536e200a9590c2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen0:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("83812b6b9e31a764d66d89fd1c7e65b9b162d52c5aebfe99b1536e200a9590c2"), owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c")]

// rule isLine(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f42634ce208e1a00ad87700dfb601844e3d06aacfad6262cb866f6e167e892bb), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortLine{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLine{}, SortKItem{}}(Var'Unds'Gen1:SortLine{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLine{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f42634ce208e1a00ad87700dfb601844e3d06aacfad6262cb866f6e167e892bb"), owise{}()]

// rule isLine(inj{Line,KItem}(Line))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63a3e98b9e24d05019ddd219e013950c4ca639d37ddb16637b4f768536139675)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLine{}, SortKItem{}}(VarLine:SortLine{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLine{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("63a3e98b9e24d05019ddd219e013950c4ca639d37ddb16637b4f768536139675")]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9489adcf0279eca74c012bb1130bb9d30372cfbebc8e4ab4b173656c4d6613), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen1:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a9489adcf0279eca74c012bb1130bb9d30372cfbebc8e4ab4b173656c4d6613"), owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446")]

// rule isLiteral(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7caaa8b725ed27da6067ebbb17236edf1d53f30826c93aa1326b53f1b96674c8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortLiteral{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLiteral{}, SortKItem{}}(Var'Unds'Gen1:SortLiteral{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLiteral{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7caaa8b725ed27da6067ebbb17236edf1d53f30826c93aa1326b53f1b96674c8"), owise{}()]

// rule isLiteral(inj{Literal,KItem}(Literal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2fdb69e3f25cb0f7f12a6d7e07229ba4827a6e7eaf6da7d2d01420c2a83c1eac)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLiteral{}, SortKItem{}}(VarLiteral:SortLiteral{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLiteral{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2fdb69e3f25cb0f7f12a6d7e07229ba4827a6e7eaf6da7d2d01420c2a83c1eac")]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f30a2087d0b19640df005437bc3f4665f41282666a72821b17b16c99ed5afee), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6f30a2087d0b19640df005437bc3f4665f41282666a72821b17b16c99ed5afee"), owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795")]

// rule isOidCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(596697da7988751c1af64b88d43bfd192003bc13d58b9974426d1e97980246ea), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOidCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOidCell{}, SortKItem{}}(Var'Unds'Gen1:SortOidCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOidCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("596697da7988751c1af64b88d43bfd192003bc13d58b9974426d1e97980246ea"), owise{}()]

// rule isOidCell(inj{OidCell,KItem}(OidCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(343a454872c396b2ff64e437852d27a47a774d7e09dd779fc06c677361b922f5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOidCell{}, SortKItem{}}(VarOidCell:SortOidCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOidCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("343a454872c396b2ff64e437852d27a47a774d7e09dd779fc06c677361b922f5")]

// rule isOidCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3791314523961494eefb88dc7ed0f9ec19b6fb541a8c549805554cfd94537268), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOidCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOidCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOidCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOidCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3791314523961494eefb88dc7ed0f9ec19b6fb541a8c549805554cfd94537268"), owise{}()]

// rule isOidCellOpt(inj{OidCellOpt,KItem}(OidCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbb71462b2fcbcf583b04a65607b60ff266e18d552a13470e3131199aa2ac3ab)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOidCellOpt{}, SortKItem{}}(VarOidCellOpt:SortOidCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOidCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("cbb71462b2fcbcf583b04a65607b60ff266e18d552a13470e3131199aa2ac3ab")]

// rule isOperation(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9610477f829b930b6db17efe279fcea0c5784013e68ea30f23d629e9020ac56a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOperation{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOperation{}, SortKItem{}}(Var'Unds'Gen0:SortOperation{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOperation{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9610477f829b930b6db17efe279fcea0c5784013e68ea30f23d629e9020ac56a"), owise{}()]

// rule isOperation(inj{Operation,KItem}(Operation))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66806921e9726d1b97fdc6270eb5d3acb3edc1c72590de0ae19e1924199159b2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOperation{}, SortKItem{}}(VarOperation:SortOperation{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOperation{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("66806921e9726d1b97fdc6270eb5d3acb3edc1c72590de0ae19e1924199159b2")]

// rule isOrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a96406763cd02fcc471951a82416ae901548ceb2decd0ff0f189ca8208ce775a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrCell{}, SortKItem{}}(Var'Unds'Gen0:SortOrCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a96406763cd02fcc471951a82416ae901548ceb2decd0ff0f189ca8208ce775a"), owise{}()]

// rule isOrCell(inj{OrCell,KItem}(OrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82eda4ab468911d8e7e819db52c485287a526230d74ea29d870485e5eca09786)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCell{}, SortKItem{}}(VarOrCell:SortOrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("82eda4ab468911d8e7e819db52c485287a526230d74ea29d870485e5eca09786")]

// rule isOrCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a2323f48724b03822b269e751502ac517c00ad2e05ffbe1d638fcad62d664f54), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortOrCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a2323f48724b03822b269e751502ac517c00ad2e05ffbe1d638fcad62d664f54"), owise{}()]

// rule isOrCellFragment(inj{OrCellFragment,KItem}(OrCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b17c628d74d85aa2c3f2d826a546bf3dfb1c1eb2fd94952868ca9ca92886661)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCellFragment{}, SortKItem{}}(VarOrCellFragment:SortOrCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1b17c628d74d85aa2c3f2d826a546bf3dfb1c1eb2fd94952868ca9ca92886661")]

// rule isOrCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(500eccc6864fe68d393512a1e985135cb52a08846c14771b4f32c615bbb8846d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortOrCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("500eccc6864fe68d393512a1e985135cb52a08846c14771b4f32c615bbb8846d"), owise{}()]

// rule isOrCellMap(inj{OrCellMap,KItem}(OrCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f799803ab7f1615eec53a6e9232259dab0baf01bcceb3dfd8ddcaa05b4f7b254)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCellMap{}, SortKItem{}}(VarOrCellMap:SortOrCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f799803ab7f1615eec53a6e9232259dab0baf01bcceb3dfd8ddcaa05b4f7b254")]

// rule isOrIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a3c7743b95cece6ec744464a6d66f468d19e43d1585b771ccc9267c2f312040f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortOrIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a3c7743b95cece6ec744464a6d66f468d19e43d1585b771ccc9267c2f312040f"), owise{}()]

// rule isOrIdCell(inj{OrIdCell,KItem}(OrIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1783c486b725e82fae29058a024ff9bb6cecdd27aa87f2a665d4b9f0767955a4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrIdCell{}, SortKItem{}}(VarOrIdCell:SortOrIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1783c486b725e82fae29058a024ff9bb6cecdd27aa87f2a665d4b9f0767955a4")]

// rule isOrIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(449a3df140a5d7d1399cdb377adf5d9c585ae2dd862a347f045af63f0cc19688), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrIdCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOrIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("449a3df140a5d7d1399cdb377adf5d9c585ae2dd862a347f045af63f0cc19688"), owise{}()]

// rule isOrIdCellOpt(inj{OrIdCellOpt,KItem}(OrIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76c1f0f92b4f34a6094cae322ee3e3c5d3c5930ed97252290bb642c338d8f934)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrIdCellOpt{}, SortKItem{}}(VarOrIdCellOpt:SortOrIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("76c1f0f92b4f34a6094cae322ee3e3c5d3c5930ed97252290bb642c338d8f934")]

// rule isOrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(083d7c99019954c917daa7ce08f66af0f6f4f17922fdf493b1cef36ab3f5c7ef), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrsCell{}, SortKItem{}}(Var'Unds'Gen1:SortOrsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("083d7c99019954c917daa7ce08f66af0f6f4f17922fdf493b1cef36ab3f5c7ef"), owise{}()]

// rule isOrsCell(inj{OrsCell,KItem}(OrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f5972d81f619015c56c5613e286e78f25eeede1f81aef45816d5b2ef42a7c158)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCell{}, SortKItem{}}(VarOrsCell:SortOrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f5972d81f619015c56c5613e286e78f25eeede1f81aef45816d5b2ef42a7c158")]

// rule isOrsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad2a679823e370d5bd0745e70cad90d19711b70c5e957e476d67977e7a257f5e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrsCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortOrsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ad2a679823e370d5bd0745e70cad90d19711b70c5e957e476d67977e7a257f5e"), owise{}()]

// rule isOrsCellFragment(inj{OrsCellFragment,KItem}(OrsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(390b8f12abcbb12f4948501ad8e365838e0dadd9657a68f11f519683b7c9ed7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCellFragment{}, SortKItem{}}(VarOrsCellFragment:SortOrsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("390b8f12abcbb12f4948501ad8e365838e0dadd9657a68f11f519683b7c9ed7c")]

// rule isOrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(339c8a5ea929e3ca762fb7bc96a9f6d3165c525dcbade3198fdf980aa2cfac5a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOrsCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOrsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOrsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("339c8a5ea929e3ca762fb7bc96a9f6d3165c525dcbade3198fdf980aa2cfac5a"), owise{}()]

// rule isOrsCellOpt(inj{OrsCellOpt,KItem}(OrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(295bf27b94c572af4d4f2af0f8ccfa3c7eb35e37ff5368239b588e3d332fa945)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCellOpt{}, SortKItem{}}(VarOrsCellOpt:SortOrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOrsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("295bf27b94c572af4d4f2af0f8ccfa3c7eb35e37ff5368239b588e3d332fa945")]

// rule isOsequenceCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75728cc970020efe8c965306976d9b0323c7cdbf2ac3ab4d0b023882c1f1002a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOsequenceCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOsequenceCell{}, SortKItem{}}(Var'Unds'Gen1:SortOsequenceCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOsequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("75728cc970020efe8c965306976d9b0323c7cdbf2ac3ab4d0b023882c1f1002a"), owise{}()]

// rule isOsequenceCell(inj{OsequenceCell,KItem}(OsequenceCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(87f60778a05b8429dabf2cb37eb1ed09e0fe69bccaace4847c844025a3d3a70e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOsequenceCell{}, SortKItem{}}(VarOsequenceCell:SortOsequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOsequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("87f60778a05b8429dabf2cb37eb1ed09e0fe69bccaace4847c844025a3d3a70e")]

// rule isOsequenceCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5fafc80c8aee497600c5d87cfa3000b5fd362dea917ef094690be2d731356a14), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOsequenceCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOsequenceCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOsequenceCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOsequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5fafc80c8aee497600c5d87cfa3000b5fd362dea917ef094690be2d731356a14"), owise{}()]

// rule isOsequenceCellOpt(inj{OsequenceCellOpt,KItem}(OsequenceCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60d6f0c5f3819d88a9f2558f66c9dd4266a7af2855d5667c4ef4bad86b3e7f4a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOsequenceCellOpt{}, SortKItem{}}(VarOsequenceCellOpt:SortOsequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOsequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("60d6f0c5f3819d88a9f2558f66c9dd4266a7af2855d5667c4ef4bad86b3e7f4a")]

// rule isProgram(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17987f1ba60eb13c6487ebeccdc1602e4515927f186634b947643453bfdf5ba6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortProgram{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortProgram{}, SortKItem{}}(Var'Unds'Gen1:SortProgram{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisProgram{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17987f1ba60eb13c6487ebeccdc1602e4515927f186634b947643453bfdf5ba6"), owise{}()]

// rule isProgram(inj{Program,KItem}(Program))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a13cffc00164d293194c6d21dc969111aaf05d04733535a24bd727e70668d52e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortProgram{}, SortKItem{}}(VarProgram:SortProgram{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisProgram{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a13cffc00164d293194c6d21dc969111aaf05d04733535a24bd727e70668d52e")]

// rule isSequence(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(915fbc090f5ad405267ca22fa9b5367779ff736b414323f3f783aef3afd8e15c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSequence{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSequence{}, SortKItem{}}(Var'Unds'Gen0:SortSequence{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSequence{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("915fbc090f5ad405267ca22fa9b5367779ff736b414323f3f783aef3afd8e15c"), owise{}()]

// rule isSequence(inj{Sequence,KItem}(Sequence))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aab5b96c84673871f157a2ee08b2cd9ed220ef26639f1b0664d2b8b47c382e9f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequence{}, SortKItem{}}(VarSequence:SortSequence{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSequence{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("aab5b96c84673871f157a2ee08b2cd9ed220ef26639f1b0664d2b8b47c382e9f")]

// rule isSequenceCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9282603dfe2cf9056d13dcb7ce73fa8d7a805c3c4f961f82ddd6285ff696540), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSequenceCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSequenceCell{}, SortKItem{}}(Var'Unds'Gen0:SortSequenceCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a9282603dfe2cf9056d13dcb7ce73fa8d7a805c3c4f961f82ddd6285ff696540"), owise{}()]

// rule isSequenceCell(inj{SequenceCell,KItem}(SequenceCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30da389ea8b7a8a80d7cd8809d8a38ce9cfe2d966edb84cb6ae60f8a595d82f7)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequenceCell{}, SortKItem{}}(VarSequenceCell:SortSequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSequenceCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("30da389ea8b7a8a80d7cd8809d8a38ce9cfe2d966edb84cb6ae60f8a595d82f7")]

// rule isSequenceCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f726a40b80fedf31d8d6665a12004888ddf5ef6ada776f921be97a33c956bb98), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortSequenceCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSequenceCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortSequenceCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f726a40b80fedf31d8d6665a12004888ddf5ef6ada776f921be97a33c956bb98"), owise{}()]

// rule isSequenceCellOpt(inj{SequenceCellOpt,KItem}(SequenceCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df9d810bfb58970b2018c7d7f9b6131454fee3f64d71a08a34e5168515aeba96)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequenceCellOpt{}, SortKItem{}}(VarSequenceCellOpt:SortSequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSequenceCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("df9d810bfb58970b2018c7d7f9b6131454fee3f64d71a08a34e5168515aeba96")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b5aadccd9b89faba72816867187d48d279d8c27c8bda1a1b3b0658bd82bb783), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen1:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b5aadccd9b89faba72816867187d48d279d8c27c8bda1a1b3b0658bd82bb783"), owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80")]

// rule isStateCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b0e69b47868d7006abcecd9821496d91b1cbed0dc497e01577e9ddadc87c627), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStateCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStateCell{}, SortKItem{}}(Var'Unds'Gen0:SortStateCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStateCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b0e69b47868d7006abcecd9821496d91b1cbed0dc497e01577e9ddadc87c627"), owise{}()]

// rule isStateCell(inj{StateCell,KItem}(StateCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66256807bfe91d1d029a3ae94eafa088f1c65a7a764ca8875a5427f9532df462)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCell{}, SortKItem{}}(VarStateCell:SortStateCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStateCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("66256807bfe91d1d029a3ae94eafa088f1c65a7a764ca8875a5427f9532df462")]

// rule isStateCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f85be83c8ecacc855daf4eb723942681f31cc05a7ecfd01ad85bce8529d0863f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStateCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStateCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortStateCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStateCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f85be83c8ecacc855daf4eb723942681f31cc05a7ecfd01ad85bce8529d0863f"), owise{}()]

// rule isStateCellFragment(inj{StateCellFragment,KItem}(StateCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39e0ddbb15d33001ad61e2269400354694aed01454f02b8f161c9916fa811268)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCellFragment{}, SortKItem{}}(VarStateCellFragment:SortStateCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStateCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("39e0ddbb15d33001ad61e2269400354694aed01454f02b8f161c9916fa811268")]

// rule isStateCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(02f93e87877a1bfec39c549cdb6aa1dfeb107c88e2ea5ded312498fb690eff61), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStateCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStateCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortStateCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStateCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("02f93e87877a1bfec39c549cdb6aa1dfeb107c88e2ea5ded312498fb690eff61"), owise{}()]

// rule isStateCellOpt(inj{StateCellOpt,KItem}(StateCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5285b2b23133d428fcb21af02d523dec10d3660f0f43d59933927d0ee79471e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCellOpt{}, SortKItem{}}(VarStateCellOpt:SortStateCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStateCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5285b2b23133d428fcb21af02d523dec10d3660f0f43d59933927d0ee79471e")]

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(550b3cc25922848b7174df3ee5d34bc31b7772daa1579d20e37b3c0d6c7a961d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen1:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("550b3cc25922848b7174df3ee5d34bc31b7772daa1579d20e37b3c0d6c7a961d"), owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(704d5df7c717193a67d91aad6774acb5eb9fe2137515d5204768bf499f92270b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("704d5df7c717193a67d91aad6774acb5eb9fe2137515d5204768bf499f92270b"), owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a11be25d71bcfe67274e7f5c5091d99dc524b8bc5a8ac8fe6c101e58c1895ca), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3a11be25d71bcfe67274e7f5c5091d99dc524b8bc5a8ac8fe6c101e58c1895ca"), owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c")]

// rule isTransition(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da519c21c94bc2ef1dbe429a40d7b5b75d1d4bb422c477006a2e15f7355816d1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTransition{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransition{}, SortKItem{}}(Var'Unds'Gen0:SortTransition{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransition{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da519c21c94bc2ef1dbe429a40d7b5b75d1d4bb422c477006a2e15f7355816d1"), owise{}()]

// rule isTransition(inj{Transition,KItem}(Transition))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5fd11a1c2ff000629d43cccbab6110712e09f0b555328d9a9b342229ca447fd1)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransition{}, SortKItem{}}(VarTransition:SortTransition{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransition{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5fd11a1c2ff000629d43cccbab6110712e09f0b555328d9a9b342229ca447fd1")]

// rule isTransitionCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4164c90657b2ce210ed512d4ee381aaa0c3e98bda88151d747bd863282dad94), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTransitionCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionCell{}, SortKItem{}}(Var'Unds'Gen1:SortTransitionCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c4164c90657b2ce210ed512d4ee381aaa0c3e98bda88151d747bd863282dad94"), owise{}()]

// rule isTransitionCell(inj{TransitionCell,KItem}(TransitionCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(04723320729c5e3fe6f834eb14ad06dcb7468295530d58eb69462114c5e45c16)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCell{}, SortKItem{}}(VarTransitionCell:SortTransitionCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("04723320729c5e3fe6f834eb14ad06dcb7468295530d58eb69462114c5e45c16")]

// rule isTransitionCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1cc76b4a5a8055e7285631329b0c06a9527e38a2fb77b32d36d39e1ef57b389a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTransitionCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortTransitionCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1cc76b4a5a8055e7285631329b0c06a9527e38a2fb77b32d36d39e1ef57b389a"), owise{}()]

// rule isTransitionCellFragment(inj{TransitionCellFragment,KItem}(TransitionCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe07163c24039142b07858d51593f2035295cf7fef622c227bc43f8b1d0f316c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCellFragment{}, SortKItem{}}(VarTransitionCellFragment:SortTransitionCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fe07163c24039142b07858d51593f2035295cf7fef622c227bc43f8b1d0f316c")]

// rule isTransitionCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5305b0f05550c5dfb4c778938977d4b8c386fff704549712e360d4d750d92dfc), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTransitionCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortTransitionCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5305b0f05550c5dfb4c778938977d4b8c386fff704549712e360d4d750d92dfc"), owise{}()]

// rule isTransitionCellMap(inj{TransitionCellMap,KItem}(TransitionCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(846bc8ade68a70bc146498e9fc5c74efc2629fab690e9a1d537a74ead04bc283)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCellMap{}, SortKItem{}}(VarTransitionCellMap:SortTransitionCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("846bc8ade68a70bc146498e9fc5c74efc2629fab690e9a1d537a74ead04bc283")]

// rule isTransitions(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acc6a4c423e6a04c89dcc4091f7c5b679344bc8a58f07dfdf2766e6f7dbfcdf3), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTransitions{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitions{}, SortKItem{}}(Var'Unds'Gen1:SortTransitions{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitions{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("acc6a4c423e6a04c89dcc4091f7c5b679344bc8a58f07dfdf2766e6f7dbfcdf3"), owise{}()]

// rule isTransitions(inj{Transitions,KItem}(Transitions))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9a38ce60df6f20c24dd4776a3af8705ee02400cdcb6013c2ab15e113a2ac9a3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitions{}, SortKItem{}}(VarTransitions:SortTransitions{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitions{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b9a38ce60df6f20c24dd4776a3af8705ee02400cdcb6013c2ab15e113a2ac9a3")]

// rule isTransitionsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de683589f7ba26e98a9a25823c02edbd423afdaf723d64e74494750fb1b138bd), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTransitionsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionsCell{}, SortKItem{}}(Var'Unds'Gen0:SortTransitionsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("de683589f7ba26e98a9a25823c02edbd423afdaf723d64e74494750fb1b138bd"), owise{}()]

// rule isTransitionsCell(inj{TransitionsCell,KItem}(TransitionsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(667b1710518a00e5306a5e47da5e1303197a02e5cbf3e35bc1acd0a935bf5af3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCell{}, SortKItem{}}(VarTransitionsCell:SortTransitionsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("667b1710518a00e5306a5e47da5e1303197a02e5cbf3e35bc1acd0a935bf5af3")]

// rule isTransitionsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(190953d7b3d99ee1576a3ca6bfd1b3ca2e1a58b24f587c333fc1a032144c1ee8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTransitionsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionsCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTransitionsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("190953d7b3d99ee1576a3ca6bfd1b3ca2e1a58b24f587c333fc1a032144c1ee8"), owise{}()]

// rule isTransitionsCellFragment(inj{TransitionsCellFragment,KItem}(TransitionsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e04761a45a0df12901281b84d959642fe39152bacb1bba5cf3070c9fabf09296)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCellFragment{}, SortKItem{}}(VarTransitionsCellFragment:SortTransitionsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e04761a45a0df12901281b84d959642fe39152bacb1bba5cf3070c9fabf09296")]

// rule isTransitionsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1eb305c0aff6a98ef31ac272392a8f5a9c8554379e6fd30e55f27a4340bb2bd1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTransitionsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTransitionsCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTransitionsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTransitionsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1eb305c0aff6a98ef31ac272392a8f5a9c8554379e6fd30e55f27a4340bb2bd1"), owise{}()]

// rule isTransitionsCellOpt(inj{TransitionsCellOpt,KItem}(TransitionsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(294b81c7287faea90bbdaefd88c5e5570313f780253718de765fc57dbef62643)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCellOpt{}, SortKItem{}}(VarTransitionsCellOpt:SortTransitionsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTransitionsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("294b81c7287faea90bbdaefd88c5e5570313f780253718de765fc57dbef62643")]

// rule isVariableDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9a4923e71843205f1c4698147acff3002174bfedeca6dba26023afd14927570), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortVariableDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVariableDeclaration{}, SortKItem{}}(Var'Unds'Gen1:SortVariableDeclaration{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVariableDeclaration{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a9a4923e71843205f1c4698147acff3002174bfedeca6dba26023afd14927570"), owise{}()]

// rule isVariableDeclaration(inj{VariableDeclaration,KItem}(VariableDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(000d1814c0748e85090a95a16818ba839bee7a341a8ebeedd03394bd0048cb8f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariableDeclaration{}, SortKItem{}}(VarVariableDeclaration:SortVariableDeclaration{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVariableDeclaration{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("000d1814c0748e85090a95a16818ba839bee7a341a8ebeedd03394bd0048cb8f")]

// rule isVariablesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21e9959d3217cfcd4aaa34c7f43fc6f5ad462e51e9cef1fcaf6d753a2885eaf1), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortVariablesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVariablesCell{}, SortKItem{}}(Var'Unds'Gen1:SortVariablesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVariablesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("21e9959d3217cfcd4aaa34c7f43fc6f5ad462e51e9cef1fcaf6d753a2885eaf1"), owise{}()]

// rule isVariablesCell(inj{VariablesCell,KItem}(VariablesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6e555c61390f43c4b44b4bc140ace66bdde1d724fc02565289fcd60439f5ef7)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariablesCell{}, SortKItem{}}(VarVariablesCell:SortVariablesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVariablesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f6e555c61390f43c4b44b4bc140ace66bdde1d724fc02565289fcd60439f5ef7")]

// rule isVariablesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea909e8f57b24b22f9181aa35eb40e36eee6f15df2df65e32157155e9d0fc768), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVariablesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVariablesCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortVariablesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVariablesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ea909e8f57b24b22f9181aa35eb40e36eee6f15df2df65e32157155e9d0fc768"), owise{}()]

// rule isVariablesCellOpt(inj{VariablesCellOpt,KItem}(VariablesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ec42a2641a8819b41ed6128b667dbf8b5c7d60264530e185af7403edb98994e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariablesCellOpt{}, SortKItem{}}(VarVariablesCellOpt:SortVariablesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVariablesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4ec42a2641a8819b41ed6128b667dbf8b5c7d60264530e185af7403edb98994e")]

// rule isWork(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86c4e79b77b52026dbdf029dfda5cac6286858704685b14f59807b1ed2d06ab5), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortWork{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortWork{}, SortKItem{}}(Var'Unds'Gen0:SortWork{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisWork{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("86c4e79b77b52026dbdf029dfda5cac6286858704685b14f59807b1ed2d06ab5"), owise{}()]

// rule isWork(inj{Work,KItem}(Work))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8cd900efd418a51e32e2bb8c9096900a195528de43641a27c112e5868f2f0f3b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWork{}, SortKItem{}}(VarWork:SortWork{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisWork{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8cd900efd418a51e32e2bb8c9096900a195528de43641a27c112e5868f2f0f3b")]

// rule ite{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(1ff8f4d71e4c13084eed473b08740da83c4cc7f1875d340d86dc72124c48b4a0), org.kframework.attributes.Location(Location(2324,8,2324,59)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lblite{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("1ff8f4d71e4c13084eed473b08740da83c4cc7f1875d340d86dc72124c48b4a0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2324,8,2324,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule ite{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(2f3f58a93926913fc5ca147dfd8d3d612508bc8ff67412ef10935df7c09554d5), org.kframework.attributes.Location(Location(2325,8,2325,67)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lblite{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("2f3f58a93926913fc5ca147dfd8d3d612508bc8ff67412ef10935df7c09554d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2325,8,2325,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(5615d5587c51d94a62fc99ae2458c06428585265e750fdc249083647f9d3d4c1), org.kframework.attributes.Location(Location(1439,8,1439,57)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5615d5587c51d94a62fc99ae2458c06428585265e750fdc249083647f9d3d4c1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1439,8,1439,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1440,8,1440,57)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [symbol(#ruleRequires)])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1440,8,1440,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(1128,8,1128,29)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(1127,8,1127,29)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `project:Assignment`(inj{Assignment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afe5633b5e6dd0c2ac21a87ebde0ee6f999a071587e47b524535544e28102bce), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAssignment{}, SortKItem{}}(VarK:SortAssignment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortAssignment{},R} (
      Lblproject'Coln'Assignment{}(X0:SortK{}),
     \and{SortAssignment{}} (
       VarK:SortAssignment{},
        \top{SortAssignment{}}())))
  [UNIQUE'Unds'ID{}("afe5633b5e6dd0c2ac21a87ebde0ee6f999a071587e47b524535544e28102bce")]

// rule `project:Assumption`(inj{Assumption,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(49b4085523ff9ad2acc9db6d63b3c750c944e02b961a147f67107a6eafd05fac), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAssumption{}, SortKItem{}}(VarK:SortAssumption{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortAssumption{},R} (
      Lblproject'Coln'Assumption{}(X0:SortK{}),
     \and{SortAssumption{}} (
       VarK:SortAssumption{},
        \top{SortAssumption{}}())))
  [UNIQUE'Unds'ID{}("49b4085523ff9ad2acc9db6d63b3c750c944e02b961a147f67107a6eafd05fac")]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54")]

// rule `project:Choice`(inj{Choice,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30b5068d45e67d53455ab52fee0c07d035415c1c94faf5e37b0abdbcad1f7400), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoice{}, SortKItem{}}(VarK:SortChoice{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoice{},R} (
      Lblproject'Coln'Choice{}(X0:SortK{}),
     \and{SortChoice{}} (
       VarK:SortChoice{},
        \top{SortChoice{}}())))
  [UNIQUE'Unds'ID{}("30b5068d45e67d53455ab52fee0c07d035415c1c94faf5e37b0abdbcad1f7400")]

// rule `project:ChoiceCell`(inj{ChoiceCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(783a649ba399db40206ac29b263c5e04486f7fdf11df074c9240787a23d0da5b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCell{}, SortKItem{}}(VarK:SortChoiceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceCell{},R} (
      Lblproject'Coln'ChoiceCell{}(X0:SortK{}),
     \and{SortChoiceCell{}} (
       VarK:SortChoiceCell{},
        \top{SortChoiceCell{}}())))
  [UNIQUE'Unds'ID{}("783a649ba399db40206ac29b263c5e04486f7fdf11df074c9240787a23d0da5b")]

// rule `project:ChoiceCellFragment`(inj{ChoiceCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8c2c3b64a293cf91e3687b19247b58587fdd292254e6733a4462262b8f697dd), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCellFragment{}, SortKItem{}}(VarK:SortChoiceCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceCellFragment{},R} (
      Lblproject'Coln'ChoiceCellFragment{}(X0:SortK{}),
     \and{SortChoiceCellFragment{}} (
       VarK:SortChoiceCellFragment{},
        \top{SortChoiceCellFragment{}}())))
  [UNIQUE'Unds'ID{}("d8c2c3b64a293cf91e3687b19247b58587fdd292254e6733a4462262b8f697dd")]

// rule `project:ChoiceCellMap`(inj{ChoiceCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ec31df64edc68dc4d24f7389f8ee088f613e0e1404935dd4776a56f5c59ba00), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceCellMap{}, SortKItem{}}(VarK:SortChoiceCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceCellMap{},R} (
      Lblproject'Coln'ChoiceCellMap{}(X0:SortK{}),
     \and{SortChoiceCellMap{}} (
       VarK:SortChoiceCellMap{},
        \top{SortChoiceCellMap{}}())))
  [UNIQUE'Unds'ID{}("2ec31df64edc68dc4d24f7389f8ee088f613e0e1404935dd4776a56f5c59ba00")]

// rule `project:ChoiceIdCell`(inj{ChoiceIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16aee376ac8c844f93bbfd9ce1f38329e20acbac4215295db73d8bb9812ebff7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceIdCell{}, SortKItem{}}(VarK:SortChoiceIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceIdCell{},R} (
      Lblproject'Coln'ChoiceIdCell{}(X0:SortK{}),
     \and{SortChoiceIdCell{}} (
       VarK:SortChoiceIdCell{},
        \top{SortChoiceIdCell{}}())))
  [UNIQUE'Unds'ID{}("16aee376ac8c844f93bbfd9ce1f38329e20acbac4215295db73d8bb9812ebff7")]

// rule `project:ChoiceIdCellOpt`(inj{ChoiceIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa3bc2bdd90dd8719807275a856185cc93f597394c3ad020fddbe6d83398e35e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceIdCellOpt{}, SortKItem{}}(VarK:SortChoiceIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceIdCellOpt{},R} (
      Lblproject'Coln'ChoiceIdCellOpt{}(X0:SortK{}),
     \and{SortChoiceIdCellOpt{}} (
       VarK:SortChoiceIdCellOpt{},
        \top{SortChoiceIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("aa3bc2bdd90dd8719807275a856185cc93f597394c3ad020fddbe6d83398e35e")]

// rule `project:ChoiceOrBlock`(inj{ChoiceOrBlock,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e5abbaaaf0da1dc8c635ff7121311867f1136b808118fff5abecaa665c0b90d6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceOrBlock{}, SortKItem{}}(VarK:SortChoiceOrBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceOrBlock{},R} (
      Lblproject'Coln'ChoiceOrBlock{}(X0:SortK{}),
     \and{SortChoiceOrBlock{}} (
       VarK:SortChoiceOrBlock{},
        \top{SortChoiceOrBlock{}}())))
  [UNIQUE'Unds'ID{}("e5abbaaaf0da1dc8c635ff7121311867f1136b808118fff5abecaa665c0b90d6")]

// rule `project:ChoiceOrBlocks`(inj{ChoiceOrBlocks,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f84073efe106aaf72c63227ca458189936b28b9778846b7d94ad037003cfc41b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoiceOrBlocks{}, SortKItem{}}(VarK:SortChoiceOrBlocks{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoiceOrBlocks{},R} (
      Lblproject'Coln'ChoiceOrBlocks{}(X0:SortK{}),
     \and{SortChoiceOrBlocks{}} (
       VarK:SortChoiceOrBlocks{},
        \top{SortChoiceOrBlocks{}}())))
  [UNIQUE'Unds'ID{}("f84073efe106aaf72c63227ca458189936b28b9778846b7d94ad037003cfc41b")]

// rule `project:ChoicesCell`(inj{ChoicesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39e1dd2295e64e562ff29febe4ecd07360bb7a195dd476edcfb65574778136c4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCell{}, SortKItem{}}(VarK:SortChoicesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoicesCell{},R} (
      Lblproject'Coln'ChoicesCell{}(X0:SortK{}),
     \and{SortChoicesCell{}} (
       VarK:SortChoicesCell{},
        \top{SortChoicesCell{}}())))
  [UNIQUE'Unds'ID{}("39e1dd2295e64e562ff29febe4ecd07360bb7a195dd476edcfb65574778136c4")]

// rule `project:ChoicesCellFragment`(inj{ChoicesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61f9c80b572639ecceeb6e1288895e530ccc2074d94064f94abe9c1536dcb643), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCellFragment{}, SortKItem{}}(VarK:SortChoicesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoicesCellFragment{},R} (
      Lblproject'Coln'ChoicesCellFragment{}(X0:SortK{}),
     \and{SortChoicesCellFragment{}} (
       VarK:SortChoicesCellFragment{},
        \top{SortChoicesCellFragment{}}())))
  [UNIQUE'Unds'ID{}("61f9c80b572639ecceeb6e1288895e530ccc2074d94064f94abe9c1536dcb643")]

// rule `project:ChoicesCellOpt`(inj{ChoicesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(02093dfbe94adad76499b4f36b7102e99aefa998ae7cd0bb968d3e0584db7d52), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortChoicesCellOpt{}, SortKItem{}}(VarK:SortChoicesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortChoicesCellOpt{},R} (
      Lblproject'Coln'ChoicesCellOpt{}(X0:SortK{}),
     \and{SortChoicesCellOpt{}} (
       VarK:SortChoicesCellOpt{},
        \top{SortChoicesCellOpt{}}())))
  [UNIQUE'Unds'ID{}("02093dfbe94adad76499b4f36b7102e99aefa998ae7cd0bb968d3e0584db7d52")]

// rule `project:CidCell`(inj{CidCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39f000ef5b682b7bbd907563b07f5a8049a92dab65264d06c4716acdcae00e34), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCidCell{}, SortKItem{}}(VarK:SortCidCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCidCell{},R} (
      Lblproject'Coln'CidCell{}(X0:SortK{}),
     \and{SortCidCell{}} (
       VarK:SortCidCell{},
        \top{SortCidCell{}}())))
  [UNIQUE'Unds'ID{}("39f000ef5b682b7bbd907563b07f5a8049a92dab65264d06c4716acdcae00e34")]

// rule `project:CidCellOpt`(inj{CidCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ece5cd54d8bbbfcd31fac7a438f13fc41fd506d84d974936495d3f49ee0aeccc), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCidCellOpt{}, SortKItem{}}(VarK:SortCidCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCidCellOpt{},R} (
      Lblproject'Coln'CidCellOpt{}(X0:SortK{}),
     \and{SortCidCellOpt{}} (
       VarK:SortCidCellOpt{},
        \top{SortCidCellOpt{}}())))
  [UNIQUE'Unds'ID{}("ece5cd54d8bbbfcd31fac7a438f13fc41fd506d84d974936495d3f49ee0aeccc")]

// rule `project:CsequenceCell`(inj{CsequenceCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e5a67531a6e319d4d1c6c183c6f12075ae4177c9ded90153ecd8a679df508fa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCsequenceCell{}, SortKItem{}}(VarK:SortCsequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCsequenceCell{},R} (
      Lblproject'Coln'CsequenceCell{}(X0:SortK{}),
     \and{SortCsequenceCell{}} (
       VarK:SortCsequenceCell{},
        \top{SortCsequenceCell{}}())))
  [UNIQUE'Unds'ID{}("5e5a67531a6e319d4d1c6c183c6f12075ae4177c9ded90153ecd8a679df508fa")]

// rule `project:CsequenceCellOpt`(inj{CsequenceCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cb00563240dabdc76a01b3b9d73d5657a7bf62ad8136ccd14ee1ca1556342bdf), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCsequenceCellOpt{}, SortKItem{}}(VarK:SortCsequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCsequenceCellOpt{},R} (
      Lblproject'Coln'CsequenceCellOpt{}(X0:SortK{}),
     \and{SortCsequenceCellOpt{}} (
       VarK:SortCsequenceCellOpt{},
        \top{SortCsequenceCellOpt{}}())))
  [UNIQUE'Unds'ID{}("cb00563240dabdc76a01b3b9d73d5657a7bf62ad8136ccd14ee1ca1556342bdf")]

// rule `project:CurIdCell`(inj{CurIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97b7d45da7459fa839ae6a8d89cde6cb29bf180e22471a5faec8de0761c02e8a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurIdCell{}, SortKItem{}}(VarK:SortCurIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCurIdCell{},R} (
      Lblproject'Coln'CurIdCell{}(X0:SortK{}),
     \and{SortCurIdCell{}} (
       VarK:SortCurIdCell{},
        \top{SortCurIdCell{}}())))
  [UNIQUE'Unds'ID{}("97b7d45da7459fa839ae6a8d89cde6cb29bf180e22471a5faec8de0761c02e8a")]

// rule `project:CurIdCellOpt`(inj{CurIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e4f696b871c508df31cd7bec1bfe4bf67f0c7a6fd71a4a54380bb881d76e12f), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurIdCellOpt{}, SortKItem{}}(VarK:SortCurIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCurIdCellOpt{},R} (
      Lblproject'Coln'CurIdCellOpt{}(X0:SortK{}),
     \and{SortCurIdCellOpt{}} (
       VarK:SortCurIdCellOpt{},
        \top{SortCurIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3e4f696b871c508df31cd7bec1bfe4bf67f0c7a6fd71a4a54380bb881d76e12f")]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217")]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca")]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e")]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [UNIQUE'Unds'ID{}("2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42")]

// rule `project:Havoc`(inj{Havoc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(770caa8abbba10188a3f9d2d1fc384195b85d5d844b72431ce564f7156cf7630), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHavoc{}, SortKItem{}}(VarK:SortHavoc{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHavoc{},R} (
      Lblproject'Coln'Havoc{}(X0:SortK{}),
     \and{SortHavoc{}} (
       VarK:SortHavoc{},
        \top{SortHavoc{}}())))
  [UNIQUE'Unds'ID{}("770caa8abbba10188a3f9d2d1fc384195b85d5d844b72431ce564f7156cf7630")]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554")]

// rule `project:IdCell`(inj{IdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarK:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      Lblproject'Coln'IdCell{}(X0:SortK{}),
     \and{SortIdCell{}} (
       VarK:SortIdCell{},
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a")]

// rule `project:IdCellOpt`(inj{IdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarK:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCellOpt{},R} (
      Lblproject'Coln'IdCellOpt{}(X0:SortK{}),
     \and{SortIdCellOpt{}} (
       VarK:SortIdCellOpt{},
        \top{SortIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45")]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b")]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a")]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24")]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30")]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [UNIQUE'Unds'ID{}("1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29")]

// rule `project:Line`(inj{Line,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cebb042ff30288031461bb4f6f797790f213384e9fc36e371f7f703228f912f2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLine{}, SortKItem{}}(VarK:SortLine{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLine{},R} (
      Lblproject'Coln'Line{}(X0:SortK{}),
     \and{SortLine{}} (
       VarK:SortLine{},
        \top{SortLine{}}())))
  [UNIQUE'Unds'ID{}("cebb042ff30288031461bb4f6f797790f213384e9fc36e371f7f703228f912f2")]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5")]

// rule `project:Literal`(inj{Literal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4bac9a609f123cfe8dc840a7d5bd59306901c6b9dc69d9665dff550fc5aa24c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLiteral{}, SortKItem{}}(VarK:SortLiteral{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLiteral{},R} (
      Lblproject'Coln'Literal{}(X0:SortK{}),
     \and{SortLiteral{}} (
       VarK:SortLiteral{},
        \top{SortLiteral{}}())))
  [UNIQUE'Unds'ID{}("e4bac9a609f123cfe8dc840a7d5bd59306901c6b9dc69d9665dff550fc5aa24c")]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598")]

// rule `project:OidCell`(inj{OidCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b5b66213d4c721a0217f10fd98a0105fba5fa5e6ab26fe53987bf9e53182b6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOidCell{}, SortKItem{}}(VarK:SortOidCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOidCell{},R} (
      Lblproject'Coln'OidCell{}(X0:SortK{}),
     \and{SortOidCell{}} (
       VarK:SortOidCell{},
        \top{SortOidCell{}}())))
  [UNIQUE'Unds'ID{}("23b5b66213d4c721a0217f10fd98a0105fba5fa5e6ab26fe53987bf9e53182b6")]

// rule `project:OidCellOpt`(inj{OidCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4b9db7f3fd0472419dee78e4c863bc2e6714b153fe6e8de806a68530a706db10), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOidCellOpt{}, SortKItem{}}(VarK:SortOidCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOidCellOpt{},R} (
      Lblproject'Coln'OidCellOpt{}(X0:SortK{}),
     \and{SortOidCellOpt{}} (
       VarK:SortOidCellOpt{},
        \top{SortOidCellOpt{}}())))
  [UNIQUE'Unds'ID{}("4b9db7f3fd0472419dee78e4c863bc2e6714b153fe6e8de806a68530a706db10")]

// rule `project:Operation`(inj{Operation,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(802ded3ece7fe72e2aa03d40a02c134aa8959fb51babe2cb7b3c433e47a153f0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOperation{}, SortKItem{}}(VarK:SortOperation{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOperation{},R} (
      Lblproject'Coln'Operation{}(X0:SortK{}),
     \and{SortOperation{}} (
       VarK:SortOperation{},
        \top{SortOperation{}}())))
  [UNIQUE'Unds'ID{}("802ded3ece7fe72e2aa03d40a02c134aa8959fb51babe2cb7b3c433e47a153f0")]

// rule `project:OrCell`(inj{OrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(77c71f116c321d753a5bd0340f43ef350dee320ae6c09b5832123ec2cc73255d), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCell{}, SortKItem{}}(VarK:SortOrCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrCell{},R} (
      Lblproject'Coln'OrCell{}(X0:SortK{}),
     \and{SortOrCell{}} (
       VarK:SortOrCell{},
        \top{SortOrCell{}}())))
  [UNIQUE'Unds'ID{}("77c71f116c321d753a5bd0340f43ef350dee320ae6c09b5832123ec2cc73255d")]

// rule `project:OrCellFragment`(inj{OrCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65f558d13501513ec252980519da7b352854bc48efbdc8eea435a6fff9a4e13e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCellFragment{}, SortKItem{}}(VarK:SortOrCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrCellFragment{},R} (
      Lblproject'Coln'OrCellFragment{}(X0:SortK{}),
     \and{SortOrCellFragment{}} (
       VarK:SortOrCellFragment{},
        \top{SortOrCellFragment{}}())))
  [UNIQUE'Unds'ID{}("65f558d13501513ec252980519da7b352854bc48efbdc8eea435a6fff9a4e13e")]

// rule `project:OrCellMap`(inj{OrCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5966c97412412c7782b9f5341a5eb007c323ee6cc6a791cc3872cb6e15cf97af), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrCellMap{}, SortKItem{}}(VarK:SortOrCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrCellMap{},R} (
      Lblproject'Coln'OrCellMap{}(X0:SortK{}),
     \and{SortOrCellMap{}} (
       VarK:SortOrCellMap{},
        \top{SortOrCellMap{}}())))
  [UNIQUE'Unds'ID{}("5966c97412412c7782b9f5341a5eb007c323ee6cc6a791cc3872cb6e15cf97af")]

// rule `project:OrIdCell`(inj{OrIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(01a327af653f7f3c279195b406fc84d3dcaf6bc7641bdd38ed5bd770abc981bf), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrIdCell{}, SortKItem{}}(VarK:SortOrIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrIdCell{},R} (
      Lblproject'Coln'OrIdCell{}(X0:SortK{}),
     \and{SortOrIdCell{}} (
       VarK:SortOrIdCell{},
        \top{SortOrIdCell{}}())))
  [UNIQUE'Unds'ID{}("01a327af653f7f3c279195b406fc84d3dcaf6bc7641bdd38ed5bd770abc981bf")]

// rule `project:OrIdCellOpt`(inj{OrIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b6940528b09daf3f74eeac13c5f4000274b777978e9d930118ac51bc146e683), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrIdCellOpt{}, SortKItem{}}(VarK:SortOrIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrIdCellOpt{},R} (
      Lblproject'Coln'OrIdCellOpt{}(X0:SortK{}),
     \and{SortOrIdCellOpt{}} (
       VarK:SortOrIdCellOpt{},
        \top{SortOrIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("6b6940528b09daf3f74eeac13c5f4000274b777978e9d930118ac51bc146e683")]

// rule `project:OrsCell`(inj{OrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(32d367c0b7f1b0f25e366be56dc7e798a12d7fa713b0025a9e9a181bfea1c5f2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCell{}, SortKItem{}}(VarK:SortOrsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrsCell{},R} (
      Lblproject'Coln'OrsCell{}(X0:SortK{}),
     \and{SortOrsCell{}} (
       VarK:SortOrsCell{},
        \top{SortOrsCell{}}())))
  [UNIQUE'Unds'ID{}("32d367c0b7f1b0f25e366be56dc7e798a12d7fa713b0025a9e9a181bfea1c5f2")]

// rule `project:OrsCellFragment`(inj{OrsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(26e8a85efa34d3da99e6eb53f3b6af6fbbd713294b6cfed379c080ad00fd68ce), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCellFragment{}, SortKItem{}}(VarK:SortOrsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrsCellFragment{},R} (
      Lblproject'Coln'OrsCellFragment{}(X0:SortK{}),
     \and{SortOrsCellFragment{}} (
       VarK:SortOrsCellFragment{},
        \top{SortOrsCellFragment{}}())))
  [UNIQUE'Unds'ID{}("26e8a85efa34d3da99e6eb53f3b6af6fbbd713294b6cfed379c080ad00fd68ce")]

// rule `project:OrsCellOpt`(inj{OrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7de81f7192e69130c7b7842aea6c501569fed6d245b9b07badb5dde2597c02b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOrsCellOpt{}, SortKItem{}}(VarK:SortOrsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOrsCellOpt{},R} (
      Lblproject'Coln'OrsCellOpt{}(X0:SortK{}),
     \and{SortOrsCellOpt{}} (
       VarK:SortOrsCellOpt{},
        \top{SortOrsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d7de81f7192e69130c7b7842aea6c501569fed6d245b9b07badb5dde2597c02b")]

// rule `project:OsequenceCell`(inj{OsequenceCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ac48b2c219bfb45c188255f04b073be4a49ad22a43584e7ebc2280379217896), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOsequenceCell{}, SortKItem{}}(VarK:SortOsequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOsequenceCell{},R} (
      Lblproject'Coln'OsequenceCell{}(X0:SortK{}),
     \and{SortOsequenceCell{}} (
       VarK:SortOsequenceCell{},
        \top{SortOsequenceCell{}}())))
  [UNIQUE'Unds'ID{}("1ac48b2c219bfb45c188255f04b073be4a49ad22a43584e7ebc2280379217896")]

// rule `project:OsequenceCellOpt`(inj{OsequenceCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b86ca68eb0a3add412b33d42ca629ab360051ba04159a416ee0886ad55c9394b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOsequenceCellOpt{}, SortKItem{}}(VarK:SortOsequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOsequenceCellOpt{},R} (
      Lblproject'Coln'OsequenceCellOpt{}(X0:SortK{}),
     \and{SortOsequenceCellOpt{}} (
       VarK:SortOsequenceCellOpt{},
        \top{SortOsequenceCellOpt{}}())))
  [UNIQUE'Unds'ID{}("b86ca68eb0a3add412b33d42ca629ab360051ba04159a416ee0886ad55c9394b")]

// rule `project:Program`(inj{Program,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b21c80dd6e55cb4114a8287cdf76440e97a1136d9dedfe7a6f8aa0af36c194aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortProgram{}, SortKItem{}}(VarK:SortProgram{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortProgram{},R} (
      Lblproject'Coln'Program{}(X0:SortK{}),
     \and{SortProgram{}} (
       VarK:SortProgram{},
        \top{SortProgram{}}())))
  [UNIQUE'Unds'ID{}("b21c80dd6e55cb4114a8287cdf76440e97a1136d9dedfe7a6f8aa0af36c194aa")]

// rule `project:Sequence`(inj{Sequence,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(267c4b9f1a6b29d79fd1ad7726a131d8c8a9e9197f67c7f2dd5aa4e0c6d45871), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequence{}, SortKItem{}}(VarK:SortSequence{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSequence{},R} (
      Lblproject'Coln'Sequence{}(X0:SortK{}),
     \and{SortSequence{}} (
       VarK:SortSequence{},
        \top{SortSequence{}}())))
  [UNIQUE'Unds'ID{}("267c4b9f1a6b29d79fd1ad7726a131d8c8a9e9197f67c7f2dd5aa4e0c6d45871")]

// rule `project:SequenceCell`(inj{SequenceCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd47d118a40cf15fe26e4f5032d3b50a22ab7caba9c52b1503841a37dec2df39), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequenceCell{}, SortKItem{}}(VarK:SortSequenceCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSequenceCell{},R} (
      Lblproject'Coln'SequenceCell{}(X0:SortK{}),
     \and{SortSequenceCell{}} (
       VarK:SortSequenceCell{},
        \top{SortSequenceCell{}}())))
  [UNIQUE'Unds'ID{}("fd47d118a40cf15fe26e4f5032d3b50a22ab7caba9c52b1503841a37dec2df39")]

// rule `project:SequenceCellOpt`(inj{SequenceCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37b23d090308e460753ef317fc81f6e403441ee171ac6eff1beadf8ea73040b3), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSequenceCellOpt{}, SortKItem{}}(VarK:SortSequenceCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSequenceCellOpt{},R} (
      Lblproject'Coln'SequenceCellOpt{}(X0:SortK{}),
     \and{SortSequenceCellOpt{}} (
       VarK:SortSequenceCellOpt{},
        \top{SortSequenceCellOpt{}}())))
  [UNIQUE'Unds'ID{}("37b23d090308e460753ef317fc81f6e403441ee171ac6eff1beadf8ea73040b3")]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0")]

// rule `project:StateCell`(inj{StateCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0573483956a8961d6c85cbcde0f7d23fd94a88f5f11c72a54f63e4975f3744aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCell{}, SortKItem{}}(VarK:SortStateCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStateCell{},R} (
      Lblproject'Coln'StateCell{}(X0:SortK{}),
     \and{SortStateCell{}} (
       VarK:SortStateCell{},
        \top{SortStateCell{}}())))
  [UNIQUE'Unds'ID{}("0573483956a8961d6c85cbcde0f7d23fd94a88f5f11c72a54f63e4975f3744aa")]

// rule `project:StateCellFragment`(inj{StateCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(071315163a6673caebca9803acd730c9d5ac2b00ab630c6e3f67f4e949654bc4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCellFragment{}, SortKItem{}}(VarK:SortStateCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStateCellFragment{},R} (
      Lblproject'Coln'StateCellFragment{}(X0:SortK{}),
     \and{SortStateCellFragment{}} (
       VarK:SortStateCellFragment{},
        \top{SortStateCellFragment{}}())))
  [UNIQUE'Unds'ID{}("071315163a6673caebca9803acd730c9d5ac2b00ab630c6e3f67f4e949654bc4")]

// rule `project:StateCellOpt`(inj{StateCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9c7307bada1aa928bd077216781fb45fe226c28e19ec950318b7cfa9e6ae9be), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStateCellOpt{}, SortKItem{}}(VarK:SortStateCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStateCellOpt{},R} (
      Lblproject'Coln'StateCellOpt{}(X0:SortK{}),
     \and{SortStateCellOpt{}} (
       VarK:SortStateCellOpt{},
        \top{SortStateCellOpt{}}())))
  [UNIQUE'Unds'ID{}("e9c7307bada1aa928bd077216781fb45fe226c28e19ec950318b7cfa9e6ae9be")]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba")]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [UNIQUE'Unds'ID{}("fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c")]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a")]

// rule `project:Transition`(inj{Transition,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afa86774b6cb3955b1b80d12fa6333723df66bfa1d9520ac06dc74cb34b4760d), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransition{}, SortKItem{}}(VarK:SortTransition{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransition{},R} (
      Lblproject'Coln'Transition{}(X0:SortK{}),
     \and{SortTransition{}} (
       VarK:SortTransition{},
        \top{SortTransition{}}())))
  [UNIQUE'Unds'ID{}("afa86774b6cb3955b1b80d12fa6333723df66bfa1d9520ac06dc74cb34b4760d")]

// rule `project:TransitionCell`(inj{TransitionCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ae77f2f2d708db75ad65938a8a24a3590bd194b92b4d8d51ace8acaa1d6c9156), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCell{}, SortKItem{}}(VarK:SortTransitionCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionCell{},R} (
      Lblproject'Coln'TransitionCell{}(X0:SortK{}),
     \and{SortTransitionCell{}} (
       VarK:SortTransitionCell{},
        \top{SortTransitionCell{}}())))
  [UNIQUE'Unds'ID{}("ae77f2f2d708db75ad65938a8a24a3590bd194b92b4d8d51ace8acaa1d6c9156")]

// rule `project:TransitionCellFragment`(inj{TransitionCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15923df1d74332313ac04bee962debde9cd57feca1c202135fc04ec7c73d1a5c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCellFragment{}, SortKItem{}}(VarK:SortTransitionCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionCellFragment{},R} (
      Lblproject'Coln'TransitionCellFragment{}(X0:SortK{}),
     \and{SortTransitionCellFragment{}} (
       VarK:SortTransitionCellFragment{},
        \top{SortTransitionCellFragment{}}())))
  [UNIQUE'Unds'ID{}("15923df1d74332313ac04bee962debde9cd57feca1c202135fc04ec7c73d1a5c")]

// rule `project:TransitionCellMap`(inj{TransitionCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad0c1bcfd57d528cd0b232384da31664a6946e725535a9e9ecb9f2ab4e29fa8b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionCellMap{}, SortKItem{}}(VarK:SortTransitionCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionCellMap{},R} (
      Lblproject'Coln'TransitionCellMap{}(X0:SortK{}),
     \and{SortTransitionCellMap{}} (
       VarK:SortTransitionCellMap{},
        \top{SortTransitionCellMap{}}())))
  [UNIQUE'Unds'ID{}("ad0c1bcfd57d528cd0b232384da31664a6946e725535a9e9ecb9f2ab4e29fa8b")]

// rule `project:Transitions`(inj{Transitions,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4f25c7f98ef578196e78db56596e5b08ab6f84329dc47431b67e4d1aa65aade), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitions{}, SortKItem{}}(VarK:SortTransitions{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitions{},R} (
      Lblproject'Coln'Transitions{}(X0:SortK{}),
     \and{SortTransitions{}} (
       VarK:SortTransitions{},
        \top{SortTransitions{}}())))
  [UNIQUE'Unds'ID{}("c4f25c7f98ef578196e78db56596e5b08ab6f84329dc47431b67e4d1aa65aade")]

// rule `project:TransitionsCell`(inj{TransitionsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab5ecb4ffa7b438b35734dc0fbf7bb00fa603e75da29a1aa5a70873bdf5680b1), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCell{}, SortKItem{}}(VarK:SortTransitionsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionsCell{},R} (
      Lblproject'Coln'TransitionsCell{}(X0:SortK{}),
     \and{SortTransitionsCell{}} (
       VarK:SortTransitionsCell{},
        \top{SortTransitionsCell{}}())))
  [UNIQUE'Unds'ID{}("ab5ecb4ffa7b438b35734dc0fbf7bb00fa603e75da29a1aa5a70873bdf5680b1")]

// rule `project:TransitionsCellFragment`(inj{TransitionsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(495e2f6f99a0f46bebda6575c52b81ff885a9af84043ead76e9acad36b7fdfe9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCellFragment{}, SortKItem{}}(VarK:SortTransitionsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionsCellFragment{},R} (
      Lblproject'Coln'TransitionsCellFragment{}(X0:SortK{}),
     \and{SortTransitionsCellFragment{}} (
       VarK:SortTransitionsCellFragment{},
        \top{SortTransitionsCellFragment{}}())))
  [UNIQUE'Unds'ID{}("495e2f6f99a0f46bebda6575c52b81ff885a9af84043ead76e9acad36b7fdfe9")]

// rule `project:TransitionsCellOpt`(inj{TransitionsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3be2edd1f0f2d9f3028094ba83ea7efacd9b229a1725bb09b064a5f500142cff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTransitionsCellOpt{}, SortKItem{}}(VarK:SortTransitionsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTransitionsCellOpt{},R} (
      Lblproject'Coln'TransitionsCellOpt{}(X0:SortK{}),
     \and{SortTransitionsCellOpt{}} (
       VarK:SortTransitionsCellOpt{},
        \top{SortTransitionsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3be2edd1f0f2d9f3028094ba83ea7efacd9b229a1725bb09b064a5f500142cff")]

// rule `project:VariableDeclaration`(inj{VariableDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0441211cd8dfea0c7df78195fc308e5015e7e7cd95e02a3c42f520cd124a8caa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariableDeclaration{}, SortKItem{}}(VarK:SortVariableDeclaration{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVariableDeclaration{},R} (
      Lblproject'Coln'VariableDeclaration{}(X0:SortK{}),
     \and{SortVariableDeclaration{}} (
       VarK:SortVariableDeclaration{},
        \top{SortVariableDeclaration{}}())))
  [UNIQUE'Unds'ID{}("0441211cd8dfea0c7df78195fc308e5015e7e7cd95e02a3c42f520cd124a8caa")]

// rule `project:VariablesCell`(inj{VariablesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c22186b5f09117a298d9df8335b091ddedd878b2ffd4d3c82d24b41a6bd0439a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariablesCell{}, SortKItem{}}(VarK:SortVariablesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVariablesCell{},R} (
      Lblproject'Coln'VariablesCell{}(X0:SortK{}),
     \and{SortVariablesCell{}} (
       VarK:SortVariablesCell{},
        \top{SortVariablesCell{}}())))
  [UNIQUE'Unds'ID{}("c22186b5f09117a298d9df8335b091ddedd878b2ffd4d3c82d24b41a6bd0439a")]

// rule `project:VariablesCellOpt`(inj{VariablesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59f1730576484a273ad3ca171ff51ab446dfa85ae9191102e5e3ecb2b56d2174), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVariablesCellOpt{}, SortKItem{}}(VarK:SortVariablesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVariablesCellOpt{},R} (
      Lblproject'Coln'VariablesCellOpt{}(X0:SortK{}),
     \and{SortVariablesCellOpt{}} (
       VarK:SortVariablesCellOpt{},
        \top{SortVariablesCellOpt{}}())))
  [UNIQUE'Unds'ID{}("59f1730576484a273ad3ca171ff51ab446dfa85ae9191102e5e3ecb2b56d2174")]

// rule `project:Work`(inj{Work,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bf9b7135e312e2e8472020a7b93e471dee891507c17f09015ba360f2c3897188), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortWork{}, SortKItem{}}(VarK:SortWork{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortWork{},R} (
      Lblproject'Coln'Work{}(X0:SortK{}),
     \and{SortWork{}} (
       VarK:SortWork{},
        \top{SortWork{}}())))
  [UNIQUE'Unds'ID{}("bf9b7135e312e2e8472020a7b93e471dee891507c17f09015ba360f2c3897188")]

// rule pushList(K,L1)=>`_List_`(`ListItem`(K),L1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6967050cc4ec32c2d34d52f5577e09120f730420d2c5dc838cba81d04c57adf), org.kframework.attributes.Location(Location(954,8,954,54)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortKItem{}, R} (
            X0:SortKItem{},
            VarK:SortKItem{}
          ),\and{R} (
          \in{SortList{}, R} (
            X1:SortList{},
            VarL1:SortList{}
          ),
          \top{R} ()
        ))),
    \equals{SortList{},R} (
      LblpushList{}(X0:SortKItem{},X1:SortList{}),
     \and{SortList{}} (
       Lbl'Unds'List'Unds'{}(LblListItem{}(VarK:SortKItem{}),VarL1:SortList{}),
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("f6967050cc4ec32c2d34d52f5577e09120f730420d2c5dc838cba81d04c57adf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(954,8,954,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1429,8,1429,164)), org.kframework.attributes.Source(Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [symbol(#ruleNoConditions)])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,8,1429,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/9bclvn43gf6hrr75hxjw35icz36pcjaa-k-7.1.212-51bd676326a0dbfbce7c64e41247b7126b639177/include/kframework/builtin/domains.md)")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,1,138,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/mnt/e/bme/dev/onlab/k/project/xsts.k)")]
